{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/noflo/lib/NoFlo.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/events/events.js","webpack:///./node_modules/debug/src/browser.js","webpack:///./node_modules/noflo/lib/IP.js","webpack:///./node_modules/fbp-graph/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/noflo/lib/InternalSocket.js","webpack:///./node_modules/noflo/lib/Platform.js","webpack:///./node_modules/noflo/lib/ComponentLoader.js","webpack:///./node_modules/get-function-params/src/delim.js","webpack:///./node_modules/noflo-runtime-postmessage/runtime/postmessage.js","webpack:///./node_modules/clone/clone.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/noflo/lib/Network.js","webpack:///./node_modules/util/util.js","webpack:///./node_modules/noflo/lib/Utils.js","webpack:///./node_modules/noflo/lib/Component.js","webpack:///./node_modules/noflo/lib/Ports.js","webpack:///./node_modules/noflo/lib/InPort.js","webpack:///./node_modules/noflo/lib/BasePort.js","webpack:///./node_modules/noflo/lib/OutPort.js","webpack:///./node_modules/get-function-params/src/patterns.js","webpack:///./node_modules/noflo-runtime-base/Base.js","webpack:///./node_modules/path-browserify/index.js","webpack:///./node_modules/noflo-runtime-postmessage/runtime/utils.js","webpack:///./node_modules/fbp-graph/lib/Graph.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/fbp-graph/lib/Platform.js","webpack:///./node_modules/fbp/lib/fbp.js","webpack:///./node_modules/tv4/tv4.js","webpack:///./node_modules/fbp-graph/lib/Journal.js","webpack:///./node_modules/noflo/lib/loader/register.js","webpack:///./node_modules/noflo-component-loader/lib/loader.js","webpack:///./components/DoSomething.js","webpack:///./node_modules/noflo/components/Graph.js","webpack:///./node_modules/noflo-core/components/Callback.coffee","webpack:///./node_modules/noflo-core/components/Copy.coffee","webpack:///./node_modules/owl-deepcopy/deep_copy.js","webpack:///./node_modules/noflo-core/components/DisconnectAfterPacket.coffee","webpack:///./node_modules/noflo-core/components/Drop.coffee","webpack:///./node_modules/noflo-core/components/Kick.coffee","webpack:///./node_modules/noflo-core/components/MakeFunction.coffee","webpack:///./node_modules/noflo-core/components/Merge.coffee","webpack:///./node_modules/noflo-core/components/Output.coffee","webpack:///./node_modules/util/support/isBufferBrowser.js","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///./node_modules/noflo-core/components/ReadGlobal.coffee","webpack:///./node_modules/noflo-core/components/Repeat.coffee","webpack:///./node_modules/noflo-core/components/RepeatAsync.coffee","webpack:///./node_modules/noflo-core/components/RepeatDelayed.coffee","webpack:///./node_modules/noflo-core/components/RunInterval.coffee","webpack:///./node_modules/noflo-core/components/RunTimeout.coffee","webpack:///./node_modules/noflo-core/components/SendNext.coffee","webpack:///./node_modules/noflo-core/components/Split.coffee","webpack:///./node_modules/noflo-dom/components/AddClass.coffee","webpack:///./node_modules/noflo-dom/components/AppendChild.coffee","webpack:///./node_modules/noflo-dom/components/CreateElement.coffee","webpack:///./node_modules/noflo-dom/components/CreateFragment.coffee","webpack:///./node_modules/noflo-dom/components/GetAttribute.coffee","webpack:///./node_modules/noflo-dom/components/GetElement.coffee","webpack:///./node_modules/noflo-dom/components/HasClass.coffee","webpack:///./node_modules/noflo-dom/components/Listen.coffee","webpack:///./node_modules/noflo-dom/components/ReadHtml.coffee","webpack:///./node_modules/noflo-dom/components/RemoveClass.coffee","webpack:///./node_modules/noflo-dom/components/RemoveElement.coffee","webpack:///./node_modules/noflo-dom/components/RequestAnimationFrame.coffee","webpack:///./node_modules/noflo-dom/components/SetAttribute.coffee","webpack:///./node_modules/noflo-dom/components/WriteHtml.coffee","webpack:///./node_modules/noflo-interaction/components/Focus.coffee","webpack:///./node_modules/noflo-interaction/components/ListenChange.coffee","webpack:///./node_modules/noflo-interaction/components/ListenDrag.coffee","webpack:///./node_modules/noflo-interaction/components/ListenEvent.coffee","webpack:///./node_modules/noflo-interaction/components/ListenHash.coffee","webpack:///./node_modules/noflo-interaction/components/ListenKeyboard.coffee","webpack:///./node_modules/noflo-interaction/components/ListenKeyboardShortcuts.coffee","webpack:///./node_modules/noflo-interaction/components/ListenMouse.coffee","webpack:///./node_modules/noflo-interaction/components/ListenPointer.coffee","webpack:///./node_modules/noflo-interaction/components/ListenResize.coffee","webpack:///./node_modules/noflo-interaction/components/ListenScroll.coffee","webpack:///./node_modules/noflo-interaction/components/ListenSpeech.coffee","webpack:///./node_modules/noflo-interaction/components/ListenTouch.coffee","webpack:///./node_modules/noflo-interaction/components/ReadCoordinates.coffee","webpack:///./node_modules/noflo-interaction/components/ReadGamepad.coffee","webpack:///./node_modules/noflo-interaction/components/SetHash.coffee","webpack:///./node_modules/debug/src/common.js","webpack:///./node_modules/ms/index.js","webpack:///./node_modules/noflo/lib/Helpers.js","webpack:///./node_modules/noflo/lib/AsCallback.js","webpack:///./node_modules/noflo/lib/AsComponent.js","webpack:///./node_modules/get-function-params/index.js","webpack:///./node_modules/get-function-params/src/encodeStrings.js","webpack:///./node_modules/get-function-params/src/encode.js","webpack:///./node_modules/get-function-params/src/decode.js","webpack:///./node_modules/noflo-runtime-postmessage/index.js","webpack:///./node_modules/noflo-runtime-base/protocol/Runtime.js","webpack:///./node_modules/noflo-runtime-base/protocol/Graph.js","webpack:///./node_modules/noflo-runtime-base/protocol/Network.js","webpack:///./node_modules/noflo-runtime-base/protocol/Component.js","webpack:///./node_modules/debounce/index.js","webpack:///./node_modules/noflo-runtime-base/utils.js","webpack:///./node_modules/noflo-runtime-base/trace.js","webpack:///./node_modules/json-stringify-safe/stringify.js","webpack:///./node_modules/temp/lib/temp.js","webpack:///./node_modules/rimraf/rimraf.js","webpack:///./node_modules/assert/assert.js","webpack:///./node_modules/os-tmpdir/index.js","webpack:///./node_modules/noflo-runtime-base/direct.js","webpack:///./node_modules/noflo-runtime-postmessage/runtime/iframe.js","webpack:///./node_modules/noflo-runtime-postmessage/runtime/opener.js","webpack:///./node_modules/noflo-runtime-headless/spec/build/webpack.entry.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","fbpGraph","ports","graph","Graph","journal","Journal","Network","isBrowser","ComponentLoader","Component","helpers","InPorts","OutPorts","InPort","OutPort","internalSocket","IP","createNetwork","callback","options","network","networkReady","delay","err","start","loader","listComponents","nodes","length","connect","loadFile","file","baseDir","net","saveFile","save","asCallback","asComponent","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","push","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","EventEmitter","_events","_maxListeners","undefined","isFunction","arg","isObject","isUndefined","defaultMaxListeners","setMaxListeners","isNaN","TypeError","type","er","handler","error","context","slice","listener","newListener","warned","console","trace","fired","g","list","position","splice","listenerCount","evlistener","emitter","_typeof","obj","iterator","constructor","log","_console","formatArgs","useColors","namespace","humanize","diff","color","index","lastC","replace","match","namespaces","storage","setItem","removeItem","load","getItem","DEBUG","window","__nwjs","navigator","userAgent","toLowerCase","document","documentElement","style","WebkitAppearance","firebug","exception","table","parseInt","RegExp","$1","localStorage","localstorage","colors","formatters","j","v","JSON","stringify","message","[object Object]","_isIP","data","val","scope","owner","clonable","schema","datatype","ip","indexOf","parse","results","types","Function","InternalSocket","event","error1","id","metadata","to","super","brackets","connected","dataDelegate","debug","emitEvent","regularEmitEvent","handleSocketEvent","autoDisconnect","isConnected","disconnect","group","delegate","active","debugEmitEvent","fromStr","toStr","from","port","toUpperCase","payload","isIP","autoConnect","legacy","legacyToIp","pop","ipToLegacy","createSocket","execPath","deprecated","NOFLO_FATAL_DEPRECATED","warn","platform","registerLoader","components","libraryIcons","processing","ready","register","component","componentName","split","isGraph","createComponent","instance","isLegacy","setIcon","loadGraph","implementation","dynamicLoad","getComponent","cPath","processes","connections","inPorts","remove","setGraph","library","getIcon","getLibraryIcon","isSubgraph","prefix","icon","packageId","fullName","getModulePrefix","normalizeName","gPath","registerComponent","source","language","setSource","getSource","join","Base","normalizedOptions","catchExceptions","onerror","client","send","href","location","defaultPermissions","protocol","topic","ctx","normalizedPayload","stack","postMessage","command","Buffer","clone","_instanceof","nativeMap","nativeSet","nativePromise","Map","_","Set","Promise","parent","circular","depth","includeNonEnumerable","allParents","allChildren","useBuffer","Infinity","_clone","child","proto","resolve","reject","then","__isArray","__isRegExp","__getRegExpFlags","lastIndex","__isDate","Date","getTime","isBuffer","allocUnsafe","copy","getPrototypeOf","forEach","keyChild","valueChild","set","entryChild","add","attrs","getOwnPropertyDescriptor","getOwnPropertySymbols","symbols","symbol","descriptor","allPropertyNames","getOwnPropertyNames","propertyName","__objToStr","toString","re","flags","global","ignoreCase","multiline","clonePrototype","base64","ieee754","isArray","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","Uint8Array","__proto__","encodingOrOffset","ArrayBuffer","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","fromString","checked","buffer","fromObject","assertSize","size","isView","loweredCase","utf8ToBytes","base64ToBytes","swap","b","bidirectionalIndexOf","arrayIndexOf","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","hexWrite","offset","Number","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","end","fromByteArray","utf8Slice","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","pos","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","max","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","code","INVALID_BASE64_RE","leadSurrogate","toByteArray","trim","stringtrim","base64clean","src","dst","componentLoader","utils","initials","nextInitials","defaults","started","stopped","eventBuffer","startupDate","ref","__openConnections","ev","isStarted","bufferedEmit","node","outPorts","nodeId","nodeInstance","subscribeSubgraph","subscribeNode","getNode","shutdown","oldId","newId","done","callStack","edges","initializers","serialize","setDefaults","subscribeGraph","next","reduceRight","socket","inbound","isAddressable","attach","getId","graphOps","processOps","registerOp","op","details","cb","shift","renameNode","edge","iip","emitSub","isReady","setDebug","subgraph","unshift","checkIfFinished","debouncedEnd","abortDebounce","subscribeSocket","connectPort","addEdge","connection","detach","addDefaults","hasDefault","isAttached","initializer","init","isRunning","sendInitials","isStopped","setStarted","addInitial","k","len1","len2","ref1","ref2","initial","post","sendInitial","getActiveProcesses","count","onProcessStart","keys","sockets","stop","startComponents","sendDefaults","onProcessEnd","uptime","debounce","processId","formatRegExp","format","f","isString","objects","isNull","deprecate","fn","msg","noDeprecation","throwDeprecation","traceDeprecation","debugEnviron","debugs","opts","seen","stylize","stylizeNoColor","isBoolean","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","styles","recurseTimes","primitive","simple","isNumber","formatPrimitive","visibleKeys","hash","idx","arrayToHash","isError","formatError","isRegExp","isDate","output","base","braces","toUTCString","formatProperty","formatArray","map","reduce","prev","cur","numLinesEst","reduceToSingleString","desc","line","ar","objectToString","pad","debuglog","NODE_DEBUG","test","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","null","date","regexp","isNullOrUndefined","isSymbol","isPrimitive","months","prop","time","getHours","getMinutes","getSeconds","getDate","getMonth","inherits","origin","guessLanguageFromFilename","optimizeCb","filename","func","argCount","other","collection","accumulator","iteratee","memo","currentKey","createReduce","wait","immediate","later","result","timestamp","last","now","callNow","ProcessContext","ProcessInput","ProcessOutput","debugBrackets","debugSend","boundMethodCheck","Constructor","description","ordered","autoOrdering","outputQ","bracketContext","in","activateOnInput","forwardBrackets","groups","errorPort","isRequired","openBracket","closeBracket","setUp","finalize","inPort","portName","clear","tearDown","checkLoad","outPort","tmp","handle","prepareForwarding","handleIP","inport","outport","inportName","outportName","dataPackets","input","triggering","isForwardingInport","getBuffer","filter","getBracketContext","closeIp","__resolved","__bracketClosingAfter","processOutputQueue","deactivate","sendDone","activated","normalizePortName","before","method","contexts","forwardable","outContext","isForwardingOutport","ipClone","len3","len4","ref3","ref4","ref5","__bracketClosingBefore","addToResult","__bracketContext","reverse","forwardedOpens","ips","len5","portIdentifier","unforwarded","getForwardableContexts","len6","results1","idxIps","addBracketForwards","scoped","sendIP","results2","deactivated","isOrdered","ip1","port1","result1","activate","ports1","context1","listAttached","validate","has","hasData","portBrackets","validateStream","portname","__getForForwarding","dataIp","datas","packet","portPackets","multiple","outputMap","componentPorts","mapIsInPorts","isLast","nodeContext","resultsOnly","q","Ports","canAttach","model","socketId","beginGroup","endGroup","matched","BasePort","control","prepareBuffer","localId","setDataDelegate","default","validateData","getDataType","getSchema","prepareBufferForIP","scopedBuffer","indexedBuffer","iipBuffer","values","getFromBuffer","hasIPinBuffer","hasIIP","validTypes","handleOptions","required","attachSocket","addressable","buffered","attached","cache","isCaching","getSockets","checkRequired","pristine","caching","stringPatterns","prePatterns","postPatterns","BaseTransport","debugMessagingReceive","debugMessagingReceivePayload","debugMessagingSend","debugMessagingSendPayload","protocols","Runtime","runtime","defaultGraph","registerGraph","_startNetwork","captureOutput","startCapture","capabilities","permissions","capability","secret","checkCapabilities","userCapabilities","getPermitted","perm","canDo","canInput","receive","direct","normalizeArray","parts","allowAboveRoot","up","splitPathRe","splitPath","exec","xs","resolvedPath","resolvedAbsolute","path","charAt","normalize","isAbsolute","trailingSlash","paths","relative","fromParts","toParts","samePartsLength","outputParts","sep","delimiter","dirname","root","basename","extname","normalizeOptions","search","substring","subscribe","addEventListener","mergeResolveTheirsNaive","resetGraph","properties","inports","outports","transaction","caseSensitive","startTransaction","endTransaction","item","checkTransactionStart","checkTransactionEnd","publicPort","nodeKey","portKey","getPortName","setInportMetadata","oldPort","newPort","setOutportMetadata","oldName","newName","groupName","setGroupMetadata","pub","toRemove","removeEdge","removeInitial","removeInport","removeOutport","setNodeMetadata","priv","outNode","inNode","outIndex","inIndex","node2","port2","toKeep","setEdgeMetadata","getEdge","addInitialIndex","cleanID","cleanPort","dot","yuml","groupData","json","ref6","tgt","writeFile","createGraph","loadJSON","definition","conn","def","setProperties","addNode","addEdgeIndex","addInport","addOutport","addGroup","loadFBP","fbpData","loadHTTP","url","req","XMLHttpRequest","onreadystatechange","readyState","status","responseText","open","readFile","removeGroup","removeNode","equivalent","mergeResolveTheirs","b64","lens","getLens","validLen","placeHoldersLen","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","encodeChunk","lookup","num","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","LN2","peg$SyntaxError","expected","captureStackTrace","ctor","peg$subclass","SyntaxError","peg$result","parser","peg$FAILED","peg$startRuleFunctions","peg$parsestart","peg$startRuleFunction","peg$c0","getResult","peg$c1","peg$c2","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","registerInports","peg$c8","peg$c9","peg$c10","registerOutports","peg$c11","peg$c12","peg$c13","defaultInPort","peg$c14","peg$c15","peg$c16","defaultOutPort","peg$c17","annotation","registerAnnotation","peg$c18","registerEdges","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","proc","makeInPort","makeOutPort","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","makeName","peg$c41","comp","peg$c42","addAnonymousNode","peg$computeLocation","peg$savedPos","peg$currPos","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","meta","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","portindex","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","peg$c71","peg$c72","peg$c73","peg$c74","peg$c75","peg$c76","peg$c77","peg$c78","peg$c79","peg$c80","peg$c81","peg$c82","peg$c83","peg$c84","peg$c85","peg$c86","peg$c87","peg$c88","peg$c89","peg$c90","peg$c91","peg$c92","peg$c93","peg$c94","peg$c95","peg$c96","peg$c97","peg$c98","peg$c99","peg$c100","head","peg$c101","tail","peg$c102","members","peg$c103","peg$c104","peg$c105","peg$c106","peg$c107","peg$c108","parseFloat","peg$c109","peg$c110","peg$c111","peg$c112","peg$c113","peg$c114","peg$c115","peg$c116","peg$c117","peg$c118","peg$c119","peg$c120","chars","peg$c121","peg$c122","peg$c123","peg$c124","peg$c125","peg$c126","peg$c127","peg$c128","peg$c129","peg$c130","peg$c131","peg$c132","peg$c133","peg$c134","peg$c135","peg$c136","peg$c137","peg$c138","peg$c139","peg$c140","peg$c141","peg$c142","peg$c143","peg$c144","digits","peg$c145","sequence","peg$c146","peg$c147","peg$c148","peg$c149","peg$posDetailsCache","column","seenCR","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","peg$computePosDetails","ch","startPos","endPos","startPosDetails","endPosDetails","peg$fail","peg$buildException","sort","cleanupExpected","expectedDescs","hex","stringEscape","buildMessage","s0","s1","s2","peg$parseline","s3","s4","s5","s6","s7","s9","peg$parse_","peg$parsenode","peg$parseportName","peg$parseLineTerminator","peg$parse__","peg$parseannotation","peg$parsenewline","peg$parsecomment","peg$parseconnection","peg$parsebridge","peg$parse__port","peg$parseoutport","peg$parseiipchar","peg$parsews","peg$parsevalue","peg$parseJSON_text","peg$parseiip","peg$parsesource","peg$parseport__","peg$parseinport","peg$parsedestination","peg$parseanychar","peg$parsenodeNameAndComponent","peg$parsenodeComponent","peg$parsenodeWithComponent","peg$parsenodeName","peg$parsecomponent","peg$parsecompMeta","peg$parseport","peg$parseportIndex","peg$parsevalue_separator","peg$parsefalse","peg$parsenull","peg$parsetrue","peg$parsebegin_object","peg$parsemember","peg$parseend_object","peg$parseobject","peg$parsebegin_array","peg$parseend_array","peg$parsearray","peg$parseminus","peg$parsezero","peg$parsedigit1_9","peg$parseDIGIT","peg$parseint","peg$parsedecimal_point","peg$parsefrac","peg$parsee","peg$parseplus","peg$parseexp","peg$parsenumber","peg$parsestring","peg$parsename_separator","peg$parsequotation_mark","peg$parsechar","s8","peg$parseunescaped","peg$parseescape","peg$parseHEXDIG","validateContents","portDef","getInOutName","getName","namedComponents","srcName","srcPort","srcProcess","tgtName","tgtPort","tgtProcess","label","environment","propval","nodeName","anonymousIndexes","anonymousNodeNames","processEdges","validateSchema","tv4","validation","validateMultiple","valid","errors","flatten","isShallow","makePort","defaultPort","flats","grouped","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","hasDontEnumBug","dontEnums","dontEnumsLength","propertyIsEnumerable","F","vArg","searchElement","isFrozen","random","uriTemplateGlobalModifiers","+","#",".","/",";","?","&","uriTemplateSuffices","*","notReallyPercentEncode","encodeURI","doubleEncoded","uriTemplateSubstitution","spec","modifier","separator","shouldEscape","showVariables","trimEmptyString","varNames","varList","varSpecs","varSpecMap","varName","truncate","suffices","varSpec","subFunction","valueFunction","startIndex","encodeURIComponent","first","substitution","UriTemplate","template","textParts","prefixes","substitutions","part","remainder","funcs","fillFromObject","ValidatorContext","collectMultiple","errorReporter","checkRecursive","trackUnknownProperties","missing","missingMap","formatValidators","schemas","handleError","collectError","returnError","scanned","scannedFrozen","scannedFrozenSchemas","scannedFrozenValidationErrors","validatedSchemasKey","validationErrorsKey","knownPropertyPaths","unknownPropertyPaths","defaultErrorReporter","definedKeywords","recursiveCompare","A","B","defineKeyword","keyword","keywordFunction","createError","messageParams","dataPath","schemaPath","subErrors","ValidationError","prefixErrors","prefixWith","banUnknownProperties","unknownPath","ErrorCodes","UNKNOWN_PROPERTY","addFormat","validator","resolveRefs","urlHistory","CIRCULAR_REFERENCE","urls","baseUrl","fragment","pointerPath","decodeURIComponent","searchSchemas","testUrl","isTrustedUrl","uri","getDocumentUri","addSchema","normSchema","getSchemaMap","getSchemaUris","filterRegExp","getMissingUris","dropSchemas","reset","validateAll","dataPathParts","schemaPathParts","dataPointerPath","topLevel","frozenIndex","startErrorCount","scannedFrozenSchemaIndex","scannedSchemasIndex","schemaIndex","frozenSchemaIndex","errorCount","validateBasic","validateNumeric","validateString","validateArray","validateObject","validateCombinations","validateHypermedia","validateFormat","validateDefinedKeywords","dataPart","schemaPart","errorMessage","FORMAT_CUSTOM","validationFunctions","KEYWORD_CUSTOM","validateType","validateEnum","dataType","allowedTypes","INVALID_TYPE","enumVal","ENUM_MISMATCH","validateMultipleOf","validateMinMax","validateNaN","CLOSE_ENOUGH_LOW","CLOSE_ENOUGH_HIGH","parseURI","authority","host","hostname","pathname","resolveUrl","baseUri","errorMessages","languages","messageTemplate","ErrorMessagesDefault","params","whole","subValue","multipleOf","divisibleBy","NUMBER_MULTIPLE_OF","minimum","NUMBER_MINIMUM","exclusiveMinimum","NUMBER_MINIMUM_EXCLUSIVE","maximum","NUMBER_MAXIMUM","exclusiveMaximum","NUMBER_MAXIMUM_EXCLUSIVE","NUMBER_NOT_A_NUMBER","validateStringLength","validateStringPattern","minLength","STRING_LENGTH_SHORT","maxLength","STRING_LENGTH_LONG","pattern","body","literal","STRING_PATTERN","validateArrayLength","validateArrayUniqueItems","validateArrayItems","minItems","ARRAY_LENGTH_SHORT","maxItems","ARRAY_LENGTH_LONG","uniqueItems","ARRAY_UNIQUE","match1","match2","items","additionalItems","ARRAY_ADDITIONAL_ITEMS","validateObjectMinMaxProperties","validateObjectRequiredProperties","validateObjectProperties","validateObjectDependencies","minProperties","OBJECT_PROPERTIES_MINIMUM","propertyCount","maxProperties","OBJECT_PROPERTIES_MAXIMUM","OBJECT_REQUIRED","keyPointerPath","foundMatch","patternProperties","patternKey","additionalProperties","OBJECT_ADDITIONAL_PROPERTIES","dependencies","depKey","dep","OBJECT_DEPENDENCY_KEY","requiredKey","validateAllOf","validateAnyOf","validateOneOf","validateNot","allOf","subSchema","anyOf","oldUnknownPropertyPaths","oldKnownPropertyPaths","errorAtEnd","knownKey","unknownKey","ANY_OF_MISSING","oneOf","validIndex","ONE_OF_MULTIPLE","index1","index2","ONE_OF_MISSING","not","oldErrorCount","notErrors","NOT_PASSED","links","ldo","rel","allPresent","schemaUrl","$ref","ErrorCodeLookup","stacktrace","dataPrefix","schemaPrefix","createApi","currentLanguage","customErrorReporter","globalContext","api","setErrorReporter","reporter","addLanguage","messageMap","rootCode","freshApi","validateResult","defineError","codeName","codeNumber","defaultMessage","langCode","errorCodes","JournalStore","MemoryJournalStore","calculateMeta","entryToPrettyString","entry","cmd","rev","oldMeta","newMeta","setMeta","lastRevision","revId","entries","transactions","putTransaction","store","subscribed","currentRevision","appendCommand","new","old","newProps","oldProps","exported","renameGroup","renameInport","renameOutport","fetchTransaction","executeEntry","executeEntryInversed","canUndo","moveToRevision","canRedo","startRev","endRev","lines","success","baseLoader","sources","browser-app/DoSomething","core/Callback","core/Copy","core/DisconnectAfterPacket","core/Drop","core/Kick","core/MakeFunction","core/Merge","core/Output","core/ReadGlobal","core/Repeat","core/RepeatAsync","core/RepeatDelayed","core/RunInterval","core/RunTimeout","core/SendNext","core/Split","dom/AddClass","dom/AppendChild","dom/CreateElement","dom/CreateFragment","dom/GetAttribute","dom/GetElement","dom/HasClass","dom/Listen","dom/ReadHtml","dom/RemoveClass","dom/RemoveElement","dom/RequestAnimationFrame","dom/SetAttribute","dom/WriteHtml","interaction/Focus","interaction/ListenChange","interaction/ListenDrag","interaction/ListenEvent","interaction/ListenHash","interaction/ListenKeyboard","interaction/ListenKeyboardShortcuts","interaction/ListenMouse","interaction/ListenPointer","interaction/ListenResize","interaction/ListenScroll","interaction/ListenSpeech","interaction/SetHash","interaction/ListenTouch","interaction/ReadCoordinates","interaction/ReadGamepad","setLibraryIcon","registerCustomLoaders","loaders","customLoader","originalSource","CoffeeScript","compile","bare","babel","transform","withExports","eval","nameParts","componentData","noflo","getData","starting","network1","subscribeNetwork","findEdgePorts","setToReady","targetPortName","isExportedInport","isExportedOutport","_input$getData2","_slicedToArray","owl","deepCopy","Clone","deepCopiers","DeepCopier","config","DeepCopyAlgorithm","copiedObjects","thisPass","recursiveDeepCopy","maxDepth","deepCopyAlgorithm","canCopy","populate","cacheResult","getCachedResult","cachedResult","deepCopier","applyDeepCopier","cloneNode","childNodes","childCopy","appendChild","valueOf","bracket","closes","datatypes","drop","hasStream","prepareFunction","newFunc","function","util","superCtor","super_","writable","TempCtor","timers","timer","cleanUp","clearInterval","interval","setInterval","bang","stopTimer","sent","empty","className","element","classList","tagname","container","createElement","createDocumentFragment","attribute","getAttribute","selector","el","querySelector","querySelectorAll","klass","contains","missed","elements","_c$elements$scope","removeEventListener","preventDefault","html","innerHTML","parentNode","removeChild","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","running","animate","newVal","setAttribute","focus","stopPropagation","dragstart","dragmove","dragend","movex","clientX","movey","clientY","eventName","onEvent","unsubscribe","current","subscriber","sendHash","oldHash","change","keypress","keyCode","ignoreInput","route","ctrlKey","metaKey","tagName","contentEditable","shortcut","click","dblclick","events","removeAttribute","action","width","innerWidth","height","innerHeight","left","top","scrollY","scrollX","bottom","right","recognition","webkitSpeechRecognition","isFinal","transcript","continuous","onresult","touchstart","touchmove","touchend","changedTouches","touch","pageX","pageY","screen","screenX","screenY","page","lastTimestamps","gamepad","gamepadState","webkitGetGamepads","selectColor","createDebug","prevTime","enabled","_len","_key","self","curr","ms","coerce","formatter","destroy","extend","instances","disable","enable","names","skips","h","w","plural","msAbs","isPlural","round","long","fmtLong","fmtShort","checkDeprecation","checkWirePatternPreconditions","checkWirePatternPreconditionsInput","checkWirePatternPreconditionsParams","getGroupContext","getInputData","getOutputProxy","handleInputCollation","populateParams","processApiWirePattern","reorderBuffer","setupBracketForwarding","setupControlPorts","setupErrorHandler","setupSendDefaults","hasProp","WirePattern","async","field","forwardGroups","receiveStreams","sendStreams","dropInput","arrayPolicy","NOFLO_WIREPATTERN_LEGACY","errorHandler","outProxy","postpone","resume","param","failHandler","sendErrors","hasErrors","grp","fail","portsWithDefaults","tempSocket","paramPort","matcher","substream","substreamBrackets","substreamIdx","collatedBy","inputsOk","packetsDropped","paramsOk","withData","bracketsAtPorts","checkBrackets","checkPacket","checkPort","bracketId","bracketsToCheck","hasMatching","CustomError","CustomizeError","getType","normalizeOutput","prepareInputMap","prepareNetwork","runNetwork","sendOutputMap","raw","inputs","inSockets","outSockets","received","inputMap","inputType","previous","outputs","resultType","mappedOutputs","packets","withValue","getParams","hasCallback","portOptions","patterns","encodeStrings","encode","decode","fnString","delim","shortestString","skipEval","iframe","opener","RuntimeProtocol","findPort","portToPayload","portsPayload","sendToInport","internal","getDescription","transport","outputSockets","mainGraph","subscribeExportedPorts","subscribeOutPorts","sendPorts","subscribeOutdata","sendAll","getRuntime","sendPacket","sendError","permittedCapabilities","allCapabilities","repository","repositoryVersion","networks","sendExportedPorts","portAdded","portRemoved","graphName","graphSockets","GraphProtocol","graphs","resolveGraph","initGraph","changeNode","changeEdge","changeGroup","getLoader","main","setMainGraph","nodeData","edgeData","iipData","publicName","public","NetworkProtocol","getConnectionSignature","getEdgeSignature","getPortSignature","getSocketSignature","prepareSocketEvent","secure","startNetwork","stopNetwork","updateEdgesFilter","debugNetwork","getStatus","signature","filters","sign","filterData","initNetwork","protocolEvent","eventFiltered","bt","doStart","ComponentProtocol","componentNames","processed","processComponent","parseName","sendComponent","processPort","debounced","flush","TraceBuffer","Tracer","jsonStringify","networkToTraceEvent","subscribeExportedOutports","consumeFunc","doneFunc","networkId","eventNames","subscribeFunc","sendFunc","serializeGroup","toISOString","header","netId","consume","getAll","filepath","fs","openFile","temp","fd","suffix","info","writeEvent","serializer","replacer","cycleReplacer","thisPos","spaces","getSerialize","cnst","rimraf","osTmpdir","rimrafSync","sync","RDWR_EXCL","O_CREAT","O_TRUNC","O_RDWR","O_EXCL","generateName","rawAffixes","defaultPrefix","affixes","parseAffixes","getYear","tracking","exitListenerAttached","filesToDelete","dirsToDelete","deleteFileOnExit","filePath","attachExitListener","deleteDirOnExit","dirPath","cleanupSync","files","toDelete","cleanupFilesSync","dirs","cleanupDirsSync","track","mkdir","mkdirSync","openSync","cleanup","rimrafCallback","cleanupFiles","fileErr","fileCount","cleanupDirs","dirErr","dirCount","createWriteStream","stream","assert","EMFILE_MAX","BUSYTRIES_MAX","isWindows","busyTries","rimraf_","CB","unlink","chmod","er2","stat","er3","stats","isDirectory","rmdir","fixWinEPERM","originalEr","readdir","errState","rmkids","unlinkSync","chmodSync","statSync","rmdirSync","fixWinEPERMSync","readdirSync","rmkidsSync","hasOwn","pSlice","functionsHaveNames","pToString","arrbuf","DataView","ok","regex","something","rawname","operator","stackStartFunction","AssertionError","_deepEqual","strict","memos","Float32Array","Float64Array","actualIndex","actualVisitedObjects","aIsArgs","isArguments","bIsArgs","ka","objectKeys","kb","objEquiv","expectedException","isPrototypeOf","_throws","shouldThrow","block","_tryBlock","userProvidedMessage","isUnexpectedException","generatedMessage","fn_name","next_line","equal","notEqual","deepEqual","deepStrictEqual","notDeepEqual","notDeepStrictEqual","strictEqual","notStrictEqual","throws","doesNotThrow","ifError","trailingSlashRe","TEMP","TMP","SystemRoot","windir","TMPDIR","DirectClient","DirectRuntime","clients","_receive","_connect","_disconnect","Client","PostMessage","IframeRuntime","setClient","OpenerRuntime","button","openClient","handleMessage","closeCheck","closed","noflo-runtime-postmessage","require","moduleName"],"mappings":"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","file":"test.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 122);\n","//     NoFlo - Flow-Based Programming for JavaScript\n//     (c) 2013-2018 Flowhub UG\n//     (c) 2011-2012 Henri Bergius, Nemein\n//     NoFlo may be freely distributed under the MIT license\n\n// NoFlo is a Flow-Based Programming environment for JavaScript. This file provides the\n// main entry point to the NoFlo network.\n\n// Find out more about using NoFlo from <http://noflojs.org/documentation/>\n\n// ## Main APIs\n\n// ### Graph interface\n\n// [fbp-graph](https://github.com/flowbased/fbp-graph) is used for instantiating FBP graph definitions.\nvar fbpGraph, ports;\n\nfbpGraph = require('fbp-graph');\n\nexports.graph = fbpGraph.graph;\n\nexports.Graph = fbpGraph.Graph;\n\n// ### Graph journal\n\n// Journal is used for keeping track of graph changes\nexports.journal = fbpGraph.journal;\n\nexports.Journal = fbpGraph.Journal;\n\n// ## Network interface\n\n// [Network](../Network/) is used for running NoFlo graphs.\nexports.Network = require('./Network').Network;\n\n// ### Platform detection\n\n// NoFlo works on both Node.js and the browser. Because some dependencies are different,\n// we need a way to detect which we're on.\nexports.isBrowser = require('./Platform').isBrowser;\n\n// ### Component Loader\n\n// The [ComponentLoader](../ComponentLoader/) is responsible for finding and loading\n// NoFlo components. Component Loader uses [fbp-manifest](https://github.com/flowbased/fbp-manifest)\n// to find components and graphs by traversing the NPM dependency tree from a given root\n// directory on the file system.\nexports.ComponentLoader = require('./ComponentLoader').ComponentLoader;\n\n// ### Component baseclasses\n\n// These baseclasses can be used for defining NoFlo components.\nexports.Component = require('./Component').Component;\n\n// ### Component helpers\n\n// These helpers aid in providing specific behavior in components with minimal overhead.\nexports.helpers = require('./Helpers');\n\n// ### NoFlo ports\n\n// These classes are used for instantiating ports on NoFlo components.\nports = require('./Ports');\n\nexports.InPorts = ports.InPorts;\n\nexports.OutPorts = ports.OutPorts;\n\nexports.InPort = require('./InPort');\n\nexports.OutPort = require('./OutPort');\n\n// ### NoFlo sockets\n\n// The NoFlo [internalSocket](InternalSocket.html) is used for connecting ports of\n// different components together in a network.\nexports.internalSocket = require('./InternalSocket');\n\n// ### Information Packets\n\n// NoFlo Information Packets are defined as \"IP\" objects.\nexports.IP = require('./IP');\n\n// ## Network instantiation\n\n// This function handles instantiation of NoFlo networks from a Graph object. It creates\n// the network, and then starts execution by sending the Initial Information Packets.\n\n//     noflo.createNetwork(someGraph, function (err, network) {\n//       console.log('Network is now running!');\n//     });\n\n// It is also possible to instantiate a Network but delay its execution by giving the\n// third `delay` parameter. In this case you will have to handle connecting the graph and\n// sending of IIPs manually.\n\n//     noflo.createNetwork(someGraph, function (err, network) {\n//       if (err) {\n//         throw err;\n//       }\n//       network.connect(function (err) {\n//         network.start();\n//         console.log('Network is now running!');\n//       })\n//     }, true);\nexports.createNetwork = function(graph, callback, options) {\n  var network, networkReady;\n  if (typeof options !== 'object') {\n    options = {\n      delay: options\n    };\n  }\n  if (typeof callback !== 'function') {\n    callback = function(err) {\n      if (err) {\n        throw err;\n      }\n    };\n  }\n  network = new exports.Network(graph, options);\n  networkReady = function(network) {\n    // Send IIPs\n    return network.start(function(err) {\n      if (err) {\n        return callback(err);\n      }\n      return callback(null, network);\n    });\n  };\n  // Ensure components are loaded before continuing\n  network.loader.listComponents(function(err) {\n    if (err) {\n      return callback(err);\n    }\n    if (graph.nodes.length === 0) {\n      // Empty network, no need to connect it up\n      return networkReady(network);\n    }\n    // In case of delayed execution we don't wire it up\n    if (options.delay) {\n      callback(null, network);\n      return;\n    }\n    // Wire the network up and start execution\n    return network.connect(function(err) {\n      if (err) {\n        return callback(err);\n      }\n      return networkReady(network);\n    });\n  });\n  return network;\n};\n\n// ### Starting a network from a file\n\n// It is also possible to start a NoFlo network by giving it a path to a `.json` or `.fbp` network\n// definition file.\n\n//     noflo.loadFile('somefile.json', function (err, network) {\n//       if (err) {\n//         throw err;\n//       }\n//       console.log('Network is now running!');\n//     })\nexports.loadFile = function(file, options, callback) {\n  var baseDir;\n  if (!callback) {\n    callback = options;\n    baseDir = null;\n  }\n  if (callback && typeof options !== 'object') {\n    options = {\n      baseDir: options\n    };\n  }\n  return exports.graph.loadFile(file, function(err, net) {\n    if (err) {\n      return callback(err);\n    }\n    if (options.baseDir) {\n      net.baseDir = options.baseDir;\n    }\n    return exports.createNetwork(net, callback, options);\n  });\n};\n\n// ### Saving a network definition\n\n// NoFlo graph files can be saved back into the filesystem with this method.\nexports.saveFile = function(graph, file, callback) {\n  return graph.save(file, callback);\n};\n\n// ## Embedding NoFlo in existing JavaScript code\n\n// The `asCallback` helper provides an interface to wrap NoFlo components\n// or graphs into existing JavaScript code.\n\n//     // Produce an asynchronous function wrapping a NoFlo graph\n//     var wrapped = noflo.asCallback('myproject/MyGraph');\n\n//     // Call the function, providing input data and a callback for output data\n//     wrapped({\n//       in: 'data'\n//     }, function (err, results) {\n//       // Do something with results\n//     });\nexports.asCallback = require('./AsCallback').asCallback;\n\n// ## Generating components from JavaScript functions\n\n// The `asComponent` helper makes it easy to expose a JavaScript function as a\n// NoFlo component. All input arguments become input ports, and the function's\n// result will be sent to either `out` or `error` port.\n\n//     exports.getComponent = function () {\n//       return noflo.asComponent(Math.random, {\n//         description: 'Generate a random number',\n//       });\n//     };\nexports.asComponent = require('./AsComponent').asComponent;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n// eslint-disable-next-line complexity\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // Is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);\n\n  if (!this.useColors) {\n    return;\n  }\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if (match === '%%') {\n      return;\n    }\n\n    index++;\n\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  var _console;\n\n  // This hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return (typeof console === \"undefined\" ? \"undefined\" : _typeof(console)) === 'object' && console.log && (_console = console).log.apply(_console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (namespaces) {\n      exports.storage.setItem('debug', namespaces);\n    } else {\n      exports.storage.removeItem('debug');\n    }\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.getItem('debug');\n  } catch (error) {} // Swallow\n  // XXX (@Qix-) should we be logging these?\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\n\nfunction localstorage() {\n  try {\n    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n    // The Browser also has localStorage in the global context.\n    return localStorage;\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (error) {\n    return '[UnexpectedJSONParseError]: ' + error.message;\n  }\n};\n\n","//     NoFlo - Flow-Based Programming for JavaScript\n//     (c) 2016-2017 Flowhub UG\n//     NoFlo may be freely distributed under the MIT license\n\n// ## Information Packets\n\n// IP objects are the way information is transmitted between\n// components running in a NoFlo network. IP objects contain\n// a `type` that defines whether they're regular `data` IPs\n// or whether they are the beginning or end of a stream\n// (`openBracket`, `closeBracket`).\n\n// The component currently holding an IP object is identified\n// with the `owner` key.\n\n// By default, IP objects may be sent to multiple components.\n// If they're set to be clonable, each component will receive\n// its own clone of the IP. This should be enabled for any\n// IP object working with data that is safe to clone.\n\n// It is also possible to carry metadata with an IP object.\n// For example, the `datatype` and `schema` of the sending\n// port is transmitted with the IP object.\nvar IP;\n\nmodule.exports = IP = (function() {\n  class IP {\n    // Detects if an arbitrary value is an IP\n    static isIP(obj) {\n      return obj && typeof obj === 'object' && obj._isIP === true;\n    }\n\n    // Creates as new IP object\n    // Valid types: 'data', 'openBracket', 'closeBracket'\n    constructor(type = 'data', data = null, options = {}) {\n      var key, val;\n      this.type = type;\n      this.data = data;\n      this._isIP = true;\n      this.scope = null; // sync scope id\n      this.owner = null; // packet owner process\n      this.clonable = false; // cloning safety flag\n      this.index = null; // addressable port index\n      this.schema = null;\n      this.datatype = 'all';\n      for (key in options) {\n        val = options[key];\n        this[key] = val;\n      }\n    }\n\n    // Creates a new IP copying its contents by value not reference\n    clone() {\n      var ip, key, ref, val;\n      ip = new IP(this.type);\n      ref = this;\n      for (key in ref) {\n        val = ref[key];\n        if (['owner'].indexOf(key) !== -1) {\n          continue;\n        }\n        if (val === null) {\n          continue;\n        }\n        if (typeof val === 'object') {\n          ip[key] = JSON.parse(JSON.stringify(val));\n        } else {\n          ip[key] = val;\n        }\n      }\n      return ip;\n    }\n\n    // Moves an IP to a different owner\n    move(owner) {\n      this.owner = owner;\n    }\n\n    // no-op\n\n    // Frees IP contents\n    drop() {\n      var key, ref, results, val;\n      ref = this;\n      results = [];\n      for (key in ref) {\n        val = ref[key];\n        results.push(delete this[key]);\n      }\n      return results;\n    }\n\n  };\n\n  // Valid IP types\n  IP.types = ['data', 'openBracket', 'closeBracket'];\n\n  return IP;\n\n}).call(this);\n","exports.graph = require('./lib/Graph');\nexports.Graph = exports.graph.Graph;\n\nexports.journal = require('./lib/Journal');\nexports.Journal = exports.journal.Journal;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","//     NoFlo - Flow-Based Programming for JavaScript\n//     (c) 2013-2017 Flowhub UG\n//     (c) 2011-2012 Henri Bergius, Nemein\n//     NoFlo may be freely distributed under the MIT license\nvar EventEmitter, IP, InternalSocket;\n\n({EventEmitter} = require('events'));\n\nIP = require('./IP');\n\n// ## Internal Sockets\n\n// The default communications mechanism between NoFlo processes is\n// an _internal socket_, which is responsible for accepting information\n// packets sent from processes' outports, and emitting corresponding\n// events so that the packets can be caught to the inport of the\n// connected process.\nInternalSocket = class InternalSocket extends EventEmitter {\n  regularEmitEvent(event, data) {\n    return this.emit(event, data);\n  }\n\n  debugEmitEvent(event, data) {\n    var error;\n    try {\n      return this.emit(event, data);\n    } catch (error1) {\n      error = error1;\n      if (error.id && error.metadata && error.error) {\n        if (this.listeners('error').length === 0) {\n          // Wrapped debuggable error coming from downstream, no need to wrap\n          throw error.error;\n        }\n        this.emit('error', error);\n        return;\n      }\n      if (this.listeners('error').length === 0) {\n        throw error;\n      }\n      return this.emit('error', {\n        id: this.to.process.id,\n        error: error,\n        metadata: this.metadata\n      });\n    }\n  }\n\n  constructor(metadata = {}) {\n    super();\n    this.metadata = metadata;\n    this.brackets = [];\n    this.connected = false;\n    this.dataDelegate = null;\n    this.debug = false;\n    this.emitEvent = this.regularEmitEvent;\n  }\n\n  // ## Socket connections\n\n  // Sockets that are attached to the ports of processes may be\n  // either connected or disconnected. The semantical meaning of\n  // a connection is that the outport is in the process of sending\n  // data. Disconnecting means an end of transmission.\n\n  // This can be used for example to signal the beginning and end\n  // of information packets resulting from the reading of a single\n  // file or a database query.\n\n  // Example, disconnecting when a file has been completely read:\n\n  //     readBuffer: (fd, position, size, buffer) ->\n  //       fs.read fd, buffer, 0, buffer.length, position, (err, bytes, buffer) =>\n  //         # Send data. The first send will also connect if not\n  //         # already connected.\n  //         @outPorts.out.send buffer.slice 0, bytes\n  //         position += buffer.length\n\n  //         # Disconnect when the file has been completely read\n  //         return @outPorts.out.disconnect() if position >= size\n\n  //         # Otherwise, call same method recursively\n  //         @readBuffer fd, position, size, buffer\n  connect() {\n    if (this.connected) {\n      return;\n    }\n    this.connected = true;\n    return this.emitEvent('connect', null);\n  }\n\n  disconnect() {\n    if (!this.connected) {\n      return;\n    }\n    this.connected = false;\n    return this.emitEvent('disconnect', null);\n  }\n\n  isConnected() {\n    return this.connected;\n  }\n\n  // ## Sending information packets\n\n  // The _send_ method is used by a processe's outport to\n  // send information packets. The actual packet contents are\n  // not defined by NoFlo, and may be any valid JavaScript data\n  // structure.\n\n  // The packet contents however should be such that may be safely\n  // serialized or deserialized via JSON. This way the NoFlo networks\n  // can be constructed with more flexibility, as file buffers or\n  // message queues can be used as additional packet relay mechanisms.\n  send(data) {\n    if (data === void 0 && typeof this.dataDelegate === 'function') {\n      data = this.dataDelegate();\n    }\n    return this.handleSocketEvent('data', data);\n  }\n\n  // ## Sending information packets without open bracket\n\n  // As _connect_ event is considered as open bracket, it needs to be followed\n  // by a _disconnect_ event or a closing bracket. In the new simplified\n  // sending semantics single IP objects can be sent without open/close brackets.\n  post(ip, autoDisconnect = true) {\n    if (ip === void 0 && typeof this.dataDelegate === 'function') {\n      ip = this.dataDelegate();\n    }\n    // Send legacy connect/disconnect if needed\n    if (!this.isConnected() && this.brackets.length === 0) {\n      this.connect();\n    }\n    this.handleSocketEvent('ip', ip, false);\n    if (autoDisconnect && this.isConnected() && this.brackets.length === 0) {\n      return this.disconnect();\n    }\n  }\n\n  // ## Information Packet grouping\n\n  // Processes sending data to sockets may also group the packets\n  // when necessary. This allows transmitting tree structures as\n  // a stream of packets.\n\n  // For example, an object could be split into multiple packets\n  // where each property is identified by a separate grouping:\n\n  //     # Group by object ID\n  //     @outPorts.out.beginGroup object.id\n\n  //     for property, value of object\n  //       @outPorts.out.beginGroup property\n  //       @outPorts.out.send value\n  //       @outPorts.out.endGroup()\n\n  //     @outPorts.out.endGroup()\n\n  // This would cause a tree structure to be sent to the receiving\n  // process as a stream of packets. So, an article object may be\n  // as packets like:\n\n  // * `/<article id>/title/Lorem ipsum`\n  // * `/<article id>/author/Henri Bergius`\n\n  // Components are free to ignore groupings, but are recommended\n  // to pass received groupings onward if the data structures remain\n  // intact through the component's processing.\n  beginGroup(group) {\n    return this.handleSocketEvent('begingroup', group);\n  }\n\n  endGroup() {\n    return this.handleSocketEvent('endgroup');\n  }\n\n  // ## Socket data delegation\n\n  // Sockets have the option to receive data from a delegate function\n  // should the `send` method receive undefined for `data`.  This\n  // helps in the case of defaulting values.\n  setDataDelegate(delegate) {\n    if (typeof delegate !== 'function') {\n      throw Error('A data delegate must be a function.');\n    }\n    return this.dataDelegate = delegate;\n  }\n\n  // ## Socket debug mode\n\n  // Sockets can catch exceptions happening in processes when data is\n  // sent to them. These errors can then be reported to the network for\n  // notification to the developer.\n  setDebug(active) {\n    this.debug = active;\n    return this.emitEvent = this.debug ? this.debugEmitEvent : this.regularEmitEvent;\n  }\n\n  // ## Socket identifiers\n\n  // Socket identifiers are mainly used for debugging purposes.\n  // Typical identifiers look like _ReadFile:OUT -> Display:IN_,\n  // but for sockets sending initial information packets to\n  // components may also loom like _DATA -> ReadFile:SOURCE_.\n  getId() {\n    var fromStr, toStr;\n    fromStr = function(from) {\n      return `${from.process.id}() ${from.port.toUpperCase()}`;\n    };\n    toStr = function(to) {\n      return `${to.port.toUpperCase()} ${to.process.id}()`;\n    };\n    if (!(this.from || this.to)) {\n      return \"UNDEFINED\";\n    }\n    if (this.from && !this.to) {\n      return `${fromStr(this.from)} -> ANON`;\n    }\n    if (!this.from) {\n      return `DATA -> ${toStr(this.to)}`;\n    }\n    return `${fromStr(this.from)} -> ${toStr(this.to)}`;\n  }\n\n  legacyToIp(event, payload) {\n    if (IP.isIP(payload)) {\n      // No need to wrap modern IP Objects\n      return payload;\n    }\n    // Wrap legacy events into appropriate IP objects\n    switch (event) {\n      case 'begingroup':\n        return new IP('openBracket', payload);\n      case 'endgroup':\n        return new IP('closeBracket');\n      case 'data':\n        return new IP('data', payload);\n      default:\n        return null;\n    }\n  }\n\n  ipToLegacy(ip) {\n    var legacy;\n    switch (ip.type) {\n      case 'openBracket':\n        return legacy = {\n          event: 'begingroup',\n          payload: ip.data\n        };\n      case 'data':\n        return legacy = {\n          event: 'data',\n          payload: ip.data\n        };\n      case 'closeBracket':\n        return legacy = {\n          event: 'endgroup',\n          payload: ip.data\n        };\n    }\n  }\n\n  handleSocketEvent(event, payload, autoConnect = true) {\n    var ip, isIP, legacy;\n    isIP = event === 'ip' && IP.isIP(payload);\n    ip = isIP ? payload : this.legacyToIp(event, payload);\n    if (!ip) {\n      return;\n    }\n    if (!this.isConnected() && autoConnect && this.brackets.length === 0) {\n      // Connect before sending\n      this.connect();\n    }\n    if (event === 'begingroup') {\n      this.brackets.push(payload);\n    }\n    if (isIP && ip.type === 'openBracket') {\n      this.brackets.push(ip.data);\n    }\n    if (event === 'endgroup') {\n      // Prevent closing already closed groups\n      if (this.brackets.length === 0) {\n        return;\n      }\n      // Add group name to bracket\n      ip.data = this.brackets.pop();\n      payload = ip.data;\n    }\n    if (isIP && payload.type === 'closeBracket') {\n      // Prevent closing already closed brackets\n      if (this.brackets.length === 0) {\n        return;\n      }\n      this.brackets.pop();\n    }\n    // Emit the IP Object\n    this.emitEvent('ip', ip);\n    // Emit the legacy event\n    if (!(ip && ip.type)) {\n      return;\n    }\n    if (isIP) {\n      legacy = this.ipToLegacy(ip);\n      event = legacy.event;\n      payload = legacy.payload;\n    }\n    if (event === 'connect') {\n      this.connected = true;\n    }\n    if (event === 'disconnect') {\n      this.connected = false;\n    }\n    return this.emitEvent(event, payload);\n  }\n\n};\n\nexports.InternalSocket = InternalSocket;\n\nexports.createSocket = function() {\n  return new InternalSocket;\n};\n","//     NoFlo - Flow-Based Programming for JavaScript\n//     (c) 2014-2017 Flowhub UG\n//     NoFlo may be freely distributed under the MIT license\n\n// Platform detection method\nexports.isBrowser = function() {\n  if (typeof process !== 'undefined' && process.execPath && process.execPath.match(/node|iojs/)) {\n    return false;\n  }\n  return true;\n};\n\n// Mechanism for showing API deprecation warnings. By default logs the warnings\n// but can also be configured to throw instead with the `NOFLO_FATAL_DEPRECATED`\n// env var.\nexports.deprecated = function(message) {\n  if (exports.isBrowser()) {\n    if (window.NOFLO_FATAL_DEPRECATED) {\n      throw new Error(message);\n    }\n    console.warn(message);\n    return;\n  }\n  if (process.env.NOFLO_FATAL_DEPRECATED) {\n    throw new Error(message);\n  }\n  return console.warn(message);\n};\n","//     NoFlo - Flow-Based Programming for JavaScript\n//     (c) 2013-2017 Flowhub UG\n//     (c) 2013 Henri Bergius, Nemein\n//     NoFlo may be freely distributed under the MIT license\nvar ComponentLoader, EventEmitter, fbpGraph, platform, registerLoader;\n\nfbpGraph = require('fbp-graph');\n\n({EventEmitter} = require('events'));\n\nregisterLoader = require('./loader/register');\n\nplatform = require('./Platform');\n\n// ## The NoFlo Component Loader\n\n// The Component Loader is responsible for discovering components\n// available in the running system, as well as for instantiating\n// them.\n\n// Internally the loader uses a registered, platform-specific\n// loader. NoFlo ships with a loader for Node.js that discovers\n// components from the current project's `components/` and\n// `graphs/` folders, as well as those folders of any installed\n// NPM dependencies. For browsers and embedded devices it is\n// possible to generate a statically configured component\n// loader using the [noflo-component-loader](https://github.com/noflo/noflo-component-loader) webpack plugin.\nComponentLoader = class ComponentLoader extends EventEmitter {\n  constructor(baseDir, options = {}) {\n    super();\n    this.baseDir = baseDir;\n    this.options = options;\n    this.components = null;\n    this.libraryIcons = {};\n    this.processing = false;\n    this.ready = false;\n    this.setMaxListeners(0);\n  }\n\n  // Get the library prefix for a given module name. This\n  // is mostly used for generating valid names for namespaced\n  // NPM modules, as well as for convenience renaming all\n  // `noflo-` prefixed modules with just their base name.\n\n  // Examples:\n\n  // * `my-project` becomes `my-project`\n  // * `@foo/my-project` becomes `my-project`\n  // * `noflo-core` becomes `core`\n  getModulePrefix(name) {\n    if (!name) {\n      return '';\n    }\n    if (name === 'noflo') {\n      return '';\n    }\n    if (name[0] === '@') {\n      name = name.replace(/\\@[a-z\\-]+\\//, '');\n    }\n    return name.replace(/^noflo-/, '');\n  }\n\n  // Get the list of all available components\n  listComponents(callback) {\n    if (this.processing) {\n      this.once('ready', () => {\n        return callback(null, this.components);\n      });\n      return;\n    }\n    if (this.components) {\n      return callback(null, this.components);\n    }\n    this.ready = false;\n    this.processing = true;\n    this.components = {};\n    registerLoader.register(this, (err) => {\n      if (err) {\n        if (callback) {\n          return callback(err);\n        }\n        throw err;\n      }\n      this.processing = false;\n      this.ready = true;\n      this.emit('ready', true);\n      if (callback) {\n        return callback(null, this.components);\n      }\n    });\n  }\n\n  // Load an instance of a specific component. If the\n  // registered component is a JSON or FBP graph, it will\n  // be loaded as an instance of the NoFlo subgraph\n  // component.\n  load(name, callback, metadata) {\n    var component, componentName;\n    if (!this.ready) {\n      this.listComponents((err) => {\n        if (err) {\n          return callback(err);\n        }\n        return this.load(name, callback, metadata);\n      });\n      return;\n    }\n    component = this.components[name];\n    if (!component) {\n// Try an alias\n      for (componentName in this.components) {\n        if (componentName.split('/')[1] === name) {\n          component = this.components[componentName];\n          break;\n        }\n      }\n      if (!component) {\n        // Failure to load\n        callback(new Error(`Component ${name} not available with base ${this.baseDir}`));\n        return;\n      }\n    }\n    if (this.isGraph(component)) {\n      if (!platform.isBrowser()) {\n        // nextTick is faster on Node.js\n        process.nextTick(() => {\n          return this.loadGraph(name, component, callback, metadata);\n        });\n      } else {\n        setTimeout(() => {\n          return this.loadGraph(name, component, callback, metadata);\n        }, 0);\n      }\n      return;\n    }\n    return this.createComponent(name, component, metadata, (err, instance) => {\n      if (err) {\n        return callback(err);\n      }\n      if (!instance) {\n        callback(new Error(`Component ${name} could not be loaded.`));\n        return;\n      }\n      if (name === 'Graph') {\n        instance.baseDir = this.baseDir;\n      }\n      if (typeof name === 'string') {\n        instance.componentName = name;\n      }\n      if (instance.isLegacy()) {\n        platform.deprecated(`Component ${name} uses legacy NoFlo APIs. Please port to Process API`);\n      }\n      this.setIcon(name, instance);\n      return callback(null, instance);\n    });\n  }\n\n  // Creates an instance of a component.\n  createComponent(name, component, metadata, callback) {\n    var e, implementation, instance;\n    implementation = component;\n    if (!implementation) {\n      return callback(new Error(`Component ${name} not available`));\n    }\n    // If a string was specified, attempt to `require` it.\n    if (typeof implementation === 'string') {\n      if (typeof registerLoader.dynamicLoad === 'function') {\n        registerLoader.dynamicLoad(name, implementation, metadata, callback);\n        return;\n      }\n      return callback(Error(`Dynamic loading of ${implementation} for component ${name} not available on this platform.`));\n    }\n    // Attempt to create the component instance using the `getComponent` method.\n    if (typeof implementation.getComponent === 'function') {\n      try {\n        instance = implementation.getComponent(metadata);\n      } catch (error) {\n        e = error;\n        return callback(e);\n      }\n    // Attempt to create a component using a factory function.\n    } else if (typeof implementation === 'function') {\n      try {\n        instance = implementation(metadata);\n      } catch (error) {\n        e = error;\n        return callback(e);\n      }\n    } else {\n      callback(new Error(`Invalid type ${typeof implementation} for component ${name}.`));\n      return;\n    }\n    return callback(null, instance);\n  }\n\n  // Check if a given filesystem path is actually a graph\n  isGraph(cPath) {\n    if (typeof cPath === 'object' && cPath instanceof fbpGraph.Graph) {\n      // Live graph instance\n      return true;\n    }\n    if (typeof cPath === 'object' && cPath.processes && cPath.connections) {\n      // Graph JSON definition\n      return true;\n    }\n    if (typeof cPath !== 'string') {\n      return false;\n    }\n    // Graph file path\n    return cPath.indexOf('.fbp') !== -1 || cPath.indexOf('.json') !== -1;\n  }\n\n  // Load a graph as a NoFlo subgraph component instance\n  loadGraph(name, component, callback, metadata) {\n    this.createComponent(name, this.components['Graph'], metadata, (err, graph) => {\n      if (err) {\n        return callback(err);\n      }\n      graph.loader = this;\n      graph.baseDir = this.baseDir;\n      graph.inPorts.remove('graph');\n      graph.setGraph(component, (err) => {\n        if (err) {\n          return callback(err);\n        }\n        this.setIcon(name, graph);\n        return callback(null, graph);\n      });\n    });\n  }\n\n  // Set icon for the component instance. If the instance\n  // has an icon set, then this is a no-op. Otherwise we\n  // determine an icon based on the module it is coming\n  // from, or use a fallback icon separately for subgraphs\n  // and elementary components.\n  setIcon(name, instance) {\n    var componentName, library;\n    // See if component has an icon\n    if (!instance.getIcon || instance.getIcon()) {\n      return;\n    }\n    // See if library has an icon\n    [library, componentName] = name.split('/');\n    if (componentName && this.getLibraryIcon(library)) {\n      instance.setIcon(this.getLibraryIcon(library));\n      return;\n    }\n    // See if instance is a subgraph\n    if (instance.isSubgraph()) {\n      instance.setIcon('sitemap');\n      return;\n    }\n    instance.setIcon('gear');\n  }\n\n  getLibraryIcon(prefix) {\n    if (this.libraryIcons[prefix]) {\n      return this.libraryIcons[prefix];\n    }\n    return null;\n  }\n\n  setLibraryIcon(prefix, icon) {\n    return this.libraryIcons[prefix] = icon;\n  }\n\n  normalizeName(packageId, name) {\n    var fullName, prefix;\n    prefix = this.getModulePrefix(packageId);\n    fullName = `${prefix}/${name}`;\n    if (!packageId) {\n      fullName = name;\n    }\n    return fullName;\n  }\n\n  // ### Registering components at runtime\n\n  // In addition to components discovered by the loader,\n  // it is possible to register components at runtime.\n\n  // With the `registerComponent` method you can register\n  // a NoFlo Component constructor or factory method\n  // as a component available for loading.\n  registerComponent(packageId, name, cPath, callback) {\n    var fullName;\n    fullName = this.normalizeName(packageId, name);\n    this.components[fullName] = cPath;\n    if (callback) {\n      return callback();\n    }\n  }\n\n  // With the `registerGraph` method you can register new\n  // graphs as loadable components.\n  registerGraph(packageId, name, gPath, callback) {\n    return this.registerComponent(packageId, name, gPath, callback);\n  }\n\n  // With `registerLoader` you can register custom component\n  // loaders. They will be called immediately and can register\n  // any components or graphs they wish.\n  registerLoader(loader, callback) {\n    return loader(this, callback);\n  }\n\n  // With `setSource` you can register a component by providing\n  // a source code string. Supported languages and techniques\n  // depend on the runtime environment, for example CoffeeScript\n  // components can only be registered via `setSource` if\n  // the environment has a CoffeeScript compiler loaded.\n  setSource(packageId, name, source, language, callback) {\n    if (!registerLoader.setSource) {\n      return callback(new Error('setSource not allowed'));\n    }\n    if (!this.ready) {\n      this.listComponents((err) => {\n        if (err) {\n          return callback(err);\n        }\n        return this.setSource(packageId, name, source, language, callback);\n      });\n      return;\n    }\n    return registerLoader.setSource(this, packageId, name, source, language, callback);\n  }\n\n  // `getSource` allows fetching the source code of a registered\n  // component as a string.\n  getSource(name, callback) {\n    if (!registerLoader.getSource) {\n      return callback(new Error('getSource not allowed'));\n    }\n    if (!this.ready) {\n      this.listComponents((err) => {\n        if (err) {\n          return callback(err);\n        }\n        return this.getSource(name, callback);\n      });\n      return;\n    }\n    return registerLoader.getSource(this, name, callback);\n  }\n\n  clear() {\n    this.components = null;\n    this.ready = false;\n    return this.processing = false;\n  }\n\n};\n\nexports.ComponentLoader = ComponentLoader;\n","module.exports = function (id) { return [':~:', id, ':~:'].join('') }","const Base = require('noflo-runtime-base');\n\nclass PostMessage extends Base {\n  constructor(options = {}) {\n    const normalizedOptions = options;\n    super(normalizedOptions);\n    if (normalizedOptions.catchExceptions) {\n      window.onerror = function (err) {\n        if (this.client) {\n          this.send('network', 'error', err, {\n            href: this.context ? this.context.href : this.client.location.href,\n          });\n        }\n        console.error(err);\n        return true;\n      }.bind(this);\n    }\n\n    if (!normalizedOptions.defaultPermissions.length) {\n      // The iframe runtime is run on user's own computer, so default to all access allowed\n      normalizedOptions.defaultPermissions = [\n        'protocol:graph',\n        'protocol:component',\n        'protocol:network',\n        'protocol:runtime',\n        'component:setsource',\n        'component:getsource',\n        'network:data',\n        'network:control',\n        'network:status',\n      ];\n    }\n    this.client = null;\n  }\n\n  setClient(client) {\n    this.client = client;\n  }\n\n  send(protocol, topic, payload, ctx) {\n    if (!this.client) {\n      return;\n    }\n    let normalizedPayload = payload;\n    if (payload instanceof Error) {\n      normalizedPayload = {\n        message: payload.message,\n        stack: payload.stack,\n      };\n    }\n    let { context } = this;\n    if (!context) {\n      context = ctx;\n    }\n    this.client.postMessage(JSON.stringify({\n      protocol,\n      command: topic,\n      payload: normalizedPayload,\n    }), context.href);\n    super.send(protocol, topic, payload, context);\n  }\n\n  sendAll(protocol, topic, payload) {\n    this.send(protocol, topic, payload, this.context);\n  }\n}\n\nmodule.exports = PostMessage;\n","var clone = (function() {\n'use strict';\n\nfunction _instanceof(obj, type) {\n  return type != null && obj instanceof type;\n}\n\nvar nativeMap;\ntry {\n  nativeMap = Map;\n} catch(_) {\n  // maybe a reference error because no `Map`. Give it a dummy value that no\n  // value will ever be an instanceof.\n  nativeMap = function() {};\n}\n\nvar nativeSet;\ntry {\n  nativeSet = Set;\n} catch(_) {\n  nativeSet = function() {};\n}\n\nvar nativePromise;\ntry {\n  nativePromise = Promise;\n} catch(_) {\n  nativePromise = function() {};\n}\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n * @param `includeNonEnumerable` - set to true if the non-enumerable properties\n *    should be cloned as well. Non-enumerable properties on the prototype\n *    chain will be ignored. (optional - false by default)\n*/\nfunction clone(parent, circular, depth, prototype, includeNonEnumerable) {\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    includeNonEnumerable = circular.includeNonEnumerable;\n    circular = circular.circular;\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth === 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      child = new nativeMap();\n    } else if (_instanceof(parent, nativeSet)) {\n      child = new nativeSet();\n    } else if (_instanceof(parent, nativePromise)) {\n      child = new nativePromise(function (resolve, reject) {\n        parent.then(function(value) {\n          resolve(_clone(value, depth - 1));\n        }, function(err) {\n          reject(_clone(err, depth - 1));\n        });\n      });\n    } else if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      if (Buffer.allocUnsafe) {\n        // Node.js >= 4.5.0\n        child = Buffer.allocUnsafe(parent.length);\n      } else {\n        // Older Node.js versions\n        child = new Buffer(parent.length);\n      }\n      parent.copy(child);\n      return child;\n    } else if (_instanceof(parent, Error)) {\n      child = Object.create(parent);\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      parent.forEach(function(value, key) {\n        var keyChild = _clone(key, depth - 1);\n        var valueChild = _clone(value, depth - 1);\n        child.set(keyChild, valueChild);\n      });\n    }\n    if (_instanceof(parent, nativeSet)) {\n      parent.forEach(function(value) {\n        var entryChild = _clone(value, depth - 1);\n        child.add(entryChild);\n      });\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(parent);\n      for (var i = 0; i < symbols.length; i++) {\n        // Don't need to worry about cloning a symbol because it is a primitive,\n        // like a number or string.\n        var symbol = symbols[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\n        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\n          continue;\n        }\n        child[symbol] = _clone(parent[symbol], depth - 1);\n        if (!descriptor.enumerable) {\n          Object.defineProperty(child, symbol, {\n            enumerable: false\n          });\n        }\n      }\n    }\n\n    if (includeNonEnumerable) {\n      var allPropertyNames = Object.getOwnPropertyNames(parent);\n      for (var i = 0; i < allPropertyNames.length; i++) {\n        var propertyName = allPropertyNames[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\n        if (descriptor && descriptor.enumerable) {\n          continue;\n        }\n        child[propertyName] = _clone(parent[propertyName], depth - 1);\n        Object.defineProperty(child, propertyName, {\n          enumerable: false\n        });\n      }\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n}\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n}\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n}\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n}\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n}\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","//     NoFlo - Flow-Based Programming for JavaScript\n//     (c) 2013-2017 Flowhub UG\n//     (c) 2011-2012 Henri Bergius, Nemein\n//     NoFlo may be freely distributed under the MIT license\nvar EventEmitter, IP, Network, componentLoader, graph, internalSocket, platform, utils;\n\ninternalSocket = require(\"./InternalSocket\");\n\ngraph = require(\"fbp-graph\");\n\n({EventEmitter} = require('events'));\n\nplatform = require('./Platform');\n\ncomponentLoader = require('./ComponentLoader');\n\nutils = require('./Utils');\n\nIP = require('./IP');\n\nNetwork = (function() {\n  // ## The NoFlo network coordinator\n\n  // NoFlo networks consist of processes connected to each other\n  // via sockets attached from outports to inports.\n\n  // The role of the network coordinator is to take a graph and\n  // instantiate all the necessary processes from the designated\n  // components, attach sockets between them, and handle the sending\n  // of Initial Information Packets.\n  class Network extends EventEmitter {\n    // All NoFlo networks are instantiated with a graph. Upon instantiation\n    // they will load all the needed components, instantiate them, and\n    // set up the defined connections and IIPs.\n\n    // The network will also listen to graph changes and modify itself\n    // accordingly, including removing connections, adding new nodes,\n    // and sending new IIPs.\n    constructor(graph, options = {}) {\n      super();\n      this.options = options;\n      this.processes = {};\n      this.connections = [];\n      this.initials = [];\n      this.nextInitials = [];\n      this.defaults = [];\n      this.graph = graph;\n      this.started = false;\n      this.stopped = true;\n      this.debug = true;\n      this.eventBuffer = [];\n      // On Node.js we default the baseDir for component loading to\n      // the current working directory\n      if (!platform.isBrowser()) {\n        this.baseDir = graph.baseDir || process.cwd();\n      } else {\n        // On browser we default the baseDir to the Component loading\n        // root\n        this.baseDir = graph.baseDir || '/';\n      }\n      // As most NoFlo networks are long-running processes, the\n      // network coordinator marks down the start-up time. This\n      // way we can calculate the uptime of the network.\n      this.startupDate = null;\n      // Initialize a Component Loader for the network\n      if (graph.componentLoader) {\n        this.loader = graph.componentLoader;\n      } else {\n        this.loader = new componentLoader.ComponentLoader(this.baseDir, this.options);\n      }\n    }\n\n    // The uptime of the network is the current time minus the start-up\n    // time, in seconds.\n    uptime() {\n      if (!this.startupDate) {\n        return 0;\n      }\n      return new Date() - this.startupDate;\n    }\n\n    getActiveProcesses() {\n      var active, name, process, ref;\n      active = [];\n      if (!this.started) {\n        return active;\n      }\n      ref = this.processes;\n      for (name in ref) {\n        process = ref[name];\n        if (process.component.load > 0) {\n          // Modern component with load\n          active.push(name);\n        }\n        if (process.component.__openConnections > 0) {\n          // Legacy component\n          active.push(name);\n        }\n      }\n      return active;\n    }\n\n    bufferedEmit(event, payload) {\n      var ev, i, len, ref;\n      // Errors get emitted immediately, like does network end\n      if (event === 'icon' || event === 'error' || event === 'process-error' || event === 'end') {\n        this.emit(event, payload);\n        return;\n      }\n      if (!this.isStarted() && event !== 'end') {\n        this.eventBuffer.push({\n          type: event,\n          payload: payload\n        });\n        return;\n      }\n      this.emit(event, payload);\n      if (event === 'start') {\n        ref = this.eventBuffer;\n        // Once network has started we can send the IP-related events\n        for (i = 0, len = ref.length; i < len; i++) {\n          ev = ref[i];\n          this.emit(ev.type, ev.payload);\n        }\n        this.eventBuffer = [];\n      }\n      if (event === 'ip') {\n        // Emit also the legacy events from IP\n        switch (payload.type) {\n          case 'openBracket':\n            this.bufferedEmit('begingroup', payload);\n            break;\n          case 'closeBracket':\n            this.bufferedEmit('endgroup', payload);\n            break;\n          case 'data':\n            this.bufferedEmit('data', payload);\n        }\n      }\n    }\n\n    // ## Loading components\n\n    // Components can be passed to the NoFlo network in two ways:\n\n    // * As direct, instantiated JavaScript objects\n    // * As filenames\n    load(component, metadata, callback) {\n      return this.loader.load(component, callback, metadata);\n    }\n\n    // ## Add a process to the network\n\n    // Processes can be added to a network at either start-up time\n    // or later. The processes are added with a node definition object\n    // that includes the following properties:\n\n    // * `id`: Identifier of the process in the network. Typically a string\n    // * `component`: Filename or path of a NoFlo component, or a component instance object\n    addNode(node, callback) {\n      var process;\n      // Processes are treated as singletons by their identifier. If\n      // we already have a process with the given ID, return that.\n      if (this.processes[node.id]) {\n        callback(null, this.processes[node.id]);\n        return;\n      }\n      process = {\n        id: node.id\n      };\n      // No component defined, just register the process but don't start.\n      if (!node.component) {\n        this.processes[process.id] = process;\n        callback(null, process);\n        return;\n      }\n      // Load the component for the process.\n      return this.load(node.component, node.metadata, (err, instance) => {\n        var inPorts, name, outPorts, port;\n        if (err) {\n          return callback(err);\n        }\n        instance.nodeId = node.id;\n        process.component = instance;\n        process.componentName = node.component;\n        // Inform the ports of the node name\n        inPorts = process.component.inPorts.ports;\n        outPorts = process.component.outPorts.ports;\n        for (name in inPorts) {\n          port = inPorts[name];\n          port.node = node.id;\n          port.nodeInstance = instance;\n          port.name = name;\n        }\n        for (name in outPorts) {\n          port = outPorts[name];\n          port.node = node.id;\n          port.nodeInstance = instance;\n          port.name = name;\n        }\n        if (instance.isSubgraph()) {\n          this.subscribeSubgraph(process);\n        }\n        this.subscribeNode(process);\n        // Store and return the process instance\n        this.processes[process.id] = process;\n        return callback(null, process);\n      });\n    }\n\n    removeNode(node, callback) {\n      var process;\n      process = this.getNode(node.id);\n      if (!process) {\n        return callback(new Error(`Node ${node.id} not found`));\n      }\n      return process.component.shutdown((err) => {\n        if (err) {\n          return callback(err);\n        }\n        delete this.processes[node.id];\n        return callback(null);\n      });\n    }\n\n    renameNode(oldId, newId, callback) {\n      var inPorts, name, outPorts, port, process;\n      process = this.getNode(oldId);\n      if (!process) {\n        return callback(new Error(`Process ${oldId} not found`));\n      }\n      // Inform the process of its ID\n      process.id = newId;\n      // Inform the ports of the node name\n      inPorts = process.component.inPorts.ports;\n      outPorts = process.component.outPorts.ports;\n      for (name in inPorts) {\n        port = inPorts[name];\n        if (!port) {\n          continue;\n        }\n        port.node = newId;\n      }\n      for (name in outPorts) {\n        port = outPorts[name];\n        if (!port) {\n          continue;\n        }\n        port.node = newId;\n      }\n      this.processes[newId] = process;\n      delete this.processes[oldId];\n      return callback(null);\n    }\n\n    // Get process by its ID.\n    getNode(id) {\n      return this.processes[id];\n    }\n\n    connect(done = function() {}) {\n      var callStack, edges, initializers, nodes, serialize, setDefaults, subscribeGraph;\n      // Wrap the future which will be called when done in a function and return\n      // it\n      callStack = 0;\n      serialize = (next, add) => {\n        return (type) => {\n          // Add either a Node, an Initial, or an Edge and move on to the next one\n          // when done\n          return this[`add${type}`](add, function(err) {\n            if (err) {\n              return done(err);\n            }\n            callStack++;\n            if (callStack % 100 === 0) {\n              setTimeout(function() {\n                return next(type);\n              }, 0);\n              return;\n            }\n            return next(type);\n          });\n        };\n      };\n      // Subscribe to graph changes when everything else is done\n      subscribeGraph = () => {\n        this.subscribeGraph();\n        return done();\n      };\n      // Serialize default socket creation then call callback when done\n      setDefaults = utils.reduceRight(this.graph.nodes, serialize, subscribeGraph);\n      // Serialize initializers then call defaults.\n      initializers = utils.reduceRight(this.graph.initializers, serialize, function() {\n        return setDefaults(\"Defaults\");\n      });\n      // Serialize edge creators then call the initializers.\n      edges = utils.reduceRight(this.graph.edges, serialize, function() {\n        return initializers(\"Initial\");\n      });\n      // Serialize node creators then call the edge creators\n      nodes = utils.reduceRight(this.graph.nodes, serialize, function() {\n        return edges(\"Edge\");\n      });\n      // Start with node creators\n      return nodes(\"Node\");\n    }\n\n    connectPort(socket, process, port, index, inbound, callback) {\n      if (inbound) {\n        socket.to = {\n          process: process,\n          port: port,\n          index: index\n        };\n        if (!(process.component.inPorts && process.component.inPorts[port])) {\n          callback(new Error(`No inport '${port}' defined in process ${process.id} (${socket.getId()})`));\n          return;\n        }\n        if (process.component.inPorts[port].isAddressable()) {\n          process.component.inPorts[port].attach(socket, index);\n          callback();\n          return;\n        }\n        process.component.inPorts[port].attach(socket);\n        callback();\n        return;\n      }\n      socket.from = {\n        process: process,\n        port: port,\n        index: index\n      };\n      if (!(process.component.outPorts && process.component.outPorts[port])) {\n        callback(new Error(`No outport '${port}' defined in process ${process.id} (${socket.getId()})`));\n        return;\n      }\n      if (process.component.outPorts[port].isAddressable()) {\n        process.component.outPorts[port].attach(socket, index);\n        callback();\n        return;\n      }\n      process.component.outPorts[port].attach(socket);\n      callback();\n    }\n\n    subscribeGraph() {\n      var graphOps, processOps, processing, registerOp;\n      // A NoFlo graph may change after network initialization.\n      // For this, the network subscribes to the change events from\n      // the graph.\n\n      // In graph we talk about nodes and edges. Nodes correspond\n      // to NoFlo processes, and edges to connections between them.\n      graphOps = [];\n      processing = false;\n      registerOp = function(op, details) {\n        return graphOps.push({\n          op: op,\n          details: details\n        });\n      };\n      processOps = (err) => {\n        var cb, op;\n        if (err) {\n          if (this.listeners('process-error').length === 0) {\n            throw err;\n          }\n          this.bufferedEmit('process-error', err);\n        }\n        if (!graphOps.length) {\n          processing = false;\n          return;\n        }\n        processing = true;\n        op = graphOps.shift();\n        cb = processOps;\n        switch (op.op) {\n          case 'renameNode':\n            return this.renameNode(op.details.from, op.details.to, cb);\n          default:\n            return this[op.op](op.details, cb);\n        }\n      };\n      this.graph.on('addNode', function(node) {\n        registerOp('addNode', node);\n        if (!processing) {\n          return processOps();\n        }\n      });\n      this.graph.on('removeNode', function(node) {\n        registerOp('removeNode', node);\n        if (!processing) {\n          return processOps();\n        }\n      });\n      this.graph.on('renameNode', function(oldId, newId) {\n        registerOp('renameNode', {\n          from: oldId,\n          to: newId\n        });\n        if (!processing) {\n          return processOps();\n        }\n      });\n      this.graph.on('addEdge', function(edge) {\n        registerOp('addEdge', edge);\n        if (!processing) {\n          return processOps();\n        }\n      });\n      this.graph.on('removeEdge', function(edge) {\n        registerOp('removeEdge', edge);\n        if (!processing) {\n          return processOps();\n        }\n      });\n      this.graph.on('addInitial', function(iip) {\n        registerOp('addInitial', iip);\n        if (!processing) {\n          return processOps();\n        }\n      });\n      return this.graph.on('removeInitial', function(iip) {\n        registerOp('removeInitial', iip);\n        if (!processing) {\n          return processOps();\n        }\n      });\n    }\n\n    subscribeSubgraph(node) {\n      var emitSub;\n      if (!node.component.isReady()) {\n        node.component.once('ready', () => {\n          return this.subscribeSubgraph(node);\n        });\n        return;\n      }\n      if (!node.component.network) {\n        return;\n      }\n      node.component.network.setDebug(this.debug);\n      emitSub = (type, data) => {\n        if (type === 'process-error' && this.listeners('process-error').length === 0) {\n          if (data.id && data.metadata && data.error) {\n            throw data.error;\n          }\n          throw data;\n        }\n        if (!data) {\n          data = {};\n        }\n        if (data.subgraph) {\n          if (!data.subgraph.unshift) {\n            data.subgraph = [data.subgraph];\n          }\n          data.subgraph.unshift(node.id);\n        } else {\n          data.subgraph = [node.id];\n        }\n        return this.bufferedEmit(type, data);\n      };\n      node.component.network.on('ip', function(data) {\n        return emitSub('ip', data);\n      });\n      return node.component.network.on('process-error', function(data) {\n        return emitSub('process-error', data);\n      });\n    }\n\n    // Subscribe to events from all connected sockets and re-emit them\n    subscribeSocket(socket, source) {\n      var ref;\n      socket.on('ip', (ip) => {\n        return this.bufferedEmit('ip', {\n          id: socket.getId(),\n          type: ip.type,\n          socket: socket,\n          data: ip.data,\n          metadata: socket.metadata\n        });\n      });\n      socket.on('error', (event) => {\n        if (this.listeners('process-error').length === 0) {\n          if (event.id && event.metadata && event.error) {\n            throw event.error;\n          }\n          throw event;\n        }\n        return this.bufferedEmit('process-error', event);\n      });\n      if (!(source != null ? (ref = source.component) != null ? ref.isLegacy() : void 0 : void 0)) {\n        return;\n      }\n      // Handle activation for legacy components via connects/disconnects\n      socket.on('connect', function() {\n        if (!source.component.__openConnections) {\n          source.component.__openConnections = 0;\n        }\n        return source.component.__openConnections++;\n      });\n      return socket.on('disconnect', () => {\n        source.component.__openConnections--;\n        if (source.component.__openConnections < 0) {\n          source.component.__openConnections = 0;\n        }\n        if (source.component.__openConnections === 0) {\n          return this.checkIfFinished();\n        }\n      });\n    }\n\n    subscribeNode(node) {\n      node.component.on('activate', (load) => {\n        if (this.debouncedEnd) {\n          return this.abortDebounce = true;\n        }\n      });\n      node.component.on('deactivate', (load) => {\n        if (load > 0) {\n          return;\n        }\n        return this.checkIfFinished();\n      });\n      if (!node.component.getIcon) {\n        return;\n      }\n      return node.component.on('icon', () => {\n        return this.bufferedEmit('icon', {\n          id: node.id,\n          icon: node.component.getIcon()\n        });\n      });\n    }\n\n    addEdge(edge, callback) {\n      var from, socket, to;\n      socket = internalSocket.createSocket(edge.metadata);\n      socket.setDebug(this.debug);\n      from = this.getNode(edge.from.node);\n      if (!from) {\n        return callback(new Error(`No process defined for outbound node ${edge.from.node}`));\n      }\n      if (!from.component) {\n        return callback(new Error(`No component defined for outbound node ${edge.from.node}`));\n      }\n      if (!from.component.isReady()) {\n        from.component.once(\"ready\", () => {\n          return this.addEdge(edge, callback);\n        });\n        return;\n      }\n      to = this.getNode(edge.to.node);\n      if (!to) {\n        return callback(new Error(`No process defined for inbound node ${edge.to.node}`));\n      }\n      if (!to.component) {\n        return callback(new Error(`No component defined for inbound node ${edge.to.node}`));\n      }\n      if (!to.component.isReady()) {\n        to.component.once(\"ready\", () => {\n          return this.addEdge(edge, callback);\n        });\n        return;\n      }\n      // Subscribe to events from the socket\n      this.subscribeSocket(socket, from);\n      return this.connectPort(socket, to, edge.to.port, edge.to.index, true, (err) => {\n        if (err) {\n          return callback(err);\n        }\n        return this.connectPort(socket, from, edge.from.port, edge.from.index, false, (err) => {\n          if (err) {\n            return callback(err);\n          }\n          this.connections.push(socket);\n          return callback();\n        });\n      });\n    }\n\n    removeEdge(edge, callback) {\n      var connection, i, len, ref, results;\n      ref = this.connections;\n      results = [];\n      for (i = 0, len = ref.length; i < len; i++) {\n        connection = ref[i];\n        if (!connection) {\n          continue;\n        }\n        if (!(edge.to.node === connection.to.process.id && edge.to.port === connection.to.port)) {\n          continue;\n        }\n        connection.to.process.component.inPorts[connection.to.port].detach(connection);\n        if (edge.from.node) {\n          if (connection.from && edge.from.node === connection.from.process.id && edge.from.port === connection.from.port) {\n            connection.from.process.component.outPorts[connection.from.port].detach(connection);\n          }\n        }\n        this.connections.splice(this.connections.indexOf(connection), 1);\n        results.push(callback());\n      }\n      return results;\n    }\n\n    addDefaults(node, callback) {\n      var key, port, process, ref, socket;\n      process = this.getNode(node.id);\n      if (!process) {\n        return callback(new Error(`Process ${node.id} not defined`));\n      }\n      if (!process.component) {\n        return callback(new Error(`No component defined for node ${node.id}`));\n      }\n      if (!process.component.isReady()) {\n        process.component.setMaxListeners(0);\n        process.component.once(\"ready\", () => {\n          return this.addDefaults(process, callback);\n        });\n        return;\n      }\n      ref = process.component.inPorts.ports;\n      for (key in ref) {\n        port = ref[key];\n        // Attach a socket to any defaulted inPorts as long as they aren't already attached.\n        if (port.hasDefault() && !port.isAttached()) {\n          socket = internalSocket.createSocket();\n          socket.setDebug(this.debug);\n          // Subscribe to events from the socket\n          this.subscribeSocket(socket);\n          this.connectPort(socket, process, key, void 0, true, function() {});\n          this.connections.push(socket);\n          this.defaults.push(socket);\n        }\n      }\n      return callback();\n    }\n\n    addInitial(initializer, callback) {\n      var socket, to;\n      socket = internalSocket.createSocket(initializer.metadata);\n      socket.setDebug(this.debug);\n      // Subscribe to events from the socket\n      this.subscribeSocket(socket);\n      to = this.getNode(initializer.to.node);\n      if (!to) {\n        return callback(new Error(`No process defined for inbound node ${initializer.to.node}`));\n      }\n      if (!to.component) {\n        return callback(new Error(`No component defined for inbound node ${initializer.to.node}`));\n      }\n      if (!(to.component.isReady() || to.component.inPorts[initializer.to.port])) {\n        to.component.setMaxListeners(0);\n        to.component.once(\"ready\", () => {\n          return this.addInitial(initializer, callback);\n        });\n        return;\n      }\n      return this.connectPort(socket, to, initializer.to.port, initializer.to.index, true, (err) => {\n        var init;\n        if (err) {\n          return callback(err);\n        }\n        this.connections.push(socket);\n        init = {\n          socket: socket,\n          data: initializer.from.data\n        };\n        this.initials.push(init);\n        this.nextInitials.push(init);\n        if (this.isRunning()) {\n          // Network is running now, send initials immediately\n          this.sendInitials();\n        } else if (!this.isStopped()) {\n          // Network has finished but hasn't been stopped, set\n          // started and set\n          this.setStarted(true);\n          this.sendInitials();\n        }\n        return callback();\n      });\n    }\n\n    removeInitial(initializer, callback) {\n      var connection, i, init, j, k, len, len1, len2, ref, ref1, ref2;\n      ref = this.connections;\n      for (i = 0, len = ref.length; i < len; i++) {\n        connection = ref[i];\n        if (!connection) {\n          continue;\n        }\n        if (!(initializer.to.node === connection.to.process.id && initializer.to.port === connection.to.port)) {\n          continue;\n        }\n        connection.to.process.component.inPorts[connection.to.port].detach(connection);\n        this.connections.splice(this.connections.indexOf(connection), 1);\n        ref1 = this.initials;\n        for (j = 0, len1 = ref1.length; j < len1; j++) {\n          init = ref1[j];\n          if (!init) {\n            continue;\n          }\n          if (init.socket !== connection) {\n            continue;\n          }\n          this.initials.splice(this.initials.indexOf(init), 1);\n        }\n        ref2 = this.nextInitials;\n        for (k = 0, len2 = ref2.length; k < len2; k++) {\n          init = ref2[k];\n          if (!init) {\n            continue;\n          }\n          if (init.socket !== connection) {\n            continue;\n          }\n          this.nextInitials.splice(this.nextInitials.indexOf(init), 1);\n        }\n      }\n      return callback();\n    }\n\n    sendInitial(initial) {\n      return initial.socket.post(new IP('data', initial.data, {\n        initial: true\n      }));\n    }\n\n    sendInitials(callback) {\n      var send;\n      if (!callback) {\n        callback = function() {};\n      }\n      send = () => {\n        var i, initial, len, ref;\n        ref = this.initials;\n        for (i = 0, len = ref.length; i < len; i++) {\n          initial = ref[i];\n          this.sendInitial(initial);\n        }\n        this.initials = [];\n        return callback();\n      };\n      if (typeof process !== 'undefined' && process.execPath && process.execPath.indexOf('node') !== -1) {\n        // nextTick is faster on Node.js\n        return process.nextTick(send);\n      } else {\n        return setTimeout(send, 0);\n      }\n    }\n\n    isStarted() {\n      return this.started;\n    }\n\n    isStopped() {\n      return this.stopped;\n    }\n\n    isRunning() {\n      return this.getActiveProcesses().length > 0;\n    }\n\n    startComponents(callback) {\n      var count, id, length, onProcessStart, process, ref, results;\n      if (!callback) {\n        callback = function() {};\n      }\n      // Emit start event when all processes are started\n      count = 0;\n      length = this.processes ? Object.keys(this.processes).length : 0;\n      onProcessStart = function(err) {\n        if (err) {\n          return callback(err);\n        }\n        count++;\n        if (count === length) {\n          return callback();\n        }\n      };\n      if (!(this.processes && Object.keys(this.processes).length)) {\n        // Perform any startup routines necessary for every component.\n        return callback();\n      }\n      ref = this.processes;\n      results = [];\n      for (id in ref) {\n        process = ref[id];\n        if (process.component.isStarted()) {\n          onProcessStart();\n          continue;\n        }\n        if (process.component.start.length === 0) {\n          platform.deprecated('component.start method without callback is deprecated');\n          process.component.start();\n          onProcessStart();\n          continue;\n        }\n        results.push(process.component.start(onProcessStart));\n      }\n      return results;\n    }\n\n    sendDefaults(callback) {\n      var i, len, ref, socket;\n      if (!callback) {\n        callback = function() {};\n      }\n      if (!this.defaults.length) {\n        return callback();\n      }\n      ref = this.defaults;\n      for (i = 0, len = ref.length; i < len; i++) {\n        socket = ref[i];\n        if (socket.to.process.component.inPorts[socket.to.port].sockets.length !== 1) {\n          // Don't send defaults if more than one socket is present on the port.\n          // This case should only happen when a subgraph is created as a component\n          // as its network is instantiated and its inputs are serialized before\n          // a socket is attached from the \"parent\" graph.\n          continue;\n        }\n        socket.connect();\n        socket.send();\n        socket.disconnect();\n      }\n      return callback();\n    }\n\n    start(callback) {\n      if (!callback) {\n        platform.deprecated('Calling network.start() without callback is deprecated');\n        callback = function() {};\n      }\n      if (this.debouncedEnd) {\n        this.abortDebounce = true;\n      }\n      if (this.started) {\n        this.stop((err) => {\n          if (err) {\n            return callback(err);\n          }\n          return this.start(callback);\n        });\n        return;\n      }\n      this.initials = this.nextInitials.slice(0);\n      this.eventBuffer = [];\n      this.startComponents((err) => {\n        if (err) {\n          return callback(err);\n        }\n        this.sendInitials((err) => {\n          if (err) {\n            return callback(err);\n          }\n          this.sendDefaults((err) => {\n            if (err) {\n              return callback(err);\n            }\n            this.setStarted(true);\n            callback(null);\n          });\n        });\n      });\n    }\n\n    stop(callback) {\n      var connection, count, i, id, len, length, onProcessEnd, process, ref, ref1, results;\n      if (!callback) {\n        platform.deprecated('Calling network.stop() without callback is deprecated');\n        callback = function() {};\n      }\n      if (this.debouncedEnd) {\n        this.abortDebounce = true;\n      }\n      if (!this.started) {\n        this.stopped = true;\n        return callback(null);\n      }\n      ref = this.connections;\n      // Disconnect all connections\n      for (i = 0, len = ref.length; i < len; i++) {\n        connection = ref[i];\n        if (!connection.isConnected()) {\n          continue;\n        }\n        connection.disconnect();\n      }\n      // Emit stop event when all processes are stopped\n      count = 0;\n      length = this.processes ? Object.keys(this.processes).length : 0;\n      onProcessEnd = (err) => {\n        if (err) {\n          return callback(err);\n        }\n        count++;\n        if (count === length) {\n          this.setStarted(false);\n          this.stopped = true;\n          return callback();\n        }\n      };\n      if (!(this.processes && Object.keys(this.processes).length)) {\n        this.setStarted(false);\n        this.stopped = true;\n        return callback();\n      }\n      ref1 = this.processes;\n      // Tell processes to shut down\n      results = [];\n      for (id in ref1) {\n        process = ref1[id];\n        if (!process.component.isStarted()) {\n          onProcessEnd();\n          continue;\n        }\n        if (process.component.shutdown.length === 0) {\n          platform.deprecated('component.shutdown method without callback is deprecated');\n          process.component.shutdown();\n          onProcessEnd();\n          continue;\n        }\n        results.push(process.component.shutdown(onProcessEnd));\n      }\n      return results;\n    }\n\n    setStarted(started) {\n      if (this.started === started) {\n        return;\n      }\n      if (!started) {\n        // Ending the execution\n        this.started = false;\n        this.bufferedEmit('end', {\n          start: this.startupDate,\n          end: new Date,\n          uptime: this.uptime()\n        });\n        return;\n      }\n      if (!this.startupDate) {\n        // Starting the execution\n        this.startupDate = new Date;\n      }\n      this.started = true;\n      this.stopped = false;\n      return this.bufferedEmit('start', {\n        start: this.startupDate\n      });\n    }\n\n    checkIfFinished() {\n      if (this.isRunning()) {\n        return;\n      }\n      delete this.abortDebounce;\n      if (!this.debouncedEnd) {\n        this.debouncedEnd = utils.debounce(() => {\n          if (this.abortDebounce) {\n            return;\n          }\n          if (this.isRunning()) {\n            return;\n          }\n          return this.setStarted(false);\n        }, 50);\n      }\n      return this.debouncedEnd();\n    }\n\n    getDebug() {\n      return this.debug;\n    }\n\n    setDebug(active) {\n      var i, instance, len, process, processId, ref, ref1, results, socket;\n      if (active === this.debug) {\n        return;\n      }\n      this.debug = active;\n      ref = this.connections;\n      for (i = 0, len = ref.length; i < len; i++) {\n        socket = ref[i];\n        socket.setDebug(active);\n      }\n      ref1 = this.processes;\n      results = [];\n      for (processId in ref1) {\n        process = ref1[processId];\n        instance = process.component;\n        if (instance.isSubgraph()) {\n          results.push(instance.network.setDebug(active));\n        } else {\n          results.push(void 0);\n        }\n      }\n      return results;\n    }\n\n  };\n\n  // Processes contains all the instantiated components for this network\n  Network.prototype.processes = {};\n\n  // Connections contains all the socket connections in the network\n  Network.prototype.connections = [];\n\n  // Initials contains all Initial Information Packets (IIPs)\n  Network.prototype.initials = [];\n\n  // Container to hold sockets that will be sending default data.\n  Network.prototype.defaults = [];\n\n  // The Graph this network is instantiated with\n  Network.prototype.graph = null;\n\n  // Start-up timestamp for the network, used for calculating uptime\n  Network.prototype.startupDate = null;\n\n  return Network;\n\n}).call(this);\n\nexports.Network = Network;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","//     NoFlo - Flow-Based Programming for JavaScript\n//     (c) 2014-2017 Flowhub UG\n//     NoFlo may be freely distributed under the MIT license\n\n// Guess language from filename\nvar createReduce, debounce, guessLanguageFromFilename, isArray, optimizeCb, reduceRight;\n\nguessLanguageFromFilename = function(filename) {\n  if (/.*\\.coffee$/.test(filename)) {\n    return 'coffeescript';\n  }\n  return 'javascript';\n};\n\nisArray = function(obj) {\n  if (Array.isArray) {\n    return Array.isArray(obj);\n  }\n  return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// the following functions are from http://underscorejs.org/docs/underscore.html\n// Underscore.js 1.8.3 http://underscorejs.org\n// (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n// Underscore may be freely distributed under the MIT license.\n\n// Internal function that returns an efficient (for current engines)\n// version of the passed-in callback,\n// to be repeatedly applied in other Underscore functions.\noptimizeCb = function(func, context, argCount) {\n  if (context === void 0) {\n    return func;\n  }\n  switch ((argCount === null ? 3 : argCount)) {\n    case 1:\n      return function(value) {\n        return func.call(context, value);\n      };\n    case 2:\n      return function(value, other) {\n        return func.call(context, value, other);\n      };\n    case 3:\n      return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n    case 4:\n      return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n  }\n  return function() {\n    return func.apply(context, arguments);\n  };\n};\n\n// Create a reducing function iterating left or right.\n// Optimized iterator function as using arguments.length in the main function\n// will deoptimize the, see #1991.\ncreateReduce = function(dir) {\n  var iterator;\n  iterator = function(obj, iteratee, memo, keys, index, length) {\n    var currentKey;\n    while (index >= 0 && index < length) {\n      currentKey = keys ? keys[index] : index;\n      memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      index += dir;\n    }\n    return memo;\n  };\n  return function(obj, iteratee, memo, context) {\n    var index, keys, length;\n    iteratee = optimizeCb(iteratee, context, 4);\n    keys = Object.keys(obj);\n    length = (keys || obj).length;\n    index = dir > 0 ? 0 : length - 1;\n    if (arguments.length < 3) {\n      memo = obj[keys ? keys[index] : index];\n      index += dir;\n    }\n    return iterator(obj, iteratee, memo, keys, index, length);\n  };\n};\n\nreduceRight = createReduce(-1);\n\n// Returns a function, that, as long as it continues to be invoked,\n// will not be triggered.\n// The function will be called after it stops being called for N milliseconds.\n// If immediate is passed, trigger the function on the leading edge,\n// instead of the trailing.\ndebounce = function(func, wait, immediate) {\n  var args, context, later, result, timeout, timestamp;\n  timeout = void 0;\n  args = void 0;\n  context = void 0;\n  timestamp = void 0;\n  result = void 0;\n  later = function() {\n    var last;\n    last = Date.now - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        if (!timeout) {\n          context = args = null;\n        }\n      }\n    }\n  };\n  return function() {\n    var callNow;\n    context = this;\n    args = arguments;\n    timestamp = Date.now;\n    callNow = immediate && !timeout;\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n    return result;\n  };\n};\n\nexports.guessLanguageFromFilename = guessLanguageFromFilename;\n\nexports.reduceRight = reduceRight;\n\nexports.debounce = debounce;\n\nexports.isArray = isArray;\n","  //     NoFlo - Flow-Based Programming for JavaScript\n  //     (c) 2013-2017 Flowhub UG\n  //     (c) 2011-2012 Henri Bergius, Nemein\n  //     NoFlo may be freely distributed under the MIT license\nvar Component, EventEmitter, IP, ProcessContext, ProcessInput, ProcessOutput, debug, debugBrackets, debugSend, ports,\n  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };\n\n({EventEmitter} = require('events'));\n\nports = require('./Ports');\n\nIP = require('./IP');\n\ndebug = require('debug')('noflo:component');\n\ndebugBrackets = require('debug')('noflo:component:brackets');\n\ndebugSend = require('debug')('noflo:component:send');\n\nComponent = (function() {\n  // ## NoFlo Component Base class\n\n  // The `noflo.Component` interface provides a way to instantiate\n  // and extend NoFlo components.\n  class Component extends EventEmitter {\n    constructor(options) {\n      var ref, ref1, ref2;\n      super();\n      // ### Error emitting helper\n\n      // If component has an `error` outport that is connected, errors\n      // are sent as IP objects there. If the port is not connected,\n      // errors are thrown.\n      this.error = this.error.bind(this);\n      if (!options) {\n        options = {};\n      }\n      if (!options.inPorts) {\n        // Prepare inports, if any were given in options.\n        // They can also be set up imperatively after component\n        // instantiation by using the `component.inPorts.add`\n        // method.\n        options.inPorts = {};\n      }\n      if (options.inPorts instanceof ports.InPorts) {\n        this.inPorts = options.inPorts;\n      } else {\n        this.inPorts = new ports.InPorts(options.inPorts);\n      }\n      if (!options.outPorts) {\n        // Prepare outports, if any were given in options.\n        // They can also be set up imperatively after component\n        // instantiation by using the `component.outPorts.add`\n        // method.\n        options.outPorts = {};\n      }\n      if (options.outPorts instanceof ports.OutPorts) {\n        this.outPorts = options.outPorts;\n      } else {\n        this.outPorts = new ports.OutPorts(options.outPorts);\n      }\n      if (options.icon) {\n        // Set the default component icon and description\n        this.icon = options.icon;\n      }\n      if (options.description) {\n        this.description = options.description;\n      }\n      // Initially the component is not started\n      this.started = false;\n      this.load = 0;\n      // Whether the component should keep send packets\n      // out in the order they were received\n      this.ordered = (ref = options.ordered) != null ? ref : false;\n      this.autoOrdering = (ref1 = options.autoOrdering) != null ? ref1 : null;\n      // Queue for handling ordered output packets\n      this.outputQ = [];\n      // Context used for bracket forwarding\n      this.bracketContext = {\n        in: {},\n        out: {}\n      };\n      // Whether the component should activate when it\n      // receives packets\n      this.activateOnInput = (ref2 = options.activateOnInput) != null ? ref2 : true;\n      // Bracket forwarding rules. By default we forward\n      // brackets from `in` port to `out` and `error` ports.\n      this.forwardBrackets = {\n        in: ['out', 'error']\n      };\n      if ('forwardBrackets' in options) {\n        this.forwardBrackets = options.forwardBrackets;\n      }\n      // The component's process function can either be\n      // passed in options, or given imperatively after\n      // instantation using the `component.process` method.\n      if (typeof options.process === 'function') {\n        this.process(options.process);\n      }\n    }\n\n    getDescription() {\n      return this.description;\n    }\n\n    isReady() {\n      return true;\n    }\n\n    isSubgraph() {\n      return false;\n    }\n\n    setIcon(icon) {\n      this.icon = icon;\n      return this.emit('icon', this.icon);\n    }\n\n    getIcon() {\n      return this.icon;\n    }\n\n    error(e, groups = [], errorPort = 'error', scope = null) {\n      var group, i, j, len1, len2;\n      boundMethodCheck(this, Component);\n      if (this.outPorts[errorPort] && (this.outPorts[errorPort].isAttached() || !this.outPorts[errorPort].isRequired())) {\n        for (i = 0, len1 = groups.length; i < len1; i++) {\n          group = groups[i];\n          this.outPorts[errorPort].openBracket(group, {\n            scope: scope\n          });\n        }\n        this.outPorts[errorPort].data(e, {\n          scope: scope\n        });\n        for (j = 0, len2 = groups.length; j < len2; j++) {\n          group = groups[j];\n          this.outPorts[errorPort].closeBracket(group, {\n            scope: scope\n          });\n        }\n        return;\n      }\n      throw e;\n    }\n\n    // ### Setup\n\n    // The setUp method is for component-specific initialization.\n    // Called at network start-up.\n\n    // Override in component implementation to do component-specific\n    // setup work.\n    setUp(callback) {\n      callback();\n    }\n\n    // ### Setup\n\n    // The tearDown method is for component-specific cleanup. Called\n    // at network shutdown\n\n    // Override in component implementation to do component-specific\n    // cleanup work, like clearing any accumulated state.\n    tearDown(callback) {\n      callback();\n    }\n\n    // ### Start\n\n    // Called when network starts. This sets calls the setUp\n    // method and sets the component to a started state.\n    start(callback) {\n      if (this.isStarted()) {\n        return callback();\n      }\n      this.setUp((err) => {\n        if (err) {\n          return callback(err);\n        }\n        this.started = true;\n        this.emit('start');\n        callback(null);\n      });\n    }\n\n    // ### Shutdown\n\n    // Called when network is shut down. This sets calls the\n    // tearDown method and sets the component back to a\n    // non-started state.\n\n    // The callback is called when tearDown finishes and\n    // all active processing contexts have ended.\n    shutdown(callback) {\n      var finalize;\n      finalize = () => {\n        var inPort, inPorts, portName;\n        // Clear contents of inport buffers\n        inPorts = this.inPorts.ports || this.inPorts;\n        for (portName in inPorts) {\n          inPort = inPorts[portName];\n          if (typeof inPort.clear !== 'function') {\n            continue;\n          }\n          inPort.clear();\n        }\n        // Clear bracket context\n        this.bracketContext = {\n          in: {},\n          out: {}\n        };\n        if (!this.isStarted()) {\n          return callback();\n        }\n        this.started = false;\n        this.emit('end');\n        callback();\n      };\n      // Tell the component that it is time to shut down\n      this.tearDown((err) => {\n        var checkLoad;\n        if (err) {\n          return callback(err);\n        }\n        if (this.load > 0) {\n          // Some in-flight processes, wait for them to finish\n          checkLoad = function(load) {\n            if (load > 0) {\n              return;\n            }\n            this.removeListener('deactivate', checkLoad);\n            finalize();\n          };\n          this.on('deactivate', checkLoad);\n          return;\n        }\n        finalize();\n      });\n    }\n\n    isStarted() {\n      return this.started;\n    }\n\n    // Ensures braket forwarding map is correct for the existing ports\n    prepareForwarding() {\n      var i, inPort, len1, outPort, outPorts, ref, results, tmp;\n      ref = this.forwardBrackets;\n      results = [];\n      for (inPort in ref) {\n        outPorts = ref[inPort];\n        if (!(inPort in this.inPorts.ports)) {\n          delete this.forwardBrackets[inPort];\n          continue;\n        }\n        tmp = [];\n        for (i = 0, len1 = outPorts.length; i < len1; i++) {\n          outPort = outPorts[i];\n          if (outPort in this.outPorts.ports) {\n            tmp.push(outPort);\n          }\n        }\n        if (tmp.length === 0) {\n          results.push(delete this.forwardBrackets[inPort]);\n        } else {\n          results.push(this.forwardBrackets[inPort] = tmp);\n        }\n      }\n      return results;\n    }\n\n    // Method for determining if a component is using the modern\n    // NoFlo Process API\n    isLegacy() {\n      if (this.handle) {\n        // Process API\n        return false;\n      }\n      // Legacy\n      return true;\n    }\n\n    // Sets process handler function\n    process(handle) {\n      var name, port, ref;\n      if (typeof handle !== 'function') {\n        throw new Error(\"Process handler must be a function\");\n      }\n      if (!this.inPorts) {\n        throw new Error(\"Component ports must be defined before process function\");\n      }\n      this.prepareForwarding();\n      this.handle = handle;\n      ref = this.inPorts.ports;\n      for (name in ref) {\n        port = ref[name];\n        ((name, port) => {\n          if (!port.name) {\n            port.name = name;\n          }\n          return port.on('ip', (ip) => {\n            return this.handleIP(ip, port);\n          });\n        })(name, port);\n      }\n      return this;\n    }\n\n    // Method for checking if a given inport is set up for\n    // automatic bracket forwarding\n    isForwardingInport(port) {\n      var portName;\n      if (typeof port === 'string') {\n        portName = port;\n      } else {\n        portName = port.name;\n      }\n      if (portName in this.forwardBrackets) {\n        return true;\n      }\n      return false;\n    }\n\n    // Method for checking if a given outport is set up for\n    // automatic bracket forwarding\n    isForwardingOutport(inport, outport) {\n      var inportName, outportName;\n      if (typeof inport === 'string') {\n        inportName = inport;\n      } else {\n        inportName = inport.name;\n      }\n      if (typeof outport === 'string') {\n        outportName = outport;\n      } else {\n        outportName = outport.name;\n      }\n      if (!this.forwardBrackets[inportName]) {\n        return false;\n      }\n      if (this.forwardBrackets[inportName].indexOf(outportName) !== -1) {\n        return true;\n      }\n      return false;\n    }\n\n    // Method for checking whether the component sends packets\n    // in the same order they were received.\n    isOrdered() {\n      if (this.ordered) {\n        return true;\n      }\n      if (this.autoOrdering) {\n        return true;\n      }\n      return false;\n    }\n\n    // ### Handling IP objects\n\n    // The component has received an Information Packet. Call the\n    // processing function so that firing pattern preconditions can\n    // be checked and component can do processing as needed.\n    handleIP(ip, port) {\n      var buf, context, dataPackets, e, input, output, result;\n      if (!port.options.triggering) {\n        return;\n      }\n      // If port is non-triggering, we can skip the process function call\n      if (ip.type === 'openBracket' && this.autoOrdering === null && !this.ordered) {\n        // Switch component to ordered mode when receiving a stream unless\n        // auto-ordering is disabled\n        debug(`${this.nodeId} port '${port.name}' entered auto-ordering mode`);\n        this.autoOrdering = true;\n      }\n      // Initialize the result object for situations where output needs\n      // to be queued to be kept in order\n      result = {};\n      if (this.isForwardingInport(port)) {\n        // For bracket-forwarding inports we need to initialize a bracket context\n        // so that brackets can be sent as part of the output, and closed after.\n        if (ip.type === 'openBracket') {\n          return;\n        }\n        // For forwarding ports openBrackets don't fire\n        if (ip.type === 'closeBracket') {\n          // For forwarding ports closeBrackets don't fire\n          // However, we need to handle several different scenarios:\n          // A. There are closeBrackets in queue before current packet\n          // B. There are closeBrackets in queue after current packet\n          // C. We've queued the results from all in-flight processes and\n          //    new closeBracket arrives\n          buf = port.getBuffer(ip.scope, ip.index);\n          dataPackets = buf.filter(function(ip) {\n            return ip.type === 'data';\n          });\n          if (this.outputQ.length >= this.load && dataPackets.length === 0) {\n            if (buf[0] !== ip) {\n              return;\n            }\n            // Remove from buffer\n            port.get(ip.scope, ip.index);\n            context = this.getBracketContext('in', port.name, ip.scope, ip.index).pop();\n            context.closeIp = ip;\n            debugBrackets(`${this.nodeId} closeBracket-C from '${context.source}' to ${context.ports}: '${ip.data}'`);\n            result = {\n              __resolved: true,\n              __bracketClosingAfter: [context]\n            };\n            this.outputQ.push(result);\n            this.processOutputQueue();\n          }\n          // Check if buffer contains data IPs. If it does, we want to allow\n          // firing\n          if (!dataPackets.length) {\n            return;\n          }\n        }\n      }\n      // Prepare the input/output pair\n      context = new ProcessContext(ip, this, port, result);\n      input = new ProcessInput(this.inPorts, context);\n      output = new ProcessOutput(this.outPorts, context);\n      try {\n        // Call the processing function\n        this.handle(input, output, context);\n      } catch (error1) {\n        e = error1;\n        this.deactivate(context);\n        output.sendDone(e);\n      }\n      if (context.activated) {\n        return;\n      }\n      // If receiving an IP object didn't cause the component to\n      // activate, log that input conditions were not met\n      if (port.isAddressable()) {\n        debug(`${this.nodeId} packet on '${port.name}[${ip.index}]' didn't match preconditions: ${ip.type}`);\n        return;\n      }\n      debug(`${this.nodeId} packet on '${port.name}' didn't match preconditions: ${ip.type}`);\n    }\n\n    // Get the current bracket forwarding context for an IP object\n    getBracketContext(type, port, scope, idx) {\n      var index, name, portsList;\n      ({name, index} = ports.normalizePortName(port));\n      if (idx != null) {\n        index = idx;\n      }\n      portsList = type === 'in' ? this.inPorts : this.outPorts;\n      if (portsList[name].isAddressable()) {\n        port = `${name}[${index}]`;\n      }\n      if (!this.bracketContext[type][port]) {\n        // Ensure we have a bracket context for the current scope\n        this.bracketContext[type][port] = {};\n      }\n      if (!this.bracketContext[type][port][scope]) {\n        this.bracketContext[type][port][scope] = [];\n      }\n      return this.bracketContext[type][port][scope];\n    }\n\n    // Add an IP object to the list of results to be sent in\n    // order\n    addToResult(result, port, ip, before = false) {\n      var idx, index, method, name;\n      ({name, index} = ports.normalizePortName(port));\n      method = before ? 'unshift' : 'push';\n      if (this.outPorts[name].isAddressable()) {\n        idx = index ? parseInt(index) : ip.index;\n        if (!result[name]) {\n          result[name] = {};\n        }\n        if (!result[name][idx]) {\n          result[name][idx] = [];\n        }\n        ip.index = idx;\n        result[name][idx][method](ip);\n        return;\n      }\n      if (!result[name]) {\n        result[name] = [];\n      }\n      return result[name][method](ip);\n    }\n\n    // Get contexts that can be forwarded with this in/outport\n    // pair.\n    getForwardableContexts(inport, outport, contexts) {\n      var forwardable, index, name;\n      ({name, index} = ports.normalizePortName(outport));\n      forwardable = [];\n      contexts.forEach((ctx, idx) => {\n        var outContext;\n        // No forwarding to this outport\n        if (!this.isForwardingOutport(inport, name)) {\n          return;\n        }\n        // We have already forwarded this context to this outport\n        if (ctx.ports.indexOf(outport) !== -1) {\n          return;\n        }\n        // See if we have already forwarded the same bracket from another\n        // inport\n        outContext = this.getBracketContext('out', name, ctx.ip.scope, index)[idx];\n        if (outContext) {\n          if (outContext.ip.data === ctx.ip.data && outContext.ports.indexOf(outport) !== -1) {\n            return;\n          }\n        }\n        return forwardable.push(ctx);\n      });\n      return forwardable;\n    }\n\n    // Add any bracket forwards needed to the result queue\n    addBracketForwards(result) {\n      var context, i, ipClone, j, k, l, len1, len2, len3, len4, port, ref, ref1, ref2, ref3, ref4, ref5;\n      if ((ref = result.__bracketClosingBefore) != null ? ref.length : void 0) {\n        ref1 = result.__bracketClosingBefore;\n        for (i = 0, len1 = ref1.length; i < len1; i++) {\n          context = ref1[i];\n          debugBrackets(`${this.nodeId} closeBracket-A from '${context.source}' to ${context.ports}: '${context.closeIp.data}'`);\n          if (!context.ports.length) {\n            continue;\n          }\n          ref2 = context.ports;\n          for (j = 0, len2 = ref2.length; j < len2; j++) {\n            port = ref2[j];\n            ipClone = context.closeIp.clone();\n            this.addToResult(result, port, ipClone, true);\n            this.getBracketContext('out', port, ipClone.scope).pop();\n          }\n        }\n      }\n      if (result.__bracketContext) {\n        // First see if there are any brackets to forward. We need to reverse\n        // the keys so that they get added in correct order\n        Object.keys(result.__bracketContext).reverse().forEach((inport) => {\n          var ctx, datas, forwardedOpens, idx, idxIps, ip, ips, k, l, len3, len4, len5, m, outport, portIdentifier, results, unforwarded;\n          context = result.__bracketContext[inport];\n          if (!context.length) {\n            return;\n          }\n          results = [];\n          for (outport in result) {\n            ips = result[outport];\n            if (outport.indexOf('__') === 0) {\n              continue;\n            }\n            if (this.outPorts[outport].isAddressable()) {\n              for (idx in ips) {\n                idxIps = ips[idx];\n                // Don't register indexes we're only sending brackets to\n                datas = idxIps.filter(function(ip) {\n                  return ip.type === 'data';\n                });\n                if (!datas.length) {\n                  continue;\n                }\n                portIdentifier = `${outport}[${idx}]`;\n                unforwarded = this.getForwardableContexts(inport, portIdentifier, context);\n                if (!unforwarded.length) {\n                  continue;\n                }\n                forwardedOpens = [];\n                for (k = 0, len3 = unforwarded.length; k < len3; k++) {\n                  ctx = unforwarded[k];\n                  debugBrackets(`${this.nodeId} openBracket from '${inport}' to '${portIdentifier}': '${ctx.ip.data}'`);\n                  ipClone = ctx.ip.clone();\n                  ipClone.index = parseInt(idx);\n                  forwardedOpens.push(ipClone);\n                  ctx.ports.push(portIdentifier);\n                  this.getBracketContext('out', outport, ctx.ip.scope, idx).push(ctx);\n                }\n                forwardedOpens.reverse();\n                for (l = 0, len4 = forwardedOpens.length; l < len4; l++) {\n                  ip = forwardedOpens[l];\n                  this.addToResult(result, outport, ip, true);\n                }\n              }\n              continue;\n            }\n            // Don't register ports we're only sending brackets to\n            datas = ips.filter(function(ip) {\n              return ip.type === 'data';\n            });\n            if (!datas.length) {\n              continue;\n            }\n            unforwarded = this.getForwardableContexts(inport, outport, context);\n            if (!unforwarded.length) {\n              continue;\n            }\n            forwardedOpens = [];\n            for (m = 0, len5 = unforwarded.length; m < len5; m++) {\n              ctx = unforwarded[m];\n              debugBrackets(`${this.nodeId} openBracket from '${inport}' to '${outport}': '${ctx.ip.data}'`);\n              forwardedOpens.push(ctx.ip.clone());\n              ctx.ports.push(outport);\n              this.getBracketContext('out', outport, ctx.ip.scope).push(ctx);\n            }\n            forwardedOpens.reverse();\n            results.push((function() {\n              var len6, n, results1;\n              results1 = [];\n              for (n = 0, len6 = forwardedOpens.length; n < len6; n++) {\n                ip = forwardedOpens[n];\n                results1.push(this.addToResult(result, outport, ip, true));\n              }\n              return results1;\n            }).call(this));\n          }\n          return results;\n        });\n      }\n      if ((ref3 = result.__bracketClosingAfter) != null ? ref3.length : void 0) {\n        ref4 = result.__bracketClosingAfter;\n        for (k = 0, len3 = ref4.length; k < len3; k++) {\n          context = ref4[k];\n          debugBrackets(`${this.nodeId} closeBracket-B from '${context.source}' to ${context.ports}: '${context.closeIp.data}'`);\n          if (!context.ports.length) {\n            continue;\n          }\n          ref5 = context.ports;\n          for (l = 0, len4 = ref5.length; l < len4; l++) {\n            port = ref5[l];\n            ipClone = context.closeIp.clone();\n            this.addToResult(result, port, ipClone, false);\n            this.getBracketContext('out', port, ipClone.scope).pop();\n          }\n        }\n      }\n      delete result.__bracketClosingBefore;\n      delete result.__bracketContext;\n      return delete result.__bracketClosingAfter;\n    }\n\n    // Whenever an execution context finishes, send all resolved\n    // output from the queue in the order it is in.\n    processOutputQueue() {\n      var idx, idxIps, ip, ips, port, portIdentifier, result, results;\n      results = [];\n      while (this.outputQ.length > 0) {\n        if (!this.outputQ[0].__resolved) {\n          break;\n        }\n        result = this.outputQ.shift();\n        this.addBracketForwards(result);\n        results.push((function() {\n          var i, len1, results1;\n          results1 = [];\n          for (port in result) {\n            ips = result[port];\n            if (port.indexOf('__') === 0) {\n              continue;\n            }\n            if (this.outPorts.ports[port].isAddressable()) {\n              for (idx in ips) {\n                idxIps = ips[idx];\n                idx = parseInt(idx);\n                if (!this.outPorts.ports[port].isAttached(idx)) {\n                  continue;\n                }\n                for (i = 0, len1 = idxIps.length; i < len1; i++) {\n                  ip = idxIps[i];\n                  portIdentifier = `${port}[${ip.index}]`;\n                  if (ip.type === 'openBracket') {\n                    debugSend(`${this.nodeId} sending ${portIdentifier} < '${ip.data}'`);\n                  } else if (ip.type === 'closeBracket') {\n                    debugSend(`${this.nodeId} sending ${portIdentifier} > '${ip.data}'`);\n                  } else {\n                    debugSend(`${this.nodeId} sending ${portIdentifier} DATA`);\n                  }\n                  if (!this.outPorts[port].options.scoped) {\n                    ip.scope = null;\n                  }\n                  this.outPorts[port].sendIP(ip);\n                }\n              }\n              continue;\n            }\n            if (!this.outPorts.ports[port].isAttached()) {\n              continue;\n            }\n            results1.push((function() {\n              var j, len2, results2;\n              results2 = [];\n              for (j = 0, len2 = ips.length; j < len2; j++) {\n                ip = ips[j];\n                portIdentifier = port;\n                if (ip.type === 'openBracket') {\n                  debugSend(`${this.nodeId} sending ${portIdentifier} < '${ip.data}'`);\n                } else if (ip.type === 'closeBracket') {\n                  debugSend(`${this.nodeId} sending ${portIdentifier} > '${ip.data}'`);\n                } else {\n                  debugSend(`${this.nodeId} sending ${portIdentifier} DATA`);\n                }\n                if (!this.outPorts[port].options.scoped) {\n                  ip.scope = null;\n                }\n                results2.push(this.outPorts[port].sendIP(ip));\n              }\n              return results2;\n            }).call(this));\n          }\n          return results1;\n        }).call(this));\n      }\n      return results;\n    }\n\n    // Signal that component has activated. There may be multiple\n    // activated contexts at the same time\n    activate(context) {\n      if (context.activated) { // prevent double activation\n        return;\n      }\n      context.activated = true;\n      context.deactivated = false;\n      this.load++;\n      this.emit('activate', this.load);\n      if (this.ordered || this.autoOrdering) {\n        return this.outputQ.push(context.result);\n      }\n    }\n\n    // Signal that component has deactivated. There may be multiple\n    // activated contexts at the same time\n    deactivate(context) {\n      if (context.deactivated) { // prevent double deactivation\n        return;\n      }\n      context.deactivated = true;\n      context.activated = false;\n      if (this.isOrdered()) {\n        this.processOutputQueue();\n      }\n      this.load--;\n      return this.emit('deactivate', this.load);\n    }\n\n  };\n\n  Component.prototype.description = '';\n\n  Component.prototype.icon = null;\n\n  return Component;\n\n}).call(this);\n\nProcessContext = class ProcessContext {\n  constructor(ip1, nodeInstance, port1, result1) {\n    this.ip = ip1;\n    this.nodeInstance = nodeInstance;\n    this.port = port1;\n    this.result = result1;\n    this.scope = this.ip.scope;\n    this.activated = false;\n    this.deactivated = false;\n  }\n\n  activate() {\n    // Push a new result value if previous has been sent already\n    if (this.result.__resolved || this.nodeInstance.outputQ.indexOf(this.result) === -1) {\n      this.result = {};\n    }\n    return this.nodeInstance.activate(this);\n  }\n\n  deactivate() {\n    if (!this.result.__resolved) {\n      this.result.__resolved = true;\n    }\n    return this.nodeInstance.deactivate(this);\n  }\n\n};\n\nProcessInput = class ProcessInput {\n  constructor(ports1, context1) {\n    this.ports = ports1;\n    this.context = context1;\n    this.nodeInstance = this.context.nodeInstance;\n    this.ip = this.context.ip;\n    this.port = this.context.port;\n    this.result = this.context.result;\n    this.scope = this.context.scope;\n  }\n\n  // When preconditions are met, set component state to `activated`\n  activate() {\n    if (this.context.activated) {\n      return;\n    }\n    if (this.nodeInstance.isOrdered()) {\n      // We're handling packets in order. Set the result as non-resolved\n      // so that it can be send when the order comes up\n      this.result.__resolved = false;\n    }\n    this.nodeInstance.activate(this.context);\n    if (this.port.isAddressable()) {\n      return debug(`${this.nodeInstance.nodeId} packet on '${this.port.name}[${this.ip.index}]' caused activation ${this.nodeInstance.load}: ${this.ip.type}`);\n    } else {\n      return debug(`${this.nodeInstance.nodeId} packet on '${this.port.name}' caused activation ${this.nodeInstance.load}: ${this.ip.type}`);\n    }\n  }\n\n  // ## Connection listing\n  // This allows components to check which input ports are attached. This is\n  // useful mainly for addressable ports\n  attached(...args) {\n    var i, len1, port, res;\n    if (!args.length) {\n      args = ['in'];\n    }\n    res = [];\n    for (i = 0, len1 = args.length; i < len1; i++) {\n      port = args[i];\n      if (!this.ports[port]) {\n        throw new Error(`Node ${this.nodeInstance.nodeId} has no port '${port}'`);\n      }\n      res.push(this.ports[port].listAttached());\n    }\n    if (args.length === 1) {\n      return res.pop();\n    }\n    return res;\n  }\n\n  // ## Input preconditions\n  // When the processing function is called, it can check if input buffers\n  // contain the packets needed for the process to fire.\n  // This precondition handling is done via the `has` and `hasStream` methods.\n\n  // Returns true if a port (or ports joined by logical AND) has a new IP\n  // Passing a validation callback as a last argument allows more selective\n  // checking of packets.\n  has(...args) {\n    var i, len1, port, validate;\n    if (!args.length) {\n      args = ['in'];\n    }\n    if (typeof args[args.length - 1] === 'function') {\n      validate = args.pop();\n    } else {\n      validate = function() {\n        return true;\n      };\n    }\n    for (i = 0, len1 = args.length; i < len1; i++) {\n      port = args[i];\n      if (Array.isArray(port)) {\n        if (!this.ports[port[0]]) {\n          throw new Error(`Node ${this.nodeInstance.nodeId} has no port '${port[0]}'`);\n        }\n        if (!this.ports[port[0]].isAddressable()) {\n          throw new Error(`Non-addressable ports, access must be with string ${port[0]}`);\n        }\n        if (!this.ports[port[0]].has(this.scope, port[1], validate)) {\n          return false;\n        }\n        continue;\n      }\n      if (!this.ports[port]) {\n        throw new Error(`Node ${this.nodeInstance.nodeId} has no port '${port}'`);\n      }\n      if (this.ports[port].isAddressable()) {\n        throw new Error(`For addressable ports, access must be with array [${port}, idx]`);\n      }\n      if (!this.ports[port].has(this.scope, validate)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // Returns true if the ports contain data packets\n  hasData(...args) {\n    if (!args.length) {\n      args = ['in'];\n    }\n    args.push(function(ip) {\n      return ip.type === 'data';\n    });\n    return this.has.apply(this, args);\n  }\n\n  // Returns true if a port has a complete stream in its input buffer.\n  hasStream(...args) {\n    var dataBrackets, hasData, i, len1, port, portBrackets, validate, validateStream;\n    if (!args.length) {\n      args = ['in'];\n    }\n    if (typeof args[args.length - 1] === 'function') {\n      validateStream = args.pop();\n    } else {\n      validateStream = function() {\n        return true;\n      };\n    }\n    for (i = 0, len1 = args.length; i < len1; i++) {\n      port = args[i];\n      portBrackets = [];\n      dataBrackets = [];\n      hasData = false;\n      validate = function(ip) {\n        if (ip.type === 'openBracket') {\n          portBrackets.push(ip.data);\n          return false;\n        }\n        if (ip.type === 'data') {\n          // Run the stream validation callback\n          hasData = validateStream(ip, portBrackets);\n          if (!portBrackets.length) {\n            // Data IP on its own is a valid stream\n            return hasData;\n          }\n          // Otherwise we need to check for complete stream\n          return false;\n        }\n        if (ip.type === 'closeBracket') {\n          portBrackets.pop();\n          if (portBrackets.length) {\n            return false;\n          }\n          if (!hasData) {\n            return false;\n          }\n          return true;\n        }\n      };\n      if (!this.has(port, validate)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // ## Input processing\n\n  // Once preconditions have been met, the processing function can read from\n  // the input buffers. Reading packets sets the component as \"activated\".\n\n  // Fetches IP object(s) for port(s)\n  get(...args) {\n    var i, idx, ip, len1, port, portname, res;\n    this.activate();\n    if (!args.length) {\n      args = ['in'];\n    }\n    res = [];\n    for (i = 0, len1 = args.length; i < len1; i++) {\n      port = args[i];\n      if (Array.isArray(port)) {\n        [portname, idx] = port;\n        if (!this.ports[portname].isAddressable()) {\n          throw new Error('Non-addressable ports, access must be with string portname');\n        }\n      } else {\n        portname = port;\n        if (this.ports[portname].isAddressable()) {\n          throw new Error('For addressable ports, access must be with array [portname, idx]');\n        }\n      }\n      if (this.nodeInstance.isForwardingInport(portname)) {\n        ip = this.__getForForwarding(portname, idx);\n        res.push(ip);\n        continue;\n      }\n      ip = this.ports[portname].get(this.scope, idx);\n      res.push(ip);\n    }\n    if (args.length === 1) {\n      return res[0];\n    } else {\n      return res;\n    }\n  }\n\n  __getForForwarding(port, idx) {\n    var context, dataIp, i, ip, len1, prefix;\n    prefix = [];\n    dataIp = null;\n    while (true) {\n      // Read next packet\n      // Read IPs until we hit data\n      ip = this.ports[port].get(this.scope, idx);\n      if (!ip) {\n        // Stop at the end of the buffer\n        break;\n      }\n      if (ip.type === 'data') {\n        // Hit the data IP, stop here\n        dataIp = ip;\n        break;\n      }\n      // Keep track of bracket closings and openings before\n      prefix.push(ip);\n    }\n// Forwarding brackets that came before data packet need to manipulate context\n// and be added to result so they can be forwarded correctly to ports that\n// need them\n    for (i = 0, len1 = prefix.length; i < len1; i++) {\n      ip = prefix[i];\n      if (ip.type === 'closeBracket') {\n        if (!this.result.__bracketClosingBefore) {\n          // Bracket closings before data should remove bracket context\n          this.result.__bracketClosingBefore = [];\n        }\n        context = this.nodeInstance.getBracketContext('in', port, this.scope, idx).pop();\n        context.closeIp = ip;\n        this.result.__bracketClosingBefore.push(context);\n        continue;\n      }\n      if (ip.type === 'openBracket') {\n        // Bracket openings need to go to bracket context\n        this.nodeInstance.getBracketContext('in', port, this.scope, idx).push({\n          ip: ip,\n          ports: [],\n          source: port\n        });\n        continue;\n      }\n    }\n    if (!this.result.__bracketContext) {\n      // Add current bracket context to the result so that when we send\n      // to ports we can also add the surrounding brackets\n      this.result.__bracketContext = {};\n    }\n    this.result.__bracketContext[port] = this.nodeInstance.getBracketContext('in', port, this.scope, idx).slice(0);\n    // Bracket closings that were in buffer after the data packet need to\n    // be added to result for done() to read them from\n    return dataIp;\n  }\n\n  // Fetches `data` property of IP object(s) for given port(s)\n  getData(...args) {\n    var datas, i, len1, packet, port;\n    if (!args.length) {\n      args = ['in'];\n    }\n    datas = [];\n    for (i = 0, len1 = args.length; i < len1; i++) {\n      port = args[i];\n      packet = this.get(port);\n      if (packet == null) {\n        // we add the null packet to the array so when getting\n        // multiple ports, if one is null we still return it\n        // so the indexes are correct.\n        datas.push(packet);\n        continue;\n      }\n      while (packet.type !== 'data') {\n        packet = this.get(port);\n        if (!packet) {\n          break;\n        }\n      }\n      datas.push(packet.data);\n    }\n    if (args.length === 1) {\n      return datas.pop();\n    }\n    return datas;\n  }\n\n  // Fetches a complete data stream from the buffer.\n  getStream(...args) {\n    var datas, hasData, i, ip, len1, port, portBrackets, portPackets;\n    if (!args.length) {\n      args = ['in'];\n    }\n    datas = [];\n    for (i = 0, len1 = args.length; i < len1; i++) {\n      port = args[i];\n      portBrackets = [];\n      portPackets = [];\n      hasData = false;\n      ip = this.get(port);\n      if (!ip) {\n        datas.push(void 0);\n      }\n      while (ip) {\n        if (ip.type === 'openBracket') {\n          if (!portBrackets.length) {\n            // First openBracket in stream, drop previous\n            portPackets = [];\n            hasData = false;\n          }\n          portBrackets.push(ip.data);\n          portPackets.push(ip);\n        }\n        if (ip.type === 'data') {\n          portPackets.push(ip);\n          hasData = true;\n          if (!portBrackets.length) {\n            // Unbracketed data packet is a valid stream\n            break;\n          }\n        }\n        if (ip.type === 'closeBracket') {\n          portPackets.push(ip);\n          portBrackets.pop();\n          if (hasData && !portBrackets.length) {\n            // Last close bracket finishes stream if there was data inside\n            break;\n          }\n        }\n        ip = this.get(port);\n      }\n      datas.push(portPackets);\n    }\n    if (args.length === 1) {\n      return datas.pop();\n    }\n    return datas;\n  }\n\n};\n\nProcessOutput = class ProcessOutput {\n  constructor(ports1, context1) {\n    this.ports = ports1;\n    this.context = context1;\n    this.nodeInstance = this.context.nodeInstance;\n    this.ip = this.context.ip;\n    this.result = this.context.result;\n    this.scope = this.context.scope;\n  }\n\n  // Checks if a value is an Error\n  isError(err) {\n    return err instanceof Error || Array.isArray(err) && err.length > 0 && err[0] instanceof Error;\n  }\n\n  // Sends an error object\n  error(err) {\n    var e, i, j, len1, len2, multiple, results;\n    multiple = Array.isArray(err);\n    if (!multiple) {\n      err = [err];\n    }\n    if ('error' in this.ports && (this.ports.error.isAttached() || !this.ports.error.isRequired())) {\n      if (multiple) {\n        this.sendIP('error', new IP('openBracket'));\n      }\n      for (i = 0, len1 = err.length; i < len1; i++) {\n        e = err[i];\n        this.sendIP('error', e);\n      }\n      if (multiple) {\n        return this.sendIP('error', new IP('closeBracket'));\n      }\n    } else {\n      results = [];\n      for (j = 0, len2 = err.length; j < len2; j++) {\n        e = err[j];\n        throw e;\n      }\n      return results;\n    }\n  }\n\n  // Sends a single IP object to a port\n  sendIP(port, packet) {\n    var ip;\n    if (!IP.isIP(packet)) {\n      ip = new IP('data', packet);\n    } else {\n      ip = packet;\n    }\n    if (this.scope !== null && ip.scope === null) {\n      ip.scope = this.scope;\n    }\n    if (this.nodeInstance.outPorts[port].isAddressable() && ip.index === null) {\n      throw new Error('Sending packets to addressable ports requires specifying index');\n    }\n    if (this.nodeInstance.isOrdered()) {\n      this.nodeInstance.addToResult(this.result, port, ip);\n      return;\n    }\n    if (!this.nodeInstance.outPorts[port].options.scoped) {\n      ip.scope = null;\n    }\n    return this.nodeInstance.outPorts[port].sendIP(ip);\n  }\n\n  // Sends packets for each port as a key in the map\n  // or sends Error or a list of Errors if passed such\n  send(outputMap) {\n    var componentPorts, i, len1, mapIsInPorts, packet, port, ref, results;\n    if (this.isError(outputMap)) {\n      return this.error(outputMap);\n    }\n    componentPorts = [];\n    mapIsInPorts = false;\n    ref = Object.keys(this.ports.ports);\n    for (i = 0, len1 = ref.length; i < len1; i++) {\n      port = ref[i];\n      if (port !== 'error' && port !== 'ports' && port !== '_callbacks') {\n        componentPorts.push(port);\n      }\n      if (!mapIsInPorts && (outputMap != null) && typeof outputMap === 'object' && Object.keys(outputMap).indexOf(port) !== -1) {\n        mapIsInPorts = true;\n      }\n    }\n    if (componentPorts.length === 1 && !mapIsInPorts) {\n      this.sendIP(componentPorts[0], outputMap);\n      return;\n    }\n    if (componentPorts.length > 1 && !mapIsInPorts) {\n      throw new Error('Port must be specified for sending output');\n    }\n    results = [];\n    for (port in outputMap) {\n      packet = outputMap[port];\n      results.push(this.sendIP(port, packet));\n    }\n    return results;\n  }\n\n  // Sends the argument via `send()` and marks activation as `done()`\n  sendDone(outputMap) {\n    this.send(outputMap);\n    return this.done();\n  }\n\n  // Makes a map-style component pass a result value to `out`\n  // keeping all IP metadata received from `in`,\n  // or modifying it if `options` is provided\n  pass(data, options = {}) {\n    var key, val;\n    if (!('out' in this.ports)) {\n      throw new Error('output.pass() requires port \"out\" to be present');\n    }\n    for (key in options) {\n      val = options[key];\n      this.ip[key] = val;\n    }\n    this.ip.data = data;\n    this.sendIP('out', this.ip);\n    return this.done();\n  }\n\n  // Finishes process activation gracefully\n  done(error) {\n    var buf, context, contexts, ctx, ip, isLast, nodeContext, port, ref;\n    this.result.__resolved = true;\n    this.nodeInstance.activate(this.context);\n    if (error) {\n      this.error(error);\n    }\n    isLast = () => {\n      var len, load, pos, resultsOnly;\n      // We only care about real output sets with processing data\n      resultsOnly = this.nodeInstance.outputQ.filter(function(q) {\n        if (!q.__resolved) {\n          return true;\n        }\n        if (Object.keys(q).length === 2 && q.__bracketClosingAfter) {\n          return false;\n        }\n        return true;\n      });\n      pos = resultsOnly.indexOf(this.result);\n      len = resultsOnly.length;\n      load = this.nodeInstance.load;\n      if (pos === len - 1) {\n        return true;\n      }\n      if (pos === -1 && load === len + 1) {\n        return true;\n      }\n      if (len <= 1 && load === 1) {\n        return true;\n      }\n      return false;\n    };\n    if (this.nodeInstance.isOrdered() && isLast()) {\n      ref = this.nodeInstance.bracketContext.in;\n      // We're doing bracket forwarding. See if there are\n      // dangling closeBrackets in buffer since we're the\n      // last running process function.\n      for (port in ref) {\n        contexts = ref[port];\n        if (!contexts[this.scope]) {\n          continue;\n        }\n        nodeContext = contexts[this.scope];\n        if (!nodeContext.length) {\n          continue;\n        }\n        context = nodeContext[nodeContext.length - 1];\n        buf = this.nodeInstance.inPorts[context.source].getBuffer(context.ip.scope, context.ip.index);\n        while (true) {\n          if (!buf.length) {\n            break;\n          }\n          if (buf[0].type !== 'closeBracket') {\n            break;\n          }\n          ip = this.nodeInstance.inPorts[context.source].get(context.ip.scope, context.ip.index);\n          ctx = nodeContext.pop();\n          ctx.closeIp = ip;\n          if (!this.result.__bracketClosingAfter) {\n            this.result.__bracketClosingAfter = [];\n          }\n          this.result.__bracketClosingAfter.push(ctx);\n        }\n      }\n    }\n    debug(`${this.nodeInstance.nodeId} finished processing ${this.nodeInstance.load}`);\n    return this.nodeInstance.deactivate(this.context);\n  }\n\n};\n\nexports.Component = Component;\n","//     NoFlo - Flow-Based Programming for JavaScript\n//     (c) 2014-2017 Flowhub UG\n//     NoFlo may be freely distributed under the MIT license\nvar EventEmitter, InPort, InPorts, OutPort, OutPorts, Ports;\n\n({EventEmitter} = require('events'));\n\nInPort = require('./InPort');\n\nOutPort = require('./OutPort');\n\nPorts = (function() {\n  // NoFlo ports collections\n\n  // Ports collection classes for NoFlo components. These are\n  // used to hold a set of input or output ports of a component.\n  class Ports extends EventEmitter {\n    constructor(ports) {\n      var name, options;\n      super();\n      this.ports = {};\n      if (!ports) {\n        return;\n      }\n      for (name in ports) {\n        options = ports[name];\n        this.add(name, options);\n      }\n    }\n\n    add(name, options, process) {\n      if (name === 'add' || name === 'remove') {\n        throw new Error('Add and remove are restricted port names');\n      }\n      if (!name.match(/^[a-z0-9_\\.\\/]+$/)) {\n        throw new Error(`Port names can only contain lowercase alphanumeric characters and underscores. '${name}' not allowed`);\n      }\n      if (this.ports[name]) {\n        // Remove previous implementation\n        this.remove(name);\n      }\n      if (typeof options === 'object' && options.canAttach) {\n        this.ports[name] = options;\n      } else {\n        this.ports[name] = new this.model(options, process);\n      }\n      this[name] = this.ports[name];\n      this.emit('add', name);\n      return this;\n    }\n\n    remove(name) {\n      if (!this.ports[name]) {\n        throw new Error(`Port ${name} not defined`);\n      }\n      delete this.ports[name];\n      delete this[name];\n      this.emit('remove', name);\n      return this;\n    }\n\n  };\n\n  Ports.prototype.model = InPort;\n\n  return Ports;\n\n}).call(this);\n\nexports.InPorts = InPorts = class InPorts extends Ports {\n  on(name, event, callback) {\n    if (!this.ports[name]) {\n      throw new Error(`Port ${name} not available`);\n    }\n    return this.ports[name].on(event, callback);\n  }\n\n  once(name, event, callback) {\n    if (!this.ports[name]) {\n      throw new Error(`Port ${name} not available`);\n    }\n    return this.ports[name].once(event, callback);\n  }\n\n};\n\nexports.OutPorts = OutPorts = (function() {\n  class OutPorts extends Ports {\n    connect(name, socketId) {\n      if (!this.ports[name]) {\n        throw new Error(`Port ${name} not available`);\n      }\n      return this.ports[name].connect(socketId);\n    }\n\n    beginGroup(name, group, socketId) {\n      if (!this.ports[name]) {\n        throw new Error(`Port ${name} not available`);\n      }\n      return this.ports[name].beginGroup(group, socketId);\n    }\n\n    send(name, data, socketId) {\n      if (!this.ports[name]) {\n        throw new Error(`Port ${name} not available`);\n      }\n      return this.ports[name].send(data, socketId);\n    }\n\n    endGroup(name, socketId) {\n      if (!this.ports[name]) {\n        throw new Error(`Port ${name} not available`);\n      }\n      return this.ports[name].endGroup(socketId);\n    }\n\n    disconnect(name, socketId) {\n      if (!this.ports[name]) {\n        throw new Error(`Port ${name} not available`);\n      }\n      return this.ports[name].disconnect(socketId);\n    }\n\n  };\n\n  OutPorts.prototype.model = OutPort;\n\n  return OutPorts;\n\n}).call(this);\n\n// Port name normalization:\n// returns object containing keys name and index for ports names in\n// format `portname` or `portname[index]`.\nexports.normalizePortName = function(name) {\n  var matched, port;\n  port = {\n    name: name\n  };\n  if (name.indexOf('[') === -1) {\n    // Regular port\n    return port;\n  }\n  // Addressable port with index\n  matched = name.match(/(.*)\\[([0-9]+)\\]/);\n  if (!(matched != null ? matched.length : void 0)) {\n    return name;\n  }\n  port.name = matched[1];\n  port.index = matched[2];\n  return port;\n};\n","//     NoFlo - Flow-Based Programming for JavaScript\n//     (c) 2014-2017 Flowhub UG\n//     NoFlo may be freely distributed under the MIT license\nvar BasePort, IP, InPort;\n\nBasePort = require('./BasePort');\n\nIP = require('./IP');\n\n// ## NoFlo inport\n\n// Input Port (inport) implementation for NoFlo components. These\n// ports are the way a component receives Information Packets.\nInPort = class InPort extends BasePort {\n  constructor(options = {}) {\n    if (options.control == null) {\n      options.control = false;\n    }\n    if (options.scoped == null) {\n      options.scoped = true;\n    }\n    if (options.triggering == null) {\n      options.triggering = true;\n    }\n    if (options.process) {\n      throw new Error('InPort process callback is deprecated. Please use Process API');\n    }\n    if (options.handle) {\n      throw new Error('InPort handle callback is deprecated. Please use Process API');\n    }\n    super(options);\n    this.prepareBuffer();\n  }\n\n  // Assign a delegate for retrieving data should this inPort\n  attachSocket(socket, localId = null) {\n    // have a default value.\n    if (this.hasDefault()) {\n      socket.setDataDelegate(() => {\n        return this.options.default;\n      });\n    }\n    socket.on('connect', () => {\n      return this.handleSocketEvent('connect', socket, localId);\n    });\n    socket.on('begingroup', (group) => {\n      return this.handleSocketEvent('begingroup', group, localId);\n    });\n    socket.on('data', (data) => {\n      this.validateData(data);\n      return this.handleSocketEvent('data', data, localId);\n    });\n    socket.on('endgroup', (group) => {\n      return this.handleSocketEvent('endgroup', group, localId);\n    });\n    socket.on('disconnect', () => {\n      return this.handleSocketEvent('disconnect', socket, localId);\n    });\n    return socket.on('ip', (ip) => {\n      return this.handleIP(ip, localId);\n    });\n  }\n\n  handleIP(ip, id) {\n    var buf;\n    if (this.options.control && ip.type !== 'data') {\n      return;\n    }\n    ip.owner = this.nodeInstance;\n    if (this.isAddressable()) {\n      ip.index = id;\n    }\n    if (ip.datatype === 'all') {\n      // Stamp non-specific IP objects with port datatype\n      ip.datatype = this.getDataType();\n    }\n    if (this.getSchema() && !ip.schema) {\n      // Stamp non-specific IP objects with port schema\n      ip.schema = this.getSchema();\n    }\n    buf = this.prepareBufferForIP(ip);\n    buf.push(ip);\n    if (this.options.control && buf.length > 1) {\n      buf.shift();\n    }\n    return this.emit('ip', ip, id);\n  }\n\n  handleSocketEvent(event, payload, id) {\n    if (this.isAddressable()) {\n      // Emit port event\n      return this.emit(event, payload, id);\n    }\n    return this.emit(event, payload);\n  }\n\n  hasDefault() {\n    return this.options.default !== void 0;\n  }\n\n  prepareBuffer() {\n    if (this.isAddressable()) {\n      if (this.options.scoped) {\n        this.scopedBuffer = {};\n      }\n      this.indexedBuffer = {};\n      this.iipBuffer = {};\n      return;\n    }\n    if (this.options.scoped) {\n      this.scopedBuffer = {};\n    }\n    this.iipBuffer = [];\n    this.buffer = [];\n  }\n\n  prepareBufferForIP(ip) {\n    if (this.isAddressable()) {\n      if ((ip.scope != null) && this.options.scoped) {\n        if (!(ip.scope in this.scopedBuffer)) {\n          this.scopedBuffer[ip.scope] = [];\n        }\n        if (!(ip.index in this.scopedBuffer[ip.scope])) {\n          this.scopedBuffer[ip.scope][ip.index] = [];\n        }\n        return this.scopedBuffer[ip.scope][ip.index];\n      }\n      if (ip.initial) {\n        if (!(ip.index in this.iipBuffer)) {\n          this.iipBuffer[ip.index] = [];\n        }\n        return this.iipBuffer[ip.index];\n      }\n      if (!(ip.index in this.indexedBuffer)) {\n        this.indexedBuffer[ip.index] = [];\n      }\n      return this.indexedBuffer[ip.index];\n    }\n    if ((ip.scope != null) && this.options.scoped) {\n      if (!(ip.scope in this.scopedBuffer)) {\n        this.scopedBuffer[ip.scope] = [];\n      }\n      return this.scopedBuffer[ip.scope];\n    }\n    if (ip.initial) {\n      return this.iipBuffer;\n    }\n    return this.buffer;\n  }\n\n  validateData(data) {\n    if (!this.options.values) {\n      return;\n    }\n    if (this.options.values.indexOf(data) === -1) {\n      throw new Error(`Invalid data='${data}' received, not in [${this.options.values}]`);\n    }\n  }\n\n  getBuffer(scope, idx, initial = false) {\n    if (this.isAddressable()) {\n      if ((scope != null) && this.options.scoped) {\n        if (!(scope in this.scopedBuffer)) {\n          return void 0;\n        }\n        if (!(idx in this.scopedBuffer[scope])) {\n          return void 0;\n        }\n        return this.scopedBuffer[scope][idx];\n      }\n      if (initial) {\n        if (!(idx in this.iipBuffer)) {\n          return void 0;\n        }\n        return this.iipBuffer[idx];\n      }\n      if (!(idx in this.indexedBuffer)) {\n        return void 0;\n      }\n      return this.indexedBuffer[idx];\n    }\n    if ((scope != null) && this.options.scoped) {\n      if (!(scope in this.scopedBuffer)) {\n        return void 0;\n      }\n      return this.scopedBuffer[scope];\n    }\n    if (initial) {\n      return this.iipBuffer;\n    }\n    return this.buffer;\n  }\n\n  getFromBuffer(scope, idx, initial = false) {\n    var buf;\n    buf = this.getBuffer(scope, idx, initial);\n    if (!(buf != null ? buf.length : void 0)) {\n      return void 0;\n    }\n    if (this.options.control) {\n      return buf[buf.length - 1];\n    } else {\n      return buf.shift();\n    }\n  }\n\n  // Fetches a packet from the port\n  get(scope, idx) {\n    var res;\n    res = this.getFromBuffer(scope, idx);\n    if (res !== void 0) {\n      return res;\n    }\n    // Try to find an IIP instead\n    return this.getFromBuffer(null, idx, true);\n  }\n\n  hasIPinBuffer(scope, idx, validate, initial = false) {\n    var buf, i, len, packet;\n    buf = this.getBuffer(scope, idx, initial);\n    if (!(buf != null ? buf.length : void 0)) {\n      return false;\n    }\n    for (i = 0, len = buf.length; i < len; i++) {\n      packet = buf[i];\n      if (validate(packet)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  hasIIP(idx, validate) {\n    return this.hasIPinBuffer(null, idx, validate, true);\n  }\n\n  // Returns true if port contains packet(s) matching the validator\n  has(scope, idx, validate) {\n    if (!this.isAddressable()) {\n      validate = idx;\n      idx = null;\n    }\n    if (this.hasIPinBuffer(scope, idx, validate)) {\n      return true;\n    }\n    if (this.hasIIP(idx, validate)) {\n      return true;\n    }\n    return false;\n  }\n\n  // Returns the number of data packets in an inport\n  length(scope, idx) {\n    var buf;\n    buf = this.getBuffer(scope, idx);\n    if (!buf) {\n      return 0;\n    }\n    return buf.length;\n  }\n\n  // Tells if buffer has packets or not\n  ready(scope, idx) {\n    return this.length(scope) > 0;\n  }\n\n  // Clears inport buffers\n  clear() {\n    return this.prepareBuffer();\n  }\n\n};\n\nmodule.exports = InPort;\n","//     NoFlo - Flow-Based Programming for JavaScript\n//     (c) 2014-2017 Flowhub UG\n//     NoFlo may be freely distributed under the MIT license\nvar BasePort, EventEmitter, validTypes;\n\n({EventEmitter} = require('events'));\n\n// ## NoFlo Port Base class\n\n// Base port type used for options normalization. Both inports and outports extend this class.\n\n// The list of valid datatypes for ports.\nvalidTypes = ['all', 'string', 'number', 'int', 'object', 'array', 'boolean', 'color', 'date', 'bang', 'function', 'buffer', 'stream'];\n\nBasePort = class BasePort extends EventEmitter {\n  constructor(options) {\n    super();\n    // Options holds all options of the current port\n    this.options = this.handleOptions(options);\n    // Sockets list contains all currently attached\n    // connections to the port\n    this.sockets = [];\n    // Name of the graph node this port is in\n    this.node = null;\n    // Name of the port\n    this.name = null;\n  }\n\n  handleOptions(options) {\n    if (!options) {\n      options = {};\n    }\n    if (!options.datatype) {\n      // We default to the `all` type if no explicit datatype\n      // was provided\n      options.datatype = 'all';\n    }\n    if (options.required === void 0) {\n      // By default ports are not required for graph execution\n      options.required = false;\n    }\n    if (options.datatype === 'integer') {\n      // Normalize the legacy `integer` type to `int`.\n      options.datatype = 'int';\n    }\n    // Ensure datatype defined for the port is valid\n    if (validTypes.indexOf(options.datatype) === -1) {\n      throw new Error(`Invalid port datatype '${options.datatype}' specified, valid are ${validTypes.join(', ')}`);\n    }\n    // Ensure schema defined for the port is valid\n    if (options.type && !options.schema) {\n      options.schema = options.type;\n      delete options.type;\n    }\n    if (options.schema && options.schema.indexOf('/') === -1) {\n      throw new Error(`Invalid port schema '${options.schema}' specified. Should be URL or MIME type`);\n    }\n    return options;\n  }\n\n  getId() {\n    if (!(this.node && this.name)) {\n      return 'Port';\n    }\n    return `${this.node} ${this.name.toUpperCase()}`;\n  }\n\n  getDataType() {\n    return this.options.datatype;\n  }\n\n  getSchema() {\n    return this.options.schema || null;\n  }\n\n  getDescription() {\n    return this.options.description;\n  }\n\n  attach(socket, index = null) {\n    if (!this.isAddressable() || index === null) {\n      index = this.sockets.length;\n    }\n    this.sockets[index] = socket;\n    this.attachSocket(socket, index);\n    if (this.isAddressable()) {\n      this.emit('attach', socket, index);\n      return;\n    }\n    return this.emit('attach', socket);\n  }\n\n  attachSocket() {}\n\n  detach(socket) {\n    var index;\n    index = this.sockets.indexOf(socket);\n    if (index === -1) {\n      return;\n    }\n    this.sockets[index] = void 0;\n    if (this.isAddressable()) {\n      this.emit('detach', socket, index);\n      return;\n    }\n    return this.emit('detach', socket);\n  }\n\n  isAddressable() {\n    if (this.options.addressable) {\n      return true;\n    }\n    return false;\n  }\n\n  isBuffered() {\n    if (this.options.buffered) {\n      return true;\n    }\n    return false;\n  }\n\n  isRequired() {\n    if (this.options.required) {\n      return true;\n    }\n    return false;\n  }\n\n  isAttached(socketId = null) {\n    if (this.isAddressable() && socketId !== null) {\n      if (this.sockets[socketId]) {\n        return true;\n      }\n      return false;\n    }\n    if (this.sockets.length) {\n      return true;\n    }\n    return false;\n  }\n\n  listAttached() {\n    var attached, i, idx, len, ref, socket;\n    attached = [];\n    ref = this.sockets;\n    for (idx = i = 0, len = ref.length; i < len; idx = ++i) {\n      socket = ref[idx];\n      if (!socket) {\n        continue;\n      }\n      attached.push(idx);\n    }\n    return attached;\n  }\n\n  isConnected(socketId = null) {\n    var connected;\n    if (this.isAddressable()) {\n      if (socketId === null) {\n        throw new Error(`${this.getId()}: Socket ID required`);\n      }\n      if (!this.sockets[socketId]) {\n        throw new Error(`${this.getId()}: Socket ${socketId} not available`);\n      }\n      return this.sockets[socketId].isConnected();\n    }\n    connected = false;\n    this.sockets.forEach(function(socket) {\n      if (!socket) {\n        return;\n      }\n      if (socket.isConnected()) {\n        return connected = true;\n      }\n    });\n    return connected;\n  }\n\n  canAttach() {\n    return true;\n  }\n\n};\n\nmodule.exports = BasePort;\n","//     NoFlo - Flow-Based Programming for JavaScript\n//     (c) 2014-2017 Flowhub UG\n//     NoFlo may be freely distributed under the MIT license\nvar BasePort, IP, OutPort;\n\nBasePort = require('./BasePort');\n\nIP = require('./IP');\n\n// ## NoFlo outport\n\n// Outport Port (outport) implementation for NoFlo components.\n// These ports are the way a component sends Information Packets.\nOutPort = class OutPort extends BasePort {\n  constructor(options = {}) {\n    if (options.scoped == null) {\n      options.scoped = true;\n    }\n    super(options);\n    this.cache = {};\n  }\n\n  attach(socket, index = null) {\n    super.attach(socket, index);\n    if (this.isCaching() && (this.cache[index] != null)) {\n      return this.send(this.cache[index], index);\n    }\n  }\n\n  connect(socketId = null) {\n    var i, len, results, socket, sockets;\n    sockets = this.getSockets(socketId);\n    this.checkRequired(sockets);\n    results = [];\n    for (i = 0, len = sockets.length; i < len; i++) {\n      socket = sockets[i];\n      if (!socket) {\n        continue;\n      }\n      results.push(socket.connect());\n    }\n    return results;\n  }\n\n  beginGroup(group, socketId = null) {\n    var sockets;\n    sockets = this.getSockets(socketId);\n    this.checkRequired(sockets);\n    return sockets.forEach(function(socket) {\n      if (!socket) {\n        return;\n      }\n      return socket.beginGroup(group);\n    });\n  }\n\n  send(data, socketId = null) {\n    var sockets;\n    sockets = this.getSockets(socketId);\n    this.checkRequired(sockets);\n    if (this.isCaching() && data !== this.cache[socketId]) {\n      this.cache[socketId] = data;\n    }\n    return sockets.forEach(function(socket) {\n      if (!socket) {\n        return;\n      }\n      return socket.send(data);\n    });\n  }\n\n  endGroup(socketId = null) {\n    var i, len, results, socket, sockets;\n    sockets = this.getSockets(socketId);\n    this.checkRequired(sockets);\n    results = [];\n    for (i = 0, len = sockets.length; i < len; i++) {\n      socket = sockets[i];\n      if (!socket) {\n        continue;\n      }\n      results.push(socket.endGroup());\n    }\n    return results;\n  }\n\n  disconnect(socketId = null) {\n    var i, len, results, socket, sockets;\n    sockets = this.getSockets(socketId);\n    this.checkRequired(sockets);\n    results = [];\n    for (i = 0, len = sockets.length; i < len; i++) {\n      socket = sockets[i];\n      if (!socket) {\n        continue;\n      }\n      results.push(socket.disconnect());\n    }\n    return results;\n  }\n\n  sendIP(type, data, options, socketId, autoConnect = true) {\n    var i, ip, len, pristine, ref, socket, sockets;\n    if (IP.isIP(type)) {\n      ip = type;\n      socketId = ip.index;\n    } else {\n      ip = new IP(type, data, options);\n    }\n    sockets = this.getSockets(socketId);\n    this.checkRequired(sockets);\n    if (ip.datatype === 'all') {\n      // Stamp non-specific IP objects with port datatype\n      ip.datatype = this.getDataType();\n    }\n    if (this.getSchema() && !ip.schema) {\n      // Stamp non-specific IP objects with port schema\n      ip.schema = this.getSchema();\n    }\n    if (this.isCaching() && data !== ((ref = this.cache[socketId]) != null ? ref.data : void 0)) {\n      this.cache[socketId] = ip;\n    }\n    pristine = true;\n    for (i = 0, len = sockets.length; i < len; i++) {\n      socket = sockets[i];\n      if (!socket) {\n        continue;\n      }\n      if (pristine) {\n        socket.post(ip, autoConnect);\n        pristine = false;\n      } else {\n        if (ip.clonable) {\n          ip = ip.clone();\n        }\n        socket.post(ip, autoConnect);\n      }\n    }\n    return this;\n  }\n\n  openBracket(data = null, options = {}, socketId = null) {\n    return this.sendIP('openBracket', data, options, socketId);\n  }\n\n  data(data, options = {}, socketId = null) {\n    return this.sendIP('data', data, options, socketId);\n  }\n\n  closeBracket(data = null, options = {}, socketId = null) {\n    return this.sendIP('closeBracket', data, options, socketId);\n  }\n\n  checkRequired(sockets) {\n    if (sockets.length === 0 && this.isRequired()) {\n      throw new Error(`${this.getId()}: No connections available`);\n    }\n  }\n\n  getSockets(socketId) {\n    // Addressable sockets affect only one connection at time\n    if (this.isAddressable()) {\n      if (socketId === null) {\n        throw new Error(`${this.getId()} Socket ID required`);\n      }\n      if (!this.sockets[socketId]) {\n        return [];\n      }\n      return [this.sockets[socketId]];\n    }\n    // Regular sockets affect all outbound connections\n    return this.sockets;\n  }\n\n  isCaching() {\n    if (this.options.caching) {\n      return true;\n    }\n    return false;\n  }\n\n};\n\nmodule.exports = OutPort;\n","module.exports = {\n  stringPatterns: [\n    /'[^]*?'/g,\n    /\"[^]*?\"/g,\n    /`[^]*?`/g\n  ],\n\n  prePatterns: [\n    /\\[[^]*?\\]/,\n    /{[^]*?}/,\n    /=>\\s*?\\([^]*?\\)/,\n    /=\\s*?function\\s*?\\([^]*(?=[^]*\\))/,\n    /=\\s*?\\([^]*(?=[^]*\\))/,\n    /\\s*?=[^>][^,\\)]*/\n  ],\n\n  postPatterns: [\n    /\\([^]*?\\)/,\n  ]\n}\n","var BaseTransport, debugMessagingReceive, debugMessagingReceivePayload, debugMessagingSend, debugMessagingSendPayload, protocols,\n  indexOf = [].indexOf;\n\nprotocols = {\n  Runtime: require('./protocol/Runtime'),\n  Graph: require('./protocol/Graph'),\n  Network: require('./protocol/Network'),\n  Component: require('./protocol/Component')\n};\n\ndebugMessagingReceive = require('debug')('noflo-runtime-base:messaging:receive');\n\ndebugMessagingReceivePayload = require('debug')('noflo-runtime-base:messaging:receive:payload');\n\ndebugMessagingSend = require('debug')('noflo-runtime-base:messaging:send');\n\ndebugMessagingSendPayload = require('debug')('noflo-runtime-base:messaging:send:payload');\n\n// This is the class all NoFlo runtime implementations can extend to easily wrap\n// into any transport protocol.\nBaseTransport = class BaseTransport {\n  constructor(options) {\n    var graphName;\n    this.options = options;\n    if (!this.options) {\n      this.options = {};\n    }\n    this.version = '0.7';\n    this.component = new protocols.Component(this);\n    this.graph = new protocols.Graph(this);\n    this.network = new protocols.Network(this);\n    this.runtime = new protocols.Runtime(this);\n    this.context = null;\n    if (this.options.defaultGraph != null) {\n      this.options.defaultGraph.baseDir = this.options.baseDir;\n      graphName = 'default/main';\n      this.context = 'none';\n      this.graph.registerGraph(graphName, this.options.defaultGraph);\n      this.network._startNetwork(this.options.defaultGraph, graphName, this.context, function(err) {\n        if (err) {\n          throw err;\n        }\n      });\n    }\n    if ((this.options.captureOutput != null) && this.options.captureOutput) {\n      // Start capturing so that we can send it to the UI when it connects\n      this.startCapture();\n    }\n    if (!this.options.capabilities) {\n      this.options.capabilities = ['protocol:graph', 'protocol:component', 'protocol:network', 'protocol:runtime', 'component:setsource', 'component:getsource', 'graph:readonly', 'network:data', 'network:control', 'network:status'];\n    }\n    if (!this.options.defaultPermissions) {\n      // Default: no capabilities granted for anonymous users\n      this.options.defaultPermissions = [];\n    }\n    if (!this.options.permissions) {\n      this.options.permissions = {};\n    }\n  }\n\n  // Check if a given user is authorized for a given capability\n\n  // @param [Array] Capabilities to check\n  // @param [String] Secret provided by user\n  canDo(capability, secret) {\n    var checkCapabilities, permitted, userCapabilities;\n    if (typeof capability === 'string') {\n      checkCapabilities = [capability];\n    } else {\n      checkCapabilities = capability;\n    }\n    userCapabilities = this.getPermitted(secret);\n    permitted = checkCapabilities.filter(function(perm) {\n      return indexOf.call(userCapabilities, perm) >= 0;\n    });\n    if (permitted.length > 0) {\n      return true;\n    }\n    return false;\n  }\n\n  // Check if a given user is authorized to send a given message\n  canInput(protocol, topic, secret) {\n    var message;\n    if (protocol === 'graph') {\n      // All graph messages are under the same capability\n      return this.canDo(['protocol:graph'], secret);\n    }\n    message = `${protocol}:${topic}`;\n    switch (message) {\n      case 'component:list':\n        return this.canDo(['protocol:component'], secret);\n      case 'component:getsource':\n        return this.canDo(['component:getsource'], secret);\n      case 'component:source':\n        return this.canDo(['component:setsource'], secret);\n      case 'network:edges':\n        return this.canDo(['network:data', 'protocol:network'], secret);\n      case 'network:start':\n        return this.canDo(['network:control', 'protocol:network'], secret);\n      case 'network:stop':\n        return this.canDo(['network:control', 'protocol:network'], secret);\n      case 'network:debug':\n        return this.canDo(['network:control', 'protocol:network'], secret);\n      case 'network:getstatus':\n        return this.canDo(['network:status', 'network:control', 'protocol:network'], secret);\n      case 'runtime:getruntime':\n        return true;\n      case 'runtime:packet':\n        return this.canDo(['protocol:runtime'], secret);\n    }\n    return false;\n  }\n\n  // Get enabled capabilities for a user\n\n  // @param [String] Secret provided by user\n  getPermitted(secret) {\n    if (!secret) {\n      return this.options.defaultPermissions;\n    }\n    if (!this.options.permissions[secret]) {\n      return [];\n    }\n    return this.options.permissions[secret];\n  }\n\n  // Send a message back to the user via the transport protocol.\n\n  // Each transport implementation should provide their own implementation\n  // of this method.\n\n  // The context is usually the context originally received from the\n  // transport with the request. This could be an iframe origin or a\n  // specific WebSocket connection.\n\n  // @param [String] Name of the protocol\n  // @param [String] Topic of the message\n  // @param [Object] Message payload\n  // @param [Object] Message context, dependent on the transport\n  send(protocol, topic, payload, context) {\n    debugMessagingSend(`${protocol} ${topic}`);\n    return debugMessagingSendPayload(payload);\n  }\n\n  \n  // Send a message to *all users*  via the transport protocol\n\n  // The transport should verify that the recipients are authorized to receive\n  // the message by using the `canDo` method.\n\n  // Like send() only it sends to all.\n  // @param [Object] Message context, can be null\n  sendAll(protocol, topic, payload, context) {}\n\n  // This is the entry-point to actual protocol handlers. When receiving\n  // a message, the runtime should call this to make the requested actions\n  // happen\n\n  // The context is originally received from the transport. This could be\n  // an iframe origin or a specific WebSocket connection. The context will\n  // be utilized when sending messages back to the requester.\n\n  // @param [String] Name of the protocol\n  // @param [String] Topic of the message\n  // @param [Object] Message payload\n  // @param [Object] Message context, dependent on the transport\n  receive(protocol, topic, payload, context) {\n    if (!payload) {\n      payload = {};\n    }\n    debugMessagingReceive(`${protocol} ${topic}`);\n    debugMessagingReceivePayload(payload);\n    if (!this.canInput(protocol, topic, payload.secret)) {\n      this.send(protocol, 'error', new Error(`${protocol}:${topic} is not permitted`), context);\n      return;\n    }\n    this.context = context;\n    switch (protocol) {\n      case 'runtime':\n        return this.runtime.receive(topic, payload, context);\n      case 'graph':\n        return this.graph.receive(topic, payload, context);\n      case 'network':\n        return this.network.receive(topic, payload, context);\n      case 'component':\n        return this.component.receive(topic, payload, context);\n      default:\n        return this.send(protocol, 'error', new Error(`Protocol ${protocol} is not supported`), context);\n    }\n  }\n\n};\n\nmodule.exports = BaseTransport;\n\nmodule.exports.trace = require('./trace');\n\nmodule.exports.direct = require('./direct');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","exports.normalizeOptions = function (options) {\n  const normalizedOptions = options;\n  if (typeof options.catchExceptions === 'undefined') {\n    normalizedOptions.catchExceptions = true;\n    if (window.location.search && window.location.search.substring(1) === 'debug') {\n      normalizedOptions.catchExceptions = false;\n    }\n  }\n  return normalizedOptions;\n};\n\n\nexports.subscribe = function (ctx, callback) {\n  ctx.addEventListener('message', (message) => {\n    let { data } = message;\n    if (typeof message.data === 'string') {\n      data = JSON.parse(message.data);\n    }\n    if (!data.protocol) {\n      return;\n    }\n    if (!data.command) {\n      return;\n    }\n    callback(data, message);\n  });\n};\n","//     FBP Graph\n//     (c) 2013-2017 Flowhub UG\n//     (c) 2011-2012 Henri Bergius, Nemein\n//     FBP Graph may be freely distributed under the MIT license\n\n// FBP graphs are Event Emitters, providing signals when the graph\n// definition changes.\n\nvar EventEmitter, Graph, clone, mergeResolveTheirsNaive, platform, resetGraph;\n\n({EventEmitter} = require('events'));\n\nclone = require('clone');\n\nplatform = require('./Platform');\n\nGraph = (function() {\n  // This class represents an abstract FBP graph containing nodes\n  // connected to each other with edges.\n\n  // These graphs can be used for visualization and sketching, but\n  // also are the way to start a NoFlo or other FBP network.\n  class Graph extends EventEmitter {\n    // ## Creating new graphs\n\n    // Graphs are created by simply instantiating the Graph class\n    // and giving it a name:\n\n    //     myGraph = new Graph 'My very cool graph'\n    constructor(name = '', options = {}) {\n      super();\n      this.setMaxListeners(0);\n      this.name = name;\n      this.properties = {};\n      this.nodes = [];\n      this.edges = [];\n      this.initializers = [];\n      this.inports = {};\n      this.outports = {};\n      this.groups = [];\n      this.transaction = {\n        id: null,\n        depth: 0\n      };\n      this.caseSensitive = options.caseSensitive || false;\n    }\n\n    getPortName(port) {\n      if (this.caseSensitive) {\n        return port;\n      } else {\n        return port.toLowerCase();\n      }\n    }\n\n    // ## Group graph changes into transactions\n\n    // If no transaction is explicitly opened, each call to\n    // the graph API will implicitly create a transaction for that change\n    startTransaction(id, metadata) {\n      if (this.transaction.id) {\n        throw Error(\"Nested transactions not supported\");\n      }\n      this.transaction.id = id;\n      this.transaction.depth = 1;\n      return this.emit('startTransaction', id, metadata);\n    }\n\n    endTransaction(id, metadata) {\n      if (!this.transaction.id) {\n        throw Error(\"Attempted to end non-existing transaction\");\n      }\n      this.transaction.id = null;\n      this.transaction.depth = 0;\n      return this.emit('endTransaction', id, metadata);\n    }\n\n    checkTransactionStart() {\n      if (!this.transaction.id) {\n        return this.startTransaction('implicit');\n      } else if (this.transaction.id === 'implicit') {\n        return this.transaction.depth += 1;\n      }\n    }\n\n    checkTransactionEnd() {\n      if (this.transaction.id === 'implicit') {\n        this.transaction.depth -= 1;\n      }\n      if (this.transaction.depth === 0) {\n        return this.endTransaction('implicit');\n      }\n    }\n\n    // ## Modifying Graph properties\n\n    // This method allows changing properties of the graph.\n    setProperties(properties) {\n      var before, item, val;\n      this.checkTransactionStart();\n      before = clone(this.properties);\n      for (item in properties) {\n        val = properties[item];\n        this.properties[item] = val;\n      }\n      this.emit('changeProperties', this.properties, before);\n      return this.checkTransactionEnd();\n    }\n\n    addInport(publicPort, nodeKey, portKey, metadata) {\n      // Check that node exists\n      if (!this.getNode(nodeKey)) {\n        return;\n      }\n      publicPort = this.getPortName(publicPort);\n      this.checkTransactionStart();\n      this.inports[publicPort] = {\n        process: nodeKey,\n        port: this.getPortName(portKey),\n        metadata: metadata\n      };\n      this.emit('addInport', publicPort, this.inports[publicPort]);\n      return this.checkTransactionEnd();\n    }\n\n    removeInport(publicPort) {\n      var port;\n      publicPort = this.getPortName(publicPort);\n      if (!this.inports[publicPort]) {\n        return;\n      }\n      this.checkTransactionStart();\n      port = this.inports[publicPort];\n      this.setInportMetadata(publicPort, {});\n      delete this.inports[publicPort];\n      this.emit('removeInport', publicPort, port);\n      return this.checkTransactionEnd();\n    }\n\n    renameInport(oldPort, newPort) {\n      oldPort = this.getPortName(oldPort);\n      newPort = this.getPortName(newPort);\n      if (!this.inports[oldPort]) {\n        return;\n      }\n      if (newPort === oldPort) {\n        return;\n      }\n      this.checkTransactionStart();\n      this.inports[newPort] = this.inports[oldPort];\n      delete this.inports[oldPort];\n      this.emit('renameInport', oldPort, newPort);\n      return this.checkTransactionEnd();\n    }\n\n    setInportMetadata(publicPort, metadata) {\n      var before, item, val;\n      publicPort = this.getPortName(publicPort);\n      if (!this.inports[publicPort]) {\n        return;\n      }\n      this.checkTransactionStart();\n      before = clone(this.inports[publicPort].metadata);\n      if (!this.inports[publicPort].metadata) {\n        this.inports[publicPort].metadata = {};\n      }\n      for (item in metadata) {\n        val = metadata[item];\n        if (val != null) {\n          this.inports[publicPort].metadata[item] = val;\n        } else {\n          delete this.inports[publicPort].metadata[item];\n        }\n      }\n      this.emit('changeInport', publicPort, this.inports[publicPort], before, metadata);\n      return this.checkTransactionEnd();\n    }\n\n    addOutport(publicPort, nodeKey, portKey, metadata) {\n      // Check that node exists\n      if (!this.getNode(nodeKey)) {\n        return;\n      }\n      publicPort = this.getPortName(publicPort);\n      this.checkTransactionStart();\n      this.outports[publicPort] = {\n        process: nodeKey,\n        port: this.getPortName(portKey),\n        metadata: metadata\n      };\n      this.emit('addOutport', publicPort, this.outports[publicPort]);\n      return this.checkTransactionEnd();\n    }\n\n    removeOutport(publicPort) {\n      var port;\n      publicPort = this.getPortName(publicPort);\n      if (!this.outports[publicPort]) {\n        return;\n      }\n      this.checkTransactionStart();\n      port = this.outports[publicPort];\n      this.setOutportMetadata(publicPort, {});\n      delete this.outports[publicPort];\n      this.emit('removeOutport', publicPort, port);\n      return this.checkTransactionEnd();\n    }\n\n    renameOutport(oldPort, newPort) {\n      oldPort = this.getPortName(oldPort);\n      newPort = this.getPortName(newPort);\n      if (!this.outports[oldPort]) {\n        return;\n      }\n      this.checkTransactionStart();\n      this.outports[newPort] = this.outports[oldPort];\n      delete this.outports[oldPort];\n      this.emit('renameOutport', oldPort, newPort);\n      return this.checkTransactionEnd();\n    }\n\n    setOutportMetadata(publicPort, metadata) {\n      var before, item, val;\n      publicPort = this.getPortName(publicPort);\n      if (!this.outports[publicPort]) {\n        return;\n      }\n      this.checkTransactionStart();\n      before = clone(this.outports[publicPort].metadata);\n      if (!this.outports[publicPort].metadata) {\n        this.outports[publicPort].metadata = {};\n      }\n      for (item in metadata) {\n        val = metadata[item];\n        if (val != null) {\n          this.outports[publicPort].metadata[item] = val;\n        } else {\n          delete this.outports[publicPort].metadata[item];\n        }\n      }\n      this.emit('changeOutport', publicPort, this.outports[publicPort], before, metadata);\n      return this.checkTransactionEnd();\n    }\n\n    // ## Grouping nodes in a graph\n\n    addGroup(group, nodes, metadata) {\n      var g;\n      this.checkTransactionStart();\n      g = {\n        name: group,\n        nodes: nodes,\n        metadata: metadata\n      };\n      this.groups.push(g);\n      this.emit('addGroup', g);\n      return this.checkTransactionEnd();\n    }\n\n    renameGroup(oldName, newName) {\n      var group, i, len, ref;\n      this.checkTransactionStart();\n      ref = this.groups;\n      for (i = 0, len = ref.length; i < len; i++) {\n        group = ref[i];\n        if (!group) {\n          continue;\n        }\n        if (group.name !== oldName) {\n          continue;\n        }\n        group.name = newName;\n        this.emit('renameGroup', oldName, newName);\n      }\n      return this.checkTransactionEnd();\n    }\n\n    removeGroup(groupName) {\n      var group, i, len, ref;\n      this.checkTransactionStart();\n      ref = this.groups;\n      for (i = 0, len = ref.length; i < len; i++) {\n        group = ref[i];\n        if (!group) {\n          continue;\n        }\n        if (group.name !== groupName) {\n          continue;\n        }\n        this.setGroupMetadata(group.name, {});\n        this.groups.splice(this.groups.indexOf(group), 1);\n        this.emit('removeGroup', group);\n      }\n      return this.checkTransactionEnd();\n    }\n\n    setGroupMetadata(groupName, metadata) {\n      var before, group, i, item, len, ref, val;\n      this.checkTransactionStart();\n      ref = this.groups;\n      for (i = 0, len = ref.length; i < len; i++) {\n        group = ref[i];\n        if (!group) {\n          continue;\n        }\n        if (group.name !== groupName) {\n          continue;\n        }\n        before = clone(group.metadata);\n        for (item in metadata) {\n          val = metadata[item];\n          if (val != null) {\n            group.metadata[item] = val;\n          } else {\n            delete group.metadata[item];\n          }\n        }\n        this.emit('changeGroup', group, before, metadata);\n      }\n      return this.checkTransactionEnd();\n    }\n\n    // ## Adding a node to the graph\n\n    // Nodes are identified by an ID unique to the graph. Additionally,\n    // a node may contain information on what FBP component it is and\n    // possible display coordinates.\n\n    // For example:\n\n    //     myGraph.addNode 'Read, 'ReadFile',\n    //       x: 91\n    //       y: 154\n\n    // Addition of a node will emit the `addNode` event.\n    addNode(id, component, metadata) {\n      var node;\n      this.checkTransactionStart();\n      if (!metadata) {\n        metadata = {};\n      }\n      node = {\n        id: id,\n        component: component,\n        metadata: metadata\n      };\n      this.nodes.push(node);\n      this.emit('addNode', node);\n      this.checkTransactionEnd();\n      return node;\n    }\n\n    // ## Removing a node from the graph\n\n    // Existing nodes can be removed from a graph by their ID. This\n    // will remove the node and also remove all edges connected to it.\n\n    //     myGraph.removeNode 'Read'\n\n    // Once the node has been removed, the `removeNode` event will be\n    // emitted.\n    removeNode(id) {\n      var edge, group, i, index, initializer, j, k, l, len, len1, len2, len3, len4, len5, len6, m, n, node, o, priv, pub, ref, ref1, ref2, ref3, ref4, toRemove;\n      node = this.getNode(id);\n      if (!node) {\n        return;\n      }\n      this.checkTransactionStart();\n      toRemove = [];\n      ref = this.edges;\n      for (i = 0, len = ref.length; i < len; i++) {\n        edge = ref[i];\n        if ((edge.from.node === node.id) || (edge.to.node === node.id)) {\n          toRemove.push(edge);\n        }\n      }\n      for (j = 0, len1 = toRemove.length; j < len1; j++) {\n        edge = toRemove[j];\n        this.removeEdge(edge.from.node, edge.from.port, edge.to.node, edge.to.port);\n      }\n      toRemove = [];\n      ref1 = this.initializers;\n      for (k = 0, len2 = ref1.length; k < len2; k++) {\n        initializer = ref1[k];\n        if (initializer.to.node === node.id) {\n          toRemove.push(initializer);\n        }\n      }\n      for (l = 0, len3 = toRemove.length; l < len3; l++) {\n        initializer = toRemove[l];\n        this.removeInitial(initializer.to.node, initializer.to.port);\n      }\n      toRemove = [];\n      ref2 = this.inports;\n      for (pub in ref2) {\n        priv = ref2[pub];\n        if (priv.process === id) {\n          toRemove.push(pub);\n        }\n      }\n      for (m = 0, len4 = toRemove.length; m < len4; m++) {\n        pub = toRemove[m];\n        this.removeInport(pub);\n      }\n      toRemove = [];\n      ref3 = this.outports;\n      for (pub in ref3) {\n        priv = ref3[pub];\n        if (priv.process === id) {\n          toRemove.push(pub);\n        }\n      }\n      for (n = 0, len5 = toRemove.length; n < len5; n++) {\n        pub = toRemove[n];\n        this.removeOutport(pub);\n      }\n      ref4 = this.groups;\n      for (o = 0, len6 = ref4.length; o < len6; o++) {\n        group = ref4[o];\n        if (!group) {\n          continue;\n        }\n        index = group.nodes.indexOf(id);\n        if (index === -1) {\n          continue;\n        }\n        group.nodes.splice(index, 1);\n      }\n      this.setNodeMetadata(id, {});\n      if (-1 !== this.nodes.indexOf(node)) {\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n      }\n      this.emit('removeNode', node);\n      return this.checkTransactionEnd();\n    }\n\n    // ## Getting a node\n\n    // Nodes objects can be retrieved from the graph by their ID:\n\n    //     myNode = myGraph.getNode 'Read'\n    getNode(id) {\n      var i, len, node, ref;\n      ref = this.nodes;\n      for (i = 0, len = ref.length; i < len; i++) {\n        node = ref[i];\n        if (!node) {\n          continue;\n        }\n        if (node.id === id) {\n          return node;\n        }\n      }\n      return null;\n    }\n\n    // ## Renaming a node\n\n    // Nodes IDs can be changed by calling this method.\n    renameNode(oldId, newId) {\n      var edge, group, i, iip, index, j, k, len, len1, len2, node, priv, pub, ref, ref1, ref2, ref3, ref4;\n      this.checkTransactionStart();\n      node = this.getNode(oldId);\n      if (!node) {\n        return;\n      }\n      node.id = newId;\n      ref = this.edges;\n      for (i = 0, len = ref.length; i < len; i++) {\n        edge = ref[i];\n        if (!edge) {\n          continue;\n        }\n        if (edge.from.node === oldId) {\n          edge.from.node = newId;\n        }\n        if (edge.to.node === oldId) {\n          edge.to.node = newId;\n        }\n      }\n      ref1 = this.initializers;\n      for (j = 0, len1 = ref1.length; j < len1; j++) {\n        iip = ref1[j];\n        if (!iip) {\n          continue;\n        }\n        if (iip.to.node === oldId) {\n          iip.to.node = newId;\n        }\n      }\n      ref2 = this.inports;\n      for (pub in ref2) {\n        priv = ref2[pub];\n        if (priv.process === oldId) {\n          priv.process = newId;\n        }\n      }\n      ref3 = this.outports;\n      for (pub in ref3) {\n        priv = ref3[pub];\n        if (priv.process === oldId) {\n          priv.process = newId;\n        }\n      }\n      ref4 = this.groups;\n      for (k = 0, len2 = ref4.length; k < len2; k++) {\n        group = ref4[k];\n        if (!group) {\n          continue;\n        }\n        index = group.nodes.indexOf(oldId);\n        if (index === -1) {\n          continue;\n        }\n        group.nodes[index] = newId;\n      }\n      this.emit('renameNode', oldId, newId);\n      return this.checkTransactionEnd();\n    }\n\n    // ## Changing a node's metadata\n\n    // Node metadata can be set or changed by calling this method.\n    setNodeMetadata(id, metadata) {\n      var before, item, node, val;\n      node = this.getNode(id);\n      if (!node) {\n        return;\n      }\n      this.checkTransactionStart();\n      before = clone(node.metadata);\n      if (!node.metadata) {\n        node.metadata = {};\n      }\n      for (item in metadata) {\n        val = metadata[item];\n        if (val != null) {\n          node.metadata[item] = val;\n        } else {\n          delete node.metadata[item];\n        }\n      }\n      this.emit('changeNode', node, before, metadata);\n      return this.checkTransactionEnd();\n    }\n\n    // ## Connecting nodes\n\n    // Nodes can be connected by adding edges between a node's outport\n    // and another node's inport:\n\n    //     myGraph.addEdge 'Read', 'out', 'Display', 'in'\n    //     myGraph.addEdgeIndex 'Read', 'out', null, 'Display', 'in', 2\n\n    // Adding an edge will emit the `addEdge` event.\n    addEdge(outNode, outPort, inNode, inPort, metadata = {}) {\n      var edge, i, len, ref;\n      outPort = this.getPortName(outPort);\n      inPort = this.getPortName(inPort);\n      ref = this.edges;\n      for (i = 0, len = ref.length; i < len; i++) {\n        edge = ref[i];\n        // don't add a duplicate edge\n        if (edge.from.node === outNode && edge.from.port === outPort && edge.to.node === inNode && edge.to.port === inPort) {\n          return;\n        }\n      }\n      if (!this.getNode(outNode)) {\n        return;\n      }\n      if (!this.getNode(inNode)) {\n        return;\n      }\n      this.checkTransactionStart();\n      edge = {\n        from: {\n          node: outNode,\n          port: outPort\n        },\n        to: {\n          node: inNode,\n          port: inPort\n        },\n        metadata: metadata\n      };\n      this.edges.push(edge);\n      this.emit('addEdge', edge);\n      this.checkTransactionEnd();\n      return edge;\n    }\n\n    // Adding an edge will emit the `addEdge` event.\n    addEdgeIndex(outNode, outPort, outIndex, inNode, inPort, inIndex, metadata = {}) {\n      var edge;\n      if (!this.getNode(outNode)) {\n        return;\n      }\n      if (!this.getNode(inNode)) {\n        return;\n      }\n      outPort = this.getPortName(outPort);\n      inPort = this.getPortName(inPort);\n      if (inIndex === null) {\n        inIndex = void 0;\n      }\n      if (outIndex === null) {\n        outIndex = void 0;\n      }\n      if (!metadata) {\n        metadata = {};\n      }\n      this.checkTransactionStart();\n      edge = {\n        from: {\n          node: outNode,\n          port: outPort,\n          index: outIndex\n        },\n        to: {\n          node: inNode,\n          port: inPort,\n          index: inIndex\n        },\n        metadata: metadata\n      };\n      this.edges.push(edge);\n      this.emit('addEdge', edge);\n      this.checkTransactionEnd();\n      return edge;\n    }\n\n    // ## Disconnected nodes\n\n    // Connections between nodes can be removed by providing the\n    // nodes and ports to disconnect.\n\n    //     myGraph.removeEdge 'Display', 'out', 'Foo', 'in'\n\n    // Removing a connection will emit the `removeEdge` event.\n    removeEdge(node, port, node2, port2) {\n      var edge, i, index, j, k, len, len1, len2, ref, ref1, toKeep, toRemove;\n      this.checkTransactionStart();\n      port = this.getPortName(port);\n      port2 = this.getPortName(port2);\n      toRemove = [];\n      toKeep = [];\n      if (node2 && port2) {\n        ref = this.edges;\n        for (index = i = 0, len = ref.length; i < len; index = ++i) {\n          edge = ref[index];\n          if (edge.from.node === node && edge.from.port === port && edge.to.node === node2 && edge.to.port === port2) {\n            this.setEdgeMetadata(edge.from.node, edge.from.port, edge.to.node, edge.to.port, {});\n            toRemove.push(edge);\n          } else {\n            toKeep.push(edge);\n          }\n        }\n      } else {\n        ref1 = this.edges;\n        for (index = j = 0, len1 = ref1.length; j < len1; index = ++j) {\n          edge = ref1[index];\n          if ((edge.from.node === node && edge.from.port === port) || (edge.to.node === node && edge.to.port === port)) {\n            this.setEdgeMetadata(edge.from.node, edge.from.port, edge.to.node, edge.to.port, {});\n            toRemove.push(edge);\n          } else {\n            toKeep.push(edge);\n          }\n        }\n      }\n      this.edges = toKeep;\n      for (k = 0, len2 = toRemove.length; k < len2; k++) {\n        edge = toRemove[k];\n        this.emit('removeEdge', edge);\n      }\n      return this.checkTransactionEnd();\n    }\n\n    // ## Getting an edge\n\n    // Edge objects can be retrieved from the graph by the node and port IDs:\n\n    //     myEdge = myGraph.getEdge 'Read', 'out', 'Write', 'in'\n    getEdge(node, port, node2, port2) {\n      var edge, i, index, len, ref;\n      port = this.getPortName(port);\n      port2 = this.getPortName(port2);\n      ref = this.edges;\n      for (index = i = 0, len = ref.length; i < len; index = ++i) {\n        edge = ref[index];\n        if (!edge) {\n          continue;\n        }\n        if (edge.from.node === node && edge.from.port === port) {\n          if (edge.to.node === node2 && edge.to.port === port2) {\n            return edge;\n          }\n        }\n      }\n      return null;\n    }\n\n    // ## Changing an edge's metadata\n\n    // Edge metadata can be set or changed by calling this method.\n    setEdgeMetadata(node, port, node2, port2, metadata) {\n      var before, edge, item, val;\n      edge = this.getEdge(node, port, node2, port2);\n      if (!edge) {\n        return;\n      }\n      this.checkTransactionStart();\n      before = clone(edge.metadata);\n      if (!edge.metadata) {\n        edge.metadata = {};\n      }\n      for (item in metadata) {\n        val = metadata[item];\n        if (val != null) {\n          edge.metadata[item] = val;\n        } else {\n          delete edge.metadata[item];\n        }\n      }\n      this.emit('changeEdge', edge, before, metadata);\n      return this.checkTransactionEnd();\n    }\n\n    // ## Adding Initial Information Packets\n\n    // Initial Information Packets (IIPs) can be used for sending data\n    // to specified node inports without a sending node instance.\n\n    // IIPs are especially useful for sending configuration information\n    // to components at FBP network start-up time. This could include\n    // filenames to read, or network ports to listen to.\n\n    //     myGraph.addInitial 'somefile.txt', 'Read', 'source'\n    //     myGraph.addInitialIndex 'somefile.txt', 'Read', 'source', 2\n\n    // If inports are defined on the graph, IIPs can be applied calling\n    // the `addGraphInitial` or `addGraphInitialIndex` methods.\n\n    //     myGraph.addGraphInitial 'somefile.txt', 'file'\n    //     myGraph.addGraphInitialIndex 'somefile.txt', 'file', 2\n\n    // Adding an IIP will emit a `addInitial` event.\n    addInitial(data, node, port, metadata) {\n      var initializer;\n      if (!this.getNode(node)) {\n        return;\n      }\n      port = this.getPortName(port);\n      this.checkTransactionStart();\n      initializer = {\n        from: {\n          data: data\n        },\n        to: {\n          node: node,\n          port: port\n        },\n        metadata: metadata\n      };\n      this.initializers.push(initializer);\n      this.emit('addInitial', initializer);\n      this.checkTransactionEnd();\n      return initializer;\n    }\n\n    addInitialIndex(data, node, port, index, metadata) {\n      var initializer;\n      if (!this.getNode(node)) {\n        return;\n      }\n      if (index === null) {\n        index = void 0;\n      }\n      port = this.getPortName(port);\n      this.checkTransactionStart();\n      initializer = {\n        from: {\n          data: data\n        },\n        to: {\n          node: node,\n          port: port,\n          index: index\n        },\n        metadata: metadata\n      };\n      this.initializers.push(initializer);\n      this.emit('addInitial', initializer);\n      this.checkTransactionEnd();\n      return initializer;\n    }\n\n    addGraphInitial(data, node, metadata) {\n      var inport;\n      inport = this.inports[node];\n      if (!inport) {\n        return;\n      }\n      return this.addInitial(data, inport.process, inport.port, metadata);\n    }\n\n    addGraphInitialIndex(data, node, index, metadata) {\n      var inport;\n      inport = this.inports[node];\n      if (!inport) {\n        return;\n      }\n      return this.addInitialIndex(data, inport.process, inport.port, index, metadata);\n    }\n\n    // ## Removing Initial Information Packets\n\n    // IIPs can be removed by calling the `removeInitial` method.\n\n    //     myGraph.removeInitial 'Read', 'source'\n\n    // If the IIP was applied via the `addGraphInitial` or\n    // `addGraphInitialIndex` functions, it can be removed using\n    // the `removeGraphInitial` method.\n\n    //     myGraph.removeGraphInitial 'file'\n\n    // Remove an IIP will emit a `removeInitial` event.\n    removeInitial(node, port) {\n      var edge, i, index, j, len, len1, ref, toKeep, toRemove;\n      port = this.getPortName(port);\n      this.checkTransactionStart();\n      toRemove = [];\n      toKeep = [];\n      ref = this.initializers;\n      for (index = i = 0, len = ref.length; i < len; index = ++i) {\n        edge = ref[index];\n        if (edge.to.node === node && edge.to.port === port) {\n          toRemove.push(edge);\n        } else {\n          toKeep.push(edge);\n        }\n      }\n      this.initializers = toKeep;\n      for (j = 0, len1 = toRemove.length; j < len1; j++) {\n        edge = toRemove[j];\n        this.emit('removeInitial', edge);\n      }\n      return this.checkTransactionEnd();\n    }\n\n    removeGraphInitial(node) {\n      var inport;\n      inport = this.inports[node];\n      if (!inport) {\n        return;\n      }\n      return this.removeInitial(inport.process, inport.port);\n    }\n\n    toDOT() {\n      var cleanID, cleanPort, data, dot, edge, i, id, initializer, j, k, len, len1, len2, node, ref, ref1, ref2;\n      cleanID = function(id) {\n        return id.replace(/\\s*/g, \"\");\n      };\n      cleanPort = function(port) {\n        return port.replace(/\\./g, \"\");\n      };\n      dot = \"digraph {\\n\";\n      ref = this.nodes;\n      for (i = 0, len = ref.length; i < len; i++) {\n        node = ref[i];\n        dot += `    ${cleanID(node.id)} [label=${node.id} shape=box]\\n`;\n      }\n      ref1 = this.initializers;\n      for (id = j = 0, len1 = ref1.length; j < len1; id = ++j) {\n        initializer = ref1[id];\n        if (typeof initializer.from.data === 'function') {\n          data = 'Function';\n        } else {\n          data = initializer.from.data;\n        }\n        dot += `    data${id} [label=\"'${data}'\" shape=plaintext]\\n`;\n        dot += `    data${id} -> ${cleanID(initializer.to.node)}[headlabel=${cleanPort(initializer.to.port)} labelfontcolor=blue labelfontsize=8.0]\\n`;\n      }\n      ref2 = this.edges;\n      for (k = 0, len2 = ref2.length; k < len2; k++) {\n        edge = ref2[k];\n        dot += `    ${cleanID(edge.from.node)} -> ${cleanID(edge.to.node)}[taillabel=${cleanPort(edge.from.port)} headlabel=${cleanPort(edge.to.port)} labelfontcolor=blue labelfontsize=8.0]\\n`;\n      }\n      dot += \"}\";\n      return dot;\n    }\n\n    toYUML() {\n      var edge, i, initializer, j, len, len1, ref, ref1, yuml;\n      yuml = [];\n      ref = this.initializers;\n      for (i = 0, len = ref.length; i < len; i++) {\n        initializer = ref[i];\n        yuml.push(`(start)[${initializer.to.port}]->(${initializer.to.node})`);\n      }\n      ref1 = this.edges;\n      for (j = 0, len1 = ref1.length; j < len1; j++) {\n        edge = ref1[j];\n        yuml.push(`(${edge.from.node})[${edge.from.port}]->(${edge.to.node})`);\n      }\n      return yuml.join(\",\");\n    }\n\n    toJSON() {\n      var connection, edge, group, groupData, i, initializer, j, json, k, l, len, len1, len2, len3, node, priv, property, pub, ref, ref1, ref2, ref3, ref4, ref5, ref6, value;\n      json = {\n        caseSensitive: this.caseSensitive,\n        properties: {},\n        inports: {},\n        outports: {},\n        groups: [],\n        processes: {},\n        connections: []\n      };\n      if (this.name) {\n        json.properties.name = this.name;\n      }\n      ref = this.properties;\n      for (property in ref) {\n        value = ref[property];\n        json.properties[property] = value;\n      }\n      ref1 = this.inports;\n      for (pub in ref1) {\n        priv = ref1[pub];\n        json.inports[pub] = priv;\n      }\n      ref2 = this.outports;\n      for (pub in ref2) {\n        priv = ref2[pub];\n        json.outports[pub] = priv;\n      }\n      ref3 = this.groups;\n      for (i = 0, len = ref3.length; i < len; i++) {\n        group = ref3[i];\n        groupData = {\n          name: group.name,\n          nodes: group.nodes\n        };\n        if (Object.keys(group.metadata).length) {\n          groupData.metadata = group.metadata;\n        }\n        json.groups.push(groupData);\n      }\n      ref4 = this.nodes;\n      for (j = 0, len1 = ref4.length; j < len1; j++) {\n        node = ref4[j];\n        json.processes[node.id] = {\n          component: node.component\n        };\n        if (node.metadata) {\n          json.processes[node.id].metadata = node.metadata;\n        }\n      }\n      ref5 = this.edges;\n      for (k = 0, len2 = ref5.length; k < len2; k++) {\n        edge = ref5[k];\n        connection = {\n          src: {\n            process: edge.from.node,\n            port: edge.from.port,\n            index: edge.from.index\n          },\n          tgt: {\n            process: edge.to.node,\n            port: edge.to.port,\n            index: edge.to.index\n          }\n        };\n        if (Object.keys(edge.metadata).length) {\n          connection.metadata = edge.metadata;\n        }\n        json.connections.push(connection);\n      }\n      ref6 = this.initializers;\n      for (l = 0, len3 = ref6.length; l < len3; l++) {\n        initializer = ref6[l];\n        json.connections.push({\n          data: initializer.from.data,\n          tgt: {\n            process: initializer.to.node,\n            port: initializer.to.port,\n            index: initializer.to.index\n          }\n        });\n      }\n      return json;\n    }\n\n    save(file, callback) {\n      var json;\n      if (platform.isBrowser()) {\n        return callback(new Error(\"Saving graphs not supported on browser\"));\n      }\n      json = JSON.stringify(this.toJSON(), null, 4);\n      if (!file.match(/\\.json$/)) {\n        file = `${file}.json`;\n      }\n      return require('fs').writeFile(file, json, \"utf-8\", function(err, data) {\n        if (err) {\n          return callback(err);\n        }\n        return callback(null, file);\n      });\n    }\n\n  };\n\n  Graph.prototype.name = '';\n\n  Graph.prototype.caseSensitive = false;\n\n  Graph.prototype.properties = {};\n\n  Graph.prototype.nodes = [];\n\n  Graph.prototype.edges = [];\n\n  Graph.prototype.initializers = [];\n\n  Graph.prototype.inports = {};\n\n  Graph.prototype.outports = {};\n\n  Graph.prototype.groups = [];\n\n  return Graph;\n\n}).call(this);\n\nexports.Graph = Graph;\n\nexports.createGraph = function(name, options) {\n  return new Graph(name, options);\n};\n\nexports.loadJSON = function(definition, callback, metadata = {}) {\n  var caseSensitive, conn, def, graph, group, i, id, j, len, len1, priv, properties, property, pub, ref, ref1, ref2, ref3, ref4, ref5, value;\n  if (typeof definition === 'string') {\n    definition = JSON.parse(definition);\n  }\n  if (!definition.properties) {\n    definition.properties = {};\n  }\n  if (!definition.processes) {\n    definition.processes = {};\n  }\n  if (!definition.connections) {\n    definition.connections = [];\n  }\n  caseSensitive = definition.caseSensitive || false;\n  graph = new Graph(definition.properties.name, {caseSensitive});\n  graph.startTransaction('loadJSON', metadata);\n  properties = {};\n  ref = definition.properties;\n  for (property in ref) {\n    value = ref[property];\n    if (property === 'name') {\n      continue;\n    }\n    properties[property] = value;\n  }\n  graph.setProperties(properties);\n  ref1 = definition.processes;\n  for (id in ref1) {\n    def = ref1[id];\n    if (!def.metadata) {\n      def.metadata = {};\n    }\n    graph.addNode(id, def.component, def.metadata);\n  }\n  ref2 = definition.connections;\n  for (i = 0, len = ref2.length; i < len; i++) {\n    conn = ref2[i];\n    metadata = conn.metadata ? conn.metadata : {};\n    if (conn.data !== void 0) {\n      if (typeof conn.tgt.index === 'number') {\n        graph.addInitialIndex(conn.data, conn.tgt.process, graph.getPortName(conn.tgt.port), conn.tgt.index, metadata);\n      } else {\n        graph.addInitial(conn.data, conn.tgt.process, graph.getPortName(conn.tgt.port), metadata);\n      }\n      continue;\n    }\n    if (typeof conn.src.index === 'number' || typeof conn.tgt.index === 'number') {\n      graph.addEdgeIndex(conn.src.process, graph.getPortName(conn.src.port), conn.src.index, conn.tgt.process, graph.getPortName(conn.tgt.port), conn.tgt.index, metadata);\n      continue;\n    }\n    graph.addEdge(conn.src.process, graph.getPortName(conn.src.port), conn.tgt.process, graph.getPortName(conn.tgt.port), metadata);\n  }\n  if (definition.inports) {\n    ref3 = definition.inports;\n    for (pub in ref3) {\n      priv = ref3[pub];\n      graph.addInport(pub, priv.process, graph.getPortName(priv.port), priv.metadata);\n    }\n  }\n  if (definition.outports) {\n    ref4 = definition.outports;\n    for (pub in ref4) {\n      priv = ref4[pub];\n      graph.addOutport(pub, priv.process, graph.getPortName(priv.port), priv.metadata);\n    }\n  }\n  if (definition.groups) {\n    ref5 = definition.groups;\n    for (j = 0, len1 = ref5.length; j < len1; j++) {\n      group = ref5[j];\n      graph.addGroup(group.name, group.nodes, group.metadata || {});\n    }\n  }\n  graph.endTransaction('loadJSON');\n  return callback(null, graph);\n};\n\nexports.loadFBP = function(fbpData, callback, metadata = {}, caseSensitive = false) {\n  var definition, e;\n  try {\n    definition = require('fbp').parse(fbpData, {caseSensitive});\n  } catch (error) {\n    e = error;\n    return callback(e);\n  }\n  return exports.loadJSON(definition, callback, metadata);\n};\n\nexports.loadHTTP = function(url, callback) {\n  var req;\n  req = new XMLHttpRequest;\n  req.onreadystatechange = function() {\n    if (req.readyState !== 4) {\n      return;\n    }\n    if (req.status !== 200) {\n      return callback(new Error(`Failed to load ${url}: HTTP ${req.status}`));\n    }\n    return callback(null, req.responseText);\n  };\n  req.open('GET', url, true);\n  return req.send();\n};\n\nexports.loadFile = function(file, callback, metadata = {}, caseSensitive = false) {\n  if (platform.isBrowser()) {\n    // On browser we can try getting the file via AJAX\n    exports.loadHTTP(file, function(err, data) {\n      var definition;\n      if (err) {\n        return callback(err);\n      }\n      if (file.split('.').pop() === 'fbp') {\n        return exports.loadFBP(data, callback, metadata);\n      }\n      definition = JSON.parse(data);\n      return exports.loadJSON(definition, callback, metadata);\n    });\n    return;\n  }\n  // Node.js graph file\n  return require('fs').readFile(file, \"utf-8\", function(err, data) {\n    var definition;\n    if (err) {\n      return callback(err);\n    }\n    if (file.split('.').pop() === 'fbp') {\n      return exports.loadFBP(data, callback, {}, caseSensitive);\n    }\n    definition = JSON.parse(data);\n    return exports.loadJSON(definition, callback, {});\n  });\n};\n\n// remove everything in the graph\nresetGraph = function(graph) {\n  var edge, group, i, iip, j, k, l, len, len1, len2, len3, node, port, ref, ref1, ref2, ref3, ref4, ref5, results, v;\n  ref = (clone(graph.groups)).reverse();\n  // Edges and similar first, to have control over the order\n  // If we'd do nodes first, it will implicitly delete edges\n  // Important to make journal transactions invertible\n  for (i = 0, len = ref.length; i < len; i++) {\n    group = ref[i];\n    if (group != null) {\n      graph.removeGroup(group.name);\n    }\n  }\n  ref1 = clone(graph.outports);\n  for (port in ref1) {\n    v = ref1[port];\n    graph.removeOutport(port);\n  }\n  ref2 = clone(graph.inports);\n  for (port in ref2) {\n    v = ref2[port];\n    graph.removeInport(port);\n  }\n  // XXX: does this actually null the props??\n  graph.setProperties({});\n  ref3 = (clone(graph.initializers)).reverse();\n  for (j = 0, len1 = ref3.length; j < len1; j++) {\n    iip = ref3[j];\n    graph.removeInitial(iip.to.node, iip.to.port);\n  }\n  ref4 = (clone(graph.edges)).reverse();\n  for (k = 0, len2 = ref4.length; k < len2; k++) {\n    edge = ref4[k];\n    graph.removeEdge(edge.from.node, edge.from.port, edge.to.node, edge.to.port);\n  }\n  ref5 = (clone(graph.nodes)).reverse();\n  results = [];\n  for (l = 0, len3 = ref5.length; l < len3; l++) {\n    node = ref5[l];\n    results.push(graph.removeNode(node.id));\n  }\n  return results;\n};\n\n// Note: Caller should create transaction\n// First removes everything in @base, before building it up to mirror @to\nmergeResolveTheirsNaive = function(base, to) {\n  var edge, group, i, iip, j, k, l, len, len1, len2, len3, node, priv, pub, ref, ref1, ref2, ref3, ref4, ref5, results;\n  resetGraph(base);\n  ref = to.nodes;\n  for (i = 0, len = ref.length; i < len; i++) {\n    node = ref[i];\n    base.addNode(node.id, node.component, node.metadata);\n  }\n  ref1 = to.edges;\n  for (j = 0, len1 = ref1.length; j < len1; j++) {\n    edge = ref1[j];\n    base.addEdge(edge.from.node, edge.from.port, edge.to.node, edge.to.port, edge.metadata);\n  }\n  ref2 = to.initializers;\n  for (k = 0, len2 = ref2.length; k < len2; k++) {\n    iip = ref2[k];\n    base.addInitial(iip.from.data, iip.to.node, iip.to.port, iip.metadata);\n  }\n  base.setProperties(to.properties);\n  ref3 = to.inports;\n  for (pub in ref3) {\n    priv = ref3[pub];\n    base.addInport(pub, priv.process, priv.port, priv.metadata);\n  }\n  ref4 = to.outports;\n  for (pub in ref4) {\n    priv = ref4[pub];\n    base.addOutport(pub, priv.process, priv.port, priv.metadata);\n  }\n  ref5 = to.groups;\n  results = [];\n  for (l = 0, len3 = ref5.length; l < len3; l++) {\n    group = ref5[l];\n    results.push(base.addGroup(group.name, group.nodes, group.metadata));\n  }\n  return results;\n};\n\nexports.equivalent = function(a, b, options = {}) {\n  var A, B;\n  // TODO: add option to only compare known fields\n  // TODO: add option to ignore metadata\n  A = JSON.stringify(a);\n  B = JSON.stringify(b);\n  return A === B;\n};\n\nexports.mergeResolveTheirs = mergeResolveTheirsNaive;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","//     NoFlo - Flow-Based Programming for JavaScript\n//     (c) 2014-2017 Flowhub UG\n//     NoFlo may be freely distributed under the MIT license\n\n// Platform detection method\nexports.isBrowser = function() {\n  if (typeof process !== 'undefined' && process.execPath && process.execPath.match(/node|iojs/)) {\n    return false;\n  }\n  return true;\n};\n\nexports.deprecated = function(message) {\n  if (exports.isBrowser()) {\n    if (window.NOFLO_FATAL_DEPRECATED) {\n      throw new Error(message);\n    }\n    console.warn(message);\n    return;\n  }\n  if (process.env.NOFLO_FATAL_DEPRECATED) {\n    throw new Error(message);\n  }\n  return console.warn(message);\n};\n","module.exports = (function() {\n  \"use strict\";\n\n  /*\n   * Generated by PEG.js 0.9.0.\n   *\n   * http://pegjs.org/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function peg$SyntaxError(message, expected, found, location) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.location = location;\n    this.name     = \"SyntaxError\";\n\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, peg$SyntaxError);\n    }\n  }\n\n  peg$subclass(peg$SyntaxError, Error);\n\n  function peg$parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n        parser  = this,\n\n        peg$FAILED = {},\n\n        peg$startRuleFunctions = { start: peg$parsestart },\n        peg$startRuleFunction  = peg$parsestart,\n\n        peg$c0 = function() { return parser.getResult();  },\n        peg$c1 = \"INPORT=\",\n        peg$c2 = { type: \"literal\", value: \"INPORT=\", description: \"\\\"INPORT=\\\"\" },\n        peg$c3 = \".\",\n        peg$c4 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n        peg$c5 = \":\",\n        peg$c6 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n        peg$c7 = function(node, port, pub) {return parser.registerInports(node,port,pub)},\n        peg$c8 = \"OUTPORT=\",\n        peg$c9 = { type: \"literal\", value: \"OUTPORT=\", description: \"\\\"OUTPORT=\\\"\" },\n        peg$c10 = function(node, port, pub) {return parser.registerOutports(node,port,pub)},\n        peg$c11 = \"DEFAULT_INPORT=\",\n        peg$c12 = { type: \"literal\", value: \"DEFAULT_INPORT=\", description: \"\\\"DEFAULT_INPORT=\\\"\" },\n        peg$c13 = function(name) { defaultInPort = name},\n        peg$c14 = \"DEFAULT_OUTPORT=\",\n        peg$c15 = { type: \"literal\", value: \"DEFAULT_OUTPORT=\", description: \"\\\"DEFAULT_OUTPORT=\\\"\" },\n        peg$c16 = function(name) { defaultOutPort = name},\n        peg$c17 = function(annotation) { return parser.registerAnnotation(annotation[0], annotation[1]); },\n        peg$c18 = function(edges) {return parser.registerEdges(edges);},\n        peg$c19 = \",\",\n        peg$c20 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n        peg$c21 = /^[\\n\\r\\u2028\\u2029]/,\n        peg$c22 = { type: \"class\", value: \"[\\\\n\\\\r\\\\u2028\\\\u2029]\", description: \"[\\\\n\\\\r\\\\u2028\\\\u2029]\" },\n        peg$c23 = \"#\",\n        peg$c24 = { type: \"literal\", value: \"#\", description: \"\\\"#\\\"\" },\n        peg$c25 = \"->\",\n        peg$c26 = { type: \"literal\", value: \"->\", description: \"\\\"->\\\"\" },\n        peg$c27 = function(x, y) { return [x,y]; },\n        peg$c28 = function(x, proc, y) { return [{\"tgt\":makeInPort(proc, x)},{\"src\":makeOutPort(proc, y)}]; },\n        peg$c29 = function(proc, port) { return {\"src\":makeOutPort(proc, port)} },\n        peg$c30 = function(port, proc) { return {\"tgt\":makeInPort(proc, port)} },\n        peg$c31 = \"'\",\n        peg$c32 = { type: \"literal\", value: \"'\", description: \"\\\"'\\\"\" },\n        peg$c33 = function(iip) { return {\"data\":iip.join(\"\")} },\n        peg$c34 = function(iip) { return {\"data\":iip} },\n        peg$c35 = function(name) { return name},\n        peg$c36 = /^[a-zA-Z_]/,\n        peg$c37 = { type: \"class\", value: \"[a-zA-Z_]\", description: \"[a-zA-Z_]\" },\n        peg$c38 = /^[a-zA-Z0-9_\\-]/,\n        peg$c39 = { type: \"class\", value: \"[a-zA-Z0-9_\\\\-]\", description: \"[a-zA-Z0-9_\\\\-]\" },\n        peg$c40 = function(name) { return makeName(name)},\n        peg$c41 = function(name, comp) { parser.addNode(name,comp); return name},\n        peg$c42 = function(comp) { return parser.addAnonymousNode(comp, location().start.offset) },\n        peg$c43 = \"(\",\n        peg$c44 = { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n        peg$c45 = /^[a-zA-Z\\/\\-0-9_]/,\n        peg$c46 = { type: \"class\", value: \"[a-zA-Z/\\\\-0-9_]\", description: \"[a-zA-Z/\\\\-0-9_]\" },\n        peg$c47 = \")\",\n        peg$c48 = { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n        peg$c49 = function(comp, meta) { var o = {}; comp ? o.comp = comp.join(\"\") : o.comp = ''; meta ? o.meta = meta.join(\"\").split(',') : null; return o; },\n        peg$c50 = /^[a-zA-Z\\/=_,0-9]/,\n        peg$c51 = { type: \"class\", value: \"[a-zA-Z/=_,0-9]\", description: \"[a-zA-Z/=_,0-9]\" },\n        peg$c52 = function(meta) {return meta},\n        peg$c53 = \"@\",\n        peg$c54 = { type: \"literal\", value: \"@\", description: \"\\\"@\\\"\" },\n        peg$c55 = /^[a-zA-Z0-9\\-_]/,\n        peg$c56 = { type: \"class\", value: \"[a-zA-Z0-9\\\\-_]\", description: \"[a-zA-Z0-9\\\\-_]\" },\n        peg$c57 = /^[a-zA-Z0-9\\-_ .]/,\n        peg$c58 = { type: \"class\", value: \"[a-zA-Z0-9\\\\-_ \\\\.]\", description: \"[a-zA-Z0-9\\\\-_ \\\\.]\" },\n        peg$c59 = function(key, value) { return [key.join(''), value.join('')]; },\n        peg$c60 = function(portname, portindex) {return { port: options.caseSensitive? portname : portname.toLowerCase(), index: portindex != null ? portindex : undefined }},\n        peg$c61 = function(port) { return port; },\n        peg$c62 = /^[a-zA-Z.0-9_]/,\n        peg$c63 = { type: \"class\", value: \"[a-zA-Z.0-9_]\", description: \"[a-zA-Z.0-9_]\" },\n        peg$c64 = function(portname) {return makeName(portname)},\n        peg$c65 = \"[\",\n        peg$c66 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n        peg$c67 = /^[0-9]/,\n        peg$c68 = { type: \"class\", value: \"[0-9]\", description: \"[0-9]\" },\n        peg$c69 = \"]\",\n        peg$c70 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n        peg$c71 = function(portindex) {return parseInt(portindex.join(''))},\n        peg$c72 = /^[^\\n\\r\\u2028\\u2029]/,\n        peg$c73 = { type: \"class\", value: \"[^\\\\n\\\\r\\\\u2028\\\\u2029]\", description: \"[^\\\\n\\\\r\\\\u2028\\\\u2029]\" },\n        peg$c74 = /^[\\\\]/,\n        peg$c75 = { type: \"class\", value: \"[\\\\\\\\]\", description: \"[\\\\\\\\]\" },\n        peg$c76 = /^[']/,\n        peg$c77 = { type: \"class\", value: \"[']\", description: \"[']\" },\n        peg$c78 = function() { return \"'\"; },\n        peg$c79 = /^[^']/,\n        peg$c80 = { type: \"class\", value: \"[^']\", description: \"[^']\" },\n        peg$c81 = \" \",\n        peg$c82 = { type: \"literal\", value: \" \", description: \"\\\" \\\"\" },\n        peg$c83 = function(value) { return value; },\n        peg$c84 = \"{\",\n        peg$c85 = { type: \"literal\", value: \"{\", description: \"\\\"{\\\"\" },\n        peg$c86 = \"}\",\n        peg$c87 = { type: \"literal\", value: \"}\", description: \"\\\"}\\\"\" },\n        peg$c88 = { type: \"other\", description: \"whitespace\" },\n        peg$c89 = /^[ \\t\\n\\r]/,\n        peg$c90 = { type: \"class\", value: \"[ \\\\t\\\\n\\\\r]\", description: \"[ \\\\t\\\\n\\\\r]\" },\n        peg$c91 = \"false\",\n        peg$c92 = { type: \"literal\", value: \"false\", description: \"\\\"false\\\"\" },\n        peg$c93 = function() { return false; },\n        peg$c94 = \"null\",\n        peg$c95 = { type: \"literal\", value: \"null\", description: \"\\\"null\\\"\" },\n        peg$c96 = function() { return null;  },\n        peg$c97 = \"true\",\n        peg$c98 = { type: \"literal\", value: \"true\", description: \"\\\"true\\\"\" },\n        peg$c99 = function() { return true;  },\n        peg$c100 = function(head, m) { return m; },\n        peg$c101 = function(head, tail) {\n                  var result = {}, i;\n\n                  result[head.name] = head.value;\n\n                  for (i = 0; i < tail.length; i++) {\n                    result[tail[i].name] = tail[i].value;\n                  }\n\n                  return result;\n                },\n        peg$c102 = function(members) { return members !== null ? members: {}; },\n        peg$c103 = function(name, value) {\n                return { name: name, value: value };\n              },\n        peg$c104 = function(head, v) { return v; },\n        peg$c105 = function(head, tail) { return [head].concat(tail); },\n        peg$c106 = function(values) { return values !== null ? values : []; },\n        peg$c107 = { type: \"other\", description: \"number\" },\n        peg$c108 = function() { return parseFloat(text()); },\n        peg$c109 = /^[1-9]/,\n        peg$c110 = { type: \"class\", value: \"[1-9]\", description: \"[1-9]\" },\n        peg$c111 = /^[eE]/,\n        peg$c112 = { type: \"class\", value: \"[eE]\", description: \"[eE]\" },\n        peg$c113 = \"-\",\n        peg$c114 = { type: \"literal\", value: \"-\", description: \"\\\"-\\\"\" },\n        peg$c115 = \"+\",\n        peg$c116 = { type: \"literal\", value: \"+\", description: \"\\\"+\\\"\" },\n        peg$c117 = \"0\",\n        peg$c118 = { type: \"literal\", value: \"0\", description: \"\\\"0\\\"\" },\n        peg$c119 = { type: \"other\", description: \"string\" },\n        peg$c120 = function(chars) { return chars.join(\"\"); },\n        peg$c121 = \"\\\"\",\n        peg$c122 = { type: \"literal\", value: \"\\\"\", description: \"\\\"\\\\\\\"\\\"\" },\n        peg$c123 = \"\\\\\",\n        peg$c124 = { type: \"literal\", value: \"\\\\\", description: \"\\\"\\\\\\\\\\\"\" },\n        peg$c125 = \"/\",\n        peg$c126 = { type: \"literal\", value: \"/\", description: \"\\\"/\\\"\" },\n        peg$c127 = \"b\",\n        peg$c128 = { type: \"literal\", value: \"b\", description: \"\\\"b\\\"\" },\n        peg$c129 = function() { return \"\\b\"; },\n        peg$c130 = \"f\",\n        peg$c131 = { type: \"literal\", value: \"f\", description: \"\\\"f\\\"\" },\n        peg$c132 = function() { return \"\\f\"; },\n        peg$c133 = \"n\",\n        peg$c134 = { type: \"literal\", value: \"n\", description: \"\\\"n\\\"\" },\n        peg$c135 = function() { return \"\\n\"; },\n        peg$c136 = \"r\",\n        peg$c137 = { type: \"literal\", value: \"r\", description: \"\\\"r\\\"\" },\n        peg$c138 = function() { return \"\\r\"; },\n        peg$c139 = \"t\",\n        peg$c140 = { type: \"literal\", value: \"t\", description: \"\\\"t\\\"\" },\n        peg$c141 = function() { return \"\\t\"; },\n        peg$c142 = \"u\",\n        peg$c143 = { type: \"literal\", value: \"u\", description: \"\\\"u\\\"\" },\n        peg$c144 = function(digits) {\n                    return String.fromCharCode(parseInt(digits, 16));\n                  },\n        peg$c145 = function(sequence) { return sequence; },\n        peg$c146 = /^[^\\0-\\x1F\"\\\\]/,\n        peg$c147 = { type: \"class\", value: \"[^\\\\0-\\\\x1F\\\\x22\\\\x5C]\", description: \"[^\\\\0-\\\\x1F\\\\x22\\\\x5C]\" },\n        peg$c148 = /^[0-9a-f]/i,\n        peg$c149 = { type: \"class\", value: \"[0-9a-f]i\", description: \"[0-9a-f]i\" },\n\n        peg$currPos          = 0,\n        peg$savedPos         = 0,\n        peg$posDetailsCache  = [{ line: 1, column: 1, seenCR: false }],\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$savedPos, peg$currPos);\n    }\n\n    function location() {\n      return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n\n    function expected(description) {\n      throw peg$buildException(\n        null,\n        [{ type: \"other\", description: description }],\n        input.substring(peg$savedPos, peg$currPos),\n        peg$computeLocation(peg$savedPos, peg$currPos)\n      );\n    }\n\n    function error(message) {\n      throw peg$buildException(\n        message,\n        null,\n        input.substring(peg$savedPos, peg$currPos),\n        peg$computeLocation(peg$savedPos, peg$currPos)\n      );\n    }\n\n    function peg$computePosDetails(pos) {\n      var details = peg$posDetailsCache[pos],\n          p, ch;\n\n      if (details) {\n        return details;\n      } else {\n        p = pos - 1;\n        while (!peg$posDetailsCache[p]) {\n          p--;\n        }\n\n        details = peg$posDetailsCache[p];\n        details = {\n          line:   details.line,\n          column: details.column,\n          seenCR: details.seenCR\n        };\n\n        while (p < pos) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) { details.line++; }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n\n          p++;\n        }\n\n        peg$posDetailsCache[pos] = details;\n        return details;\n      }\n    }\n\n    function peg$computeLocation(startPos, endPos) {\n      var startPosDetails = peg$computePosDetails(startPos),\n          endPosDetails   = peg$computePosDetails(endPos);\n\n      return {\n        start: {\n          offset: startPos,\n          line:   startPosDetails.line,\n          column: startPosDetails.column\n        },\n        end: {\n          offset: endPos,\n          line:   endPosDetails.line,\n          column: endPosDetails.column\n        }\n      };\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, found, location) {\n      function cleanupExpected(expected) {\n        var i = 1;\n\n        expected.sort(function(a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n          return s\n            .replace(/\\\\/g,   '\\\\\\\\')\n            .replace(/\"/g,    '\\\\\"')\n            .replace(/\\x08/g, '\\\\b')\n            .replace(/\\t/g,   '\\\\t')\n            .replace(/\\n/g,   '\\\\n')\n            .replace(/\\f/g,   '\\\\f')\n            .replace(/\\r/g,   '\\\\r')\n            .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n            .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n            .replace(/[\\u0100-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n            .replace(/[\\u1000-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n        }\n\n        var expectedDescs = new Array(expected.length),\n            expectedDesc, foundDesc, i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1\n          ? expectedDescs.slice(0, -1).join(\", \")\n              + \" or \"\n              + expectedDescs[expected.length - 1]\n          : expectedDescs[0];\n\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new peg$SyntaxError(\n        message !== null ? message : buildMessage(expected, found),\n        expected,\n        found,\n        location\n      );\n    }\n\n    function peg$parsestart() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseline();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseline();\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c0();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseline() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 7) === peg$c1) {\n          s2 = peg$c1;\n          peg$currPos += 7;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c2); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsenode();\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 46) {\n              s4 = peg$c3;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c4); }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseportName();\n              if (s5 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 58) {\n                  s6 = peg$c5;\n                  peg$currPos++;\n                } else {\n                  s6 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c6); }\n                }\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parseportName();\n                  if (s7 !== peg$FAILED) {\n                    s8 = peg$parse_();\n                    if (s8 !== peg$FAILED) {\n                      s9 = peg$parseLineTerminator();\n                      if (s9 === peg$FAILED) {\n                        s9 = null;\n                      }\n                      if (s9 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c7(s3, s5, s7);\n                        s0 = s1;\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 8) === peg$c8) {\n            s2 = peg$c8;\n            peg$currPos += 8;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c9); }\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parsenode();\n            if (s3 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 46) {\n                s4 = peg$c3;\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c4); }\n              }\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parseportName();\n                if (s5 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 58) {\n                    s6 = peg$c5;\n                    peg$currPos++;\n                  } else {\n                    s6 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c6); }\n                  }\n                  if (s6 !== peg$FAILED) {\n                    s7 = peg$parseportName();\n                    if (s7 !== peg$FAILED) {\n                      s8 = peg$parse_();\n                      if (s8 !== peg$FAILED) {\n                        s9 = peg$parseLineTerminator();\n                        if (s9 === peg$FAILED) {\n                          s9 = null;\n                        }\n                        if (s9 !== peg$FAILED) {\n                          peg$savedPos = s0;\n                          s1 = peg$c10(s3, s5, s7);\n                          s0 = s1;\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parse_();\n          if (s1 !== peg$FAILED) {\n            if (input.substr(peg$currPos, 15) === peg$c11) {\n              s2 = peg$c11;\n              peg$currPos += 15;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c12); }\n            }\n            if (s2 !== peg$FAILED) {\n              s3 = peg$parseportName();\n              if (s3 !== peg$FAILED) {\n                s4 = peg$parse_();\n                if (s4 !== peg$FAILED) {\n                  s5 = peg$parseLineTerminator();\n                  if (s5 === peg$FAILED) {\n                    s5 = null;\n                  }\n                  if (s5 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c13(s3);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parse_();\n            if (s1 !== peg$FAILED) {\n              if (input.substr(peg$currPos, 16) === peg$c14) {\n                s2 = peg$c14;\n                peg$currPos += 16;\n              } else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c15); }\n              }\n              if (s2 !== peg$FAILED) {\n                s3 = peg$parseportName();\n                if (s3 !== peg$FAILED) {\n                  s4 = peg$parse_();\n                  if (s4 !== peg$FAILED) {\n                    s5 = peg$parseLineTerminator();\n                    if (s5 === peg$FAILED) {\n                      s5 = null;\n                    }\n                    if (s5 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c16(s3);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              s1 = peg$parseannotation();\n              if (s1 !== peg$FAILED) {\n                s2 = peg$parsenewline();\n                if (s2 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c17(s1);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                s1 = peg$parsecomment();\n                if (s1 !== peg$FAILED) {\n                  s2 = peg$parsenewline();\n                  if (s2 === peg$FAILED) {\n                    s2 = null;\n                  }\n                  if (s2 !== peg$FAILED) {\n                    s1 = [s1, s2];\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  s1 = peg$parse_();\n                  if (s1 !== peg$FAILED) {\n                    s2 = peg$parsenewline();\n                    if (s2 !== peg$FAILED) {\n                      s1 = [s1, s2];\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$currPos;\n                    s1 = peg$parse_();\n                    if (s1 !== peg$FAILED) {\n                      s2 = peg$parseconnection();\n                      if (s2 !== peg$FAILED) {\n                        s3 = peg$parse_();\n                        if (s3 !== peg$FAILED) {\n                          s4 = peg$parseLineTerminator();\n                          if (s4 === peg$FAILED) {\n                            s4 = null;\n                          }\n                          if (s4 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c18(s2);\n                            s0 = s1;\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseLineTerminator() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s2 = peg$c19;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c20); }\n        }\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsecomment();\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsenewline();\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            if (s4 !== peg$FAILED) {\n              s1 = [s1, s2, s3, s4];\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsenewline() {\n      var s0;\n\n      if (peg$c21.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c22); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsecomment() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 35) {\n          s2 = peg$c23;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c24); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseanychar();\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parseanychar();\n          }\n          if (s3 !== peg$FAILED) {\n            s1 = [s1, s2, s3];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseconnection() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parsesource();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c25) {\n            s3 = peg$c25;\n            peg$currPos += 2;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c26); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseconnection();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c27(s1, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsedestination();\n      }\n\n      return s0;\n    }\n\n    function peg$parsesource() {\n      var s0;\n\n      s0 = peg$parsebridge();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseoutport();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseiip();\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsedestination() {\n      var s0;\n\n      s0 = peg$parseinport();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsebridge();\n      }\n\n      return s0;\n    }\n\n    function peg$parsebridge() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parseport__();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsenode();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse__port();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c28(s1, s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseport__();\n        if (s1 === peg$FAILED) {\n          s1 = null;\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsenodeWithComponent();\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parse__port();\n            if (s3 === peg$FAILED) {\n              s3 = null;\n            }\n            if (s3 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c28(s1, s2, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseoutport() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = peg$parsenode();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse__port();\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c29(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseinport() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = peg$parseport__();\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsenode();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c30(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseiip() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 39) {\n        s1 = peg$c31;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c32); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseiipchar();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseiipchar();\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 39) {\n            s3 = peg$c31;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c32); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c33(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseJSON_text();\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c34(s1);\n        }\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n    function peg$parsenode() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      s1 = peg$parsenodeNameAndComponent();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c35(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsenodeName();\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c35(s1);\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parsenodeComponent();\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c35(s1);\n          }\n          s0 = s1;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsenodeName() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      if (peg$c36.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c37); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c38.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c39); }\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (peg$c38.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c39); }\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c40(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsenodeNameAndComponent() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = peg$parsenodeName();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsecomponent();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c41(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsenodeComponent() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      s1 = peg$parsecomponent();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c42(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsenodeWithComponent() {\n      var s0;\n\n      s0 = peg$parsenodeNameAndComponent();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsenodeComponent();\n      }\n\n      return s0;\n    }\n\n    function peg$parsecomponent() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c43;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c44); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c45.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c46); }\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c45.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c46); }\n          }\n        }\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsecompMeta();\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s4 = peg$c47;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c48); }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c49(s2, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecompMeta() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 58) {\n        s1 = peg$c5;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c6); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c50.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c51); }\n        }\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            if (peg$c50.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c51); }\n            }\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c52(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseannotation() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 35) {\n        s1 = peg$c23;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c24); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse__();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 64) {\n            s3 = peg$c53;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c54); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            if (peg$c55.test(input.charAt(peg$currPos))) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c56); }\n            }\n            if (s5 !== peg$FAILED) {\n              while (s5 !== peg$FAILED) {\n                s4.push(s5);\n                if (peg$c55.test(input.charAt(peg$currPos))) {\n                  s5 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c56); }\n                }\n              }\n            } else {\n              s4 = peg$FAILED;\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse__();\n              if (s5 !== peg$FAILED) {\n                s6 = [];\n                if (peg$c57.test(input.charAt(peg$currPos))) {\n                  s7 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                }\n                if (s7 !== peg$FAILED) {\n                  while (s7 !== peg$FAILED) {\n                    s6.push(s7);\n                    if (peg$c57.test(input.charAt(peg$currPos))) {\n                      s7 = input.charAt(peg$currPos);\n                      peg$currPos++;\n                    } else {\n                      s7 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                    }\n                  }\n                } else {\n                  s6 = peg$FAILED;\n                }\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c59(s4, s6);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseport() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = peg$parseportName();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseportIndex();\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c60(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseport__() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = peg$parseport();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse__();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c61(s1);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parse__port() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = peg$parse__();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseport();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c61(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseportName() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      if (peg$c36.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c37); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c62.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c63); }\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (peg$c62.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c63); }\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c64(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseportIndex() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c65;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c66); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c67.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c68); }\n        }\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            if (peg$c67.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c68); }\n            }\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 93) {\n            s3 = peg$c69;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c70); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c71(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseanychar() {\n      var s0;\n\n      if (peg$c72.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c73); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseiipchar() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      if (peg$c74.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c75); }\n      }\n      if (s1 !== peg$FAILED) {\n        if (peg$c76.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c77); }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c78();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        if (peg$c79.test(input.charAt(peg$currPos))) {\n          s0 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c80); }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parse_() {\n      var s0, s1;\n\n      s0 = [];\n      if (input.charCodeAt(peg$currPos) === 32) {\n        s1 = peg$c81;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c82); }\n      }\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (input.charCodeAt(peg$currPos) === 32) {\n          s1 = peg$c81;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c82); }\n        }\n      }\n      if (s0 === peg$FAILED) {\n        s0 = null;\n      }\n\n      return s0;\n    }\n\n    function peg$parse__() {\n      var s0, s1;\n\n      s0 = [];\n      if (input.charCodeAt(peg$currPos) === 32) {\n        s1 = peg$c81;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c82); }\n      }\n      if (s1 !== peg$FAILED) {\n        while (s1 !== peg$FAILED) {\n          s0.push(s1);\n          if (input.charCodeAt(peg$currPos) === 32) {\n            s1 = peg$c81;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c82); }\n          }\n        }\n      } else {\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseJSON_text() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parsews();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsevalue();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsews();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c83(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsebegin_array() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parsews();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 91) {\n          s2 = peg$c65;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c66); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsews();\n          if (s3 !== peg$FAILED) {\n            s1 = [s1, s2, s3];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsebegin_object() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parsews();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 123) {\n          s2 = peg$c84;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c85); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsews();\n          if (s3 !== peg$FAILED) {\n            s1 = [s1, s2, s3];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseend_array() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parsews();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s2 = peg$c69;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c70); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsews();\n          if (s3 !== peg$FAILED) {\n            s1 = [s1, s2, s3];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseend_object() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parsews();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 125) {\n          s2 = peg$c86;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c87); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsews();\n          if (s3 !== peg$FAILED) {\n            s1 = [s1, s2, s3];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsename_separator() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parsews();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s2 = peg$c5;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsews();\n          if (s3 !== peg$FAILED) {\n            s1 = [s1, s2, s3];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsevalue_separator() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parsews();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s2 = peg$c19;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c20); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsews();\n          if (s3 !== peg$FAILED) {\n            s1 = [s1, s2, s3];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsews() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = [];\n      if (peg$c89.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c90); }\n      }\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c89.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c90); }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c88); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsevalue() {\n      var s0;\n\n      s0 = peg$parsefalse();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsenull();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsetrue();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseobject();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parsearray();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parsenumber();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parsestring();\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsefalse() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c91) {\n        s1 = peg$c91;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c92); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c93();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsenull() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 4) === peg$c94) {\n        s1 = peg$c94;\n        peg$currPos += 4;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c95); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c96();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsetrue() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 4) === peg$c97) {\n        s1 = peg$c97;\n        peg$currPos += 4;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c98); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c99();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseobject() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parsebegin_object();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = peg$parsemember();\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$currPos;\n          s6 = peg$parsevalue_separator();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parsemember();\n            if (s7 !== peg$FAILED) {\n              peg$savedPos = s5;\n              s6 = peg$c100(s3, s7);\n              s5 = s6;\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$currPos;\n            s6 = peg$parsevalue_separator();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsemember();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c100(s3, s7);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s2;\n            s3 = peg$c101(s3, s4);\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseend_object();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c102(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsemember() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parsestring();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsename_separator();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsevalue();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c103(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsearray() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parsebegin_array();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = peg$parsevalue();\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$currPos;\n          s6 = peg$parsevalue_separator();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parsevalue();\n            if (s7 !== peg$FAILED) {\n              peg$savedPos = s5;\n              s6 = peg$c104(s3, s7);\n              s5 = s6;\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$currPos;\n            s6 = peg$parsevalue_separator();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsevalue();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c104(s3, s7);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s2;\n            s3 = peg$c105(s3, s4);\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseend_array();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c106(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsenumber() {\n      var s0, s1, s2, s3, s4;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseminus();\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseint();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsefrac();\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseexp();\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c108();\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c107); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsedecimal_point() {\n      var s0;\n\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s0 = peg$c3;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c4); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsedigit1_9() {\n      var s0;\n\n      if (peg$c109.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c110); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsee() {\n      var s0;\n\n      if (peg$c111.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c112); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseexp() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parsee();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseminus();\n        if (s2 === peg$FAILED) {\n          s2 = peg$parseplus();\n        }\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseDIGIT();\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              s4 = peg$parseDIGIT();\n            }\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s1 = [s1, s2, s3];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsefrac() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parsedecimal_point();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseDIGIT();\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$parseDIGIT();\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseint() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$parsezero();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsedigit1_9();\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n          s3 = peg$parseDIGIT();\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$parseDIGIT();\n          }\n          if (s2 !== peg$FAILED) {\n            s1 = [s1, s2];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseminus() {\n      var s0;\n\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s0 = peg$c113;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c114); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseplus() {\n      var s0;\n\n      if (input.charCodeAt(peg$currPos) === 43) {\n        s0 = peg$c115;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c116); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsezero() {\n      var s0;\n\n      if (input.charCodeAt(peg$currPos) === 48) {\n        s0 = peg$c117;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c118); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsestring() {\n      var s0, s1, s2, s3;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parsequotation_mark();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parsechar();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsechar();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsequotation_mark();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c120(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c119); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsechar() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n      s0 = peg$parseunescaped();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseescape();\n        if (s1 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 34) {\n            s2 = peg$c121;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c122); }\n          }\n          if (s2 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 92) {\n              s2 = peg$c123;\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c124); }\n            }\n            if (s2 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 47) {\n                s2 = peg$c125;\n                peg$currPos++;\n              } else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c126); }\n              }\n              if (s2 === peg$FAILED) {\n                s2 = peg$currPos;\n                if (input.charCodeAt(peg$currPos) === 98) {\n                  s3 = peg$c127;\n                  peg$currPos++;\n                } else {\n                  s3 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c128); }\n                }\n                if (s3 !== peg$FAILED) {\n                  peg$savedPos = s2;\n                  s3 = peg$c129();\n                }\n                s2 = s3;\n                if (s2 === peg$FAILED) {\n                  s2 = peg$currPos;\n                  if (input.charCodeAt(peg$currPos) === 102) {\n                    s3 = peg$c130;\n                    peg$currPos++;\n                  } else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c131); }\n                  }\n                  if (s3 !== peg$FAILED) {\n                    peg$savedPos = s2;\n                    s3 = peg$c132();\n                  }\n                  s2 = s3;\n                  if (s2 === peg$FAILED) {\n                    s2 = peg$currPos;\n                    if (input.charCodeAt(peg$currPos) === 110) {\n                      s3 = peg$c133;\n                      peg$currPos++;\n                    } else {\n                      s3 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c134); }\n                    }\n                    if (s3 !== peg$FAILED) {\n                      peg$savedPos = s2;\n                      s3 = peg$c135();\n                    }\n                    s2 = s3;\n                    if (s2 === peg$FAILED) {\n                      s2 = peg$currPos;\n                      if (input.charCodeAt(peg$currPos) === 114) {\n                        s3 = peg$c136;\n                        peg$currPos++;\n                      } else {\n                        s3 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c137); }\n                      }\n                      if (s3 !== peg$FAILED) {\n                        peg$savedPos = s2;\n                        s3 = peg$c138();\n                      }\n                      s2 = s3;\n                      if (s2 === peg$FAILED) {\n                        s2 = peg$currPos;\n                        if (input.charCodeAt(peg$currPos) === 116) {\n                          s3 = peg$c139;\n                          peg$currPos++;\n                        } else {\n                          s3 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c140); }\n                        }\n                        if (s3 !== peg$FAILED) {\n                          peg$savedPos = s2;\n                          s3 = peg$c141();\n                        }\n                        s2 = s3;\n                        if (s2 === peg$FAILED) {\n                          s2 = peg$currPos;\n                          if (input.charCodeAt(peg$currPos) === 117) {\n                            s3 = peg$c142;\n                            peg$currPos++;\n                          } else {\n                            s3 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c143); }\n                          }\n                          if (s3 !== peg$FAILED) {\n                            s4 = peg$currPos;\n                            s5 = peg$currPos;\n                            s6 = peg$parseHEXDIG();\n                            if (s6 !== peg$FAILED) {\n                              s7 = peg$parseHEXDIG();\n                              if (s7 !== peg$FAILED) {\n                                s8 = peg$parseHEXDIG();\n                                if (s8 !== peg$FAILED) {\n                                  s9 = peg$parseHEXDIG();\n                                  if (s9 !== peg$FAILED) {\n                                    s6 = [s6, s7, s8, s9];\n                                    s5 = s6;\n                                  } else {\n                                    peg$currPos = s5;\n                                    s5 = peg$FAILED;\n                                  }\n                                } else {\n                                  peg$currPos = s5;\n                                  s5 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s5;\n                                s5 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s5;\n                              s5 = peg$FAILED;\n                            }\n                            if (s5 !== peg$FAILED) {\n                              s4 = input.substring(s4, peg$currPos);\n                            } else {\n                              s4 = s5;\n                            }\n                            if (s4 !== peg$FAILED) {\n                              peg$savedPos = s2;\n                              s3 = peg$c144(s4);\n                              s2 = s3;\n                            } else {\n                              peg$currPos = s2;\n                              s2 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s2;\n                            s2 = peg$FAILED;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n          if (s2 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c145(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseescape() {\n      var s0;\n\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s0 = peg$c123;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c124); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsequotation_mark() {\n      var s0;\n\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s0 = peg$c121;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c122); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseunescaped() {\n      var s0;\n\n      if (peg$c146.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c147); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseDIGIT() {\n      var s0;\n\n      if (peg$c67.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c68); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseHEXDIG() {\n      var s0;\n\n      if (peg$c148.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c149); }\n      }\n\n      return s0;\n    }\n\n\n      var parser, edges, nodes;\n\n      var defaultInPort = \"IN\", defaultOutPort = \"OUT\";\n\n      parser = this;\n      delete parser.properties;\n      delete parser.inports;\n      delete parser.outports;\n      delete parser.groups;\n\n      edges = parser.edges = [];\n\n      nodes = {};\n\n      var serialize, indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n      parser.validateContents = function(graph, options) {\n        // Ensure all nodes have a component\n        if (graph.processes) {\n          Object.keys(graph.processes).forEach(function (node) {\n            if (!graph.processes[node].component) {\n              throw new Error('Node \"' + node + '\" does not have a component defined');\n            }\n          });\n        }\n        // Ensure all inports point to existing nodes\n        if (graph.inports) {\n          Object.keys(graph.inports).forEach(function (port) {\n            var portDef = graph.inports[port];\n            if (!graph.processes[portDef.process]) {\n              throw new Error('Inport \"' + port + '\" is connected to an undefined target node \"' + portDef.process + '\"');\n            }\n          });\n        }\n        // Ensure all outports point to existing nodes\n        if (graph.outports) {\n          Object.keys(graph.outports).forEach(function (port) {\n            var portDef = graph.outports[port];\n            if (!graph.processes[portDef.process]) {\n              throw new Error('Outport \"' + port + '\" is connected to an undefined source node \"' + portDef.process + '\"');\n            }\n          });\n        }\n        // Ensure all edges have nodes defined\n        if (graph.connections) {\n          graph.connections.forEach(function (edge) {\n            if (edge.tgt && !graph.processes[edge.tgt.process]) {\n              if (edge.data) {\n                throw new Error('IIP containing \"' + edge.data + '\" is connected to an undefined target node \"' + edge.tgt.process + '\"');\n              }\n              throw new Error('Edge from \"' + edge.src.process + '\" port \"' + edge.src.port + '\" is connected to an undefined target node \"' + edge.tgt.process + '\"');\n            }\n            if (edge.src && !graph.processes[edge.src.process]) {\n              throw new Error('Edge to \"' + edge.tgt.process + '\" port \"' + edge.tgt.port + '\" is connected to an undefined source node \"' + edge.src.process + '\"');\n            }\n          });\n        }\n      };\n\n      parser.serialize = function(graph) {\n        var conn, getInOutName, getName, i, inPort, input, len, name, namedComponents, outPort, output, process, ref, ref1, ref2, src, srcName, srcPort, srcProcess, tgt, tgtName, tgtPort, tgtProcess;\n        if (options == null) {\n          options = {};\n        }\n        if (typeof(graph) === 'string') {\n          input = JSON.parse(graph);\n        } else {\n          input = graph;\n        }\n        namedComponents = [];\n        output = \"\";\n        getName = function(name) {\n          if (input.processes[name].metadata != null) {\n            name = input.processes[name].metadata.label;\n          }\n          if (name.indexOf('/') > -1) {\n            name = name.split('/').pop();\n          }\n          return name;\n        };\n        getInOutName = function(name, data) {\n          if ((data.process != null) && (input.processes[data.process].metadata != null)) {\n            name = input.processes[data.process].metadata.label;\n          } else if (data.process != null) {\n            name = data.process;\n          }\n          if (name.indexOf('/') > -1) {\n            name = name.split('/').pop();\n          }\n          return name;\n        };\n        if (input.properties) {\n          if (input.properties.environment && input.properties.environment.type) {\n            output += \"# @runtime \" + input.properties.environment.type + \"\\n\";\n          }\n          Object.keys(input.properties).forEach(function (prop) {\n            if (!prop.match(/^[a-zA-Z0-9\\-_]+$/)) {\n              return;\n            }\n            var propval = input.properties[prop];\n            if (typeof propval !== 'string') {\n              return;\n            }\n            if (!propval.match(/^[a-zA-Z0-9\\-_\\s\\.]+$/)) {\n              return;\n            }\n            output += \"# @\" + prop + \" \" + propval + '\\n';\n          });\n        }\n        ref = input.inports;\n        for (name in ref) {\n          inPort = ref[name];\n          process = getInOutName(name, inPort);\n          name = input.caseSensitive ? name : name.toUpperCase();\n          inPort.port = input.caseSensitive ? inPort.port : inPort.port.toUpperCase();\n          output += \"INPORT=\" + process + \".\" + inPort.port + \":\" + name + \"\\n\";\n        }\n        ref1 = input.outports;\n        for (name in ref1) {\n          outPort = ref1[name];\n          process = getInOutName(name, inPort);\n          name = input.caseSensitive ? name : name.toUpperCase();\n          outPort.port = input.caseSensitive ? outPort.port : outPort.port.toUpperCase();\n          output += \"OUTPORT=\" + process + \".\" + outPort.port + \":\" + name + \"\\n\";\n        }\n        output += \"\\n\";\n        ref2 = input.connections;\n        for (i = 0, len = ref2.length; i < len; i++) {\n          conn = ref2[i];\n          if (conn.data != null) {\n            tgtPort = input.caseSensitive ? conn.tgt.port : conn.tgt.port.toUpperCase();\n            tgtName = conn.tgt.process;\n            tgtProcess = input.processes[tgtName].component;\n            tgt = getName(tgtName);\n            if (indexOf.call(namedComponents, tgtProcess) < 0) {\n              tgt += \"(\" + tgtProcess + \")\";\n              namedComponents.push(tgtProcess);\n            }\n            output += '\"' + conn.data + '\"' + (\" -> \" + tgtPort + \" \" + tgt + \"\\n\");\n          } else {\n            srcPort = input.caseSensitive ? conn.src.port : conn.src.port.toUpperCase();\n            srcName = conn.src.process;\n            srcProcess = input.processes[srcName].component;\n            src = getName(srcName);\n            if (indexOf.call(namedComponents, srcProcess) < 0) {\n              src += \"(\" + srcProcess + \")\";\n              namedComponents.push(srcProcess);\n            }\n            tgtPort = input.caseSensitive ? conn.tgt.port : conn.tgt.port.toUpperCase();\n            tgtName = conn.tgt.process;\n            tgtProcess = input.processes[tgtName].component;\n            tgt = getName(tgtName);\n            if (indexOf.call(namedComponents, tgtProcess) < 0) {\n              tgt += \"(\" + tgtProcess + \")\";\n              namedComponents.push(tgtProcess);\n            }\n            output += src + \" \" + srcPort + \" -> \" + tgtPort + \" \" + tgt + \"\\n\";\n          }\n        }\n        return output;\n      };\n\n      parser.addNode = function (nodeName, comp) {\n        if (!nodes[nodeName]) {\n          nodes[nodeName] = {}\n        }\n        if (!!comp.comp) {\n          nodes[nodeName].component = comp.comp;\n        }\n        if (!!comp.meta) {\n          var metadata = {};\n          for (var i = 0; i < comp.meta.length; i++) {\n            var item = comp.meta[i].split('=');\n            if (item.length === 1) {\n              item = ['routes', item[0]];\n            }\n            var key = item[0];\n            var value = item[1];\n            if (key==='x' || key==='y') {\n              value = parseFloat(value);\n            }\n            metadata[key] = value;\n          }\n          nodes[nodeName].metadata=metadata;\n        }\n\n      }\n\n      var anonymousIndexes = {};\n      var anonymousNodeNames = {};\n      parser.addAnonymousNode = function(comp, offset) {\n          if (!anonymousNodeNames[offset]) {\n              var componentName = comp.comp.replace(/[^a-zA-Z0-9]+/, \"_\");\n              anonymousIndexes[componentName] = (anonymousIndexes[componentName] || 0) + 1;\n              anonymousNodeNames[offset] = \"_\" + componentName + \"_\" + anonymousIndexes[componentName];\n              this.addNode(anonymousNodeNames[offset], comp);\n          }\n          return anonymousNodeNames[offset];\n      }\n\n      parser.getResult = function () {\n        var result = {\n          inports: parser.inports || {},\n          outports: parser.outports || {},\n          groups: parser.groups || [],\n          processes: nodes || {},\n          connections: parser.processEdges()\n        };\n\n        if (parser.properties) {\n          result.properties = parser.properties;\n        }\n        result.caseSensitive = options.caseSensitive || false;\n\n        var validateSchema = parser.validateSchema; // default\n        if (typeof(options.validateSchema) !== 'undefined') { validateSchema = options.validateSchema; } // explicit option\n        if (validateSchema) {\n          if (typeof(tv4) === 'undefined') {\n            var tv4 = require(\"tv4\");\n          }\n          var schema = require(\"../schema/graph.json\");\n          var validation = tv4.validateMultiple(result, schema);\n          if (!validation.valid) {\n            throw new Error(\"fbp: Did not validate againt graph schema:\\n\" + JSON.stringify(validation.errors, null, 2));\n          }\n        }\n\n        if (typeof options.validateContents === 'undefined' || options.validateContents) {\n          parser.validateContents(result);\n        }\n\n        return result;\n      }\n\n      var flatten = function (array, isShallow) {\n        var index = -1,\n          length = array ? array.length : 0,\n          result = [];\n\n        while (++index < length) {\n          var value = array[index];\n\n          if (value instanceof Array) {\n            Array.prototype.push.apply(result, isShallow ? value : flatten(value));\n          }\n          else {\n            result.push(value);\n          }\n        }\n        return result;\n      }\n\n      parser.registerAnnotation = function (key, value) {\n        if (!parser.properties) {\n          parser.properties = {};\n        }\n\n        if (key === 'runtime') {\n          parser.properties.environment = {};\n          parser.properties.environment.type = value;\n          return;\n        }\n\n        parser.properties[key] = value;\n      };\n\n      parser.registerInports = function (node, port, pub) {\n        if (!parser.inports) {\n          parser.inports = {};\n        }\n\n        if (!options.caseSensitive) {\n          pub = pub.toLowerCase();\n          port = port.toLowerCase();\n        }\n\n        parser.inports[pub] = {process:node, port:port};\n      }\n      parser.registerOutports = function (node, port, pub) {\n        if (!parser.outports) {\n          parser.outports = {};\n        }\n\n        if (!options.caseSensitive) {\n          pub = pub.toLowerCase();\n          port = port.toLowerCase();\n        }\n\n        parser.outports[pub] = {process:node, port:port};\n      }\n\n      parser.registerEdges = function (edges) {\n        if (Array.isArray(edges)) {\n          edges.forEach(function (o, i) {\n            parser.edges.push(o);\n          });\n        }\n      }\n\n      parser.processEdges = function () {\n        var flats, grouped;\n        flats = flatten(parser.edges);\n        grouped = [];\n        var current = {};\n        for (var i = 1; i < flats.length; i += 1) {\n            // skip over default ports at the beginning of lines (could also handle this in grammar)\n            if ((\"src\" in flats[i - 1] || \"data\" in flats[i - 1]) && \"tgt\" in flats[i]) {\n                flats[i - 1].tgt = flats[i].tgt;\n                grouped.push(flats[i - 1]);\n                i++;\n            }\n        }\n        return grouped;\n      }\n\n      function makeName(s) {\n        return s[0] + s[1].join(\"\");\n      }\n\n      function makePort(process, port, defaultPort) {\n        if (!options.caseSensitive) {\n          defaultPort = defaultPort.toLowerCase()\n        }\n        var p = {\n            process: process,\n            port: port ? port.port : defaultPort\n        };\n        if (port && port.index != null) {\n            p.index = port.index;\n        }\n        return p;\n    }\n\n      function makeInPort(process, port) {\n          return makePort(process, port, defaultInPort);\n      }\n      function makeOutPort(process, port) {\n          return makePort(process, port, defaultOutPort);\n      }\n\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({ type: \"end\", description: \"end of input\" });\n      }\n\n      throw peg$buildException(\n        null,\n        peg$maxFailExpected,\n        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n        peg$maxFailPos < input.length\n          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n      );\n    }\n  }\n\n  return {\n    SyntaxError: peg$SyntaxError,\n    parse:       peg$parse\n  };\n})();","/*\r\nAuthor: Geraint Luff and others\r\nYear: 2013\r\n\r\nThis code is released into the \"public domain\" by its author(s).  Anybody may use, alter and distribute the code without restriction.  The author makes no guarantees, and takes no liability of any kind for use of this code.\r\n\r\nIf you find a bug or make an improvement, it would be courteous to let the author know, but it is not compulsory.\r\n*/\r\n(function (global, factory) {\r\n  if (typeof define === 'function' && define.amd) {\r\n    // AMD. Register as an anonymous module.\r\n    define([], factory);\r\n  } else if (typeof module !== 'undefined' && module.exports){\r\n    // CommonJS. Define export.\r\n    module.exports = factory();\r\n  } else {\r\n    // Browser globals\r\n    global.tv4 = factory();\r\n  }\r\n}(this, function () {\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FObject%2Fkeys\r\nif (!Object.keys) {\r\n\tObject.keys = (function () {\r\n\t\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n\t\t\thasDontEnumBug = !({toString: null}).propertyIsEnumerable('toString'),\r\n\t\t\tdontEnums = [\r\n\t\t\t\t'toString',\r\n\t\t\t\t'toLocaleString',\r\n\t\t\t\t'valueOf',\r\n\t\t\t\t'hasOwnProperty',\r\n\t\t\t\t'isPrototypeOf',\r\n\t\t\t\t'propertyIsEnumerable',\r\n\t\t\t\t'constructor'\r\n\t\t\t],\r\n\t\t\tdontEnumsLength = dontEnums.length;\r\n\r\n\t\treturn function (obj) {\r\n\t\t\tif (typeof obj !== 'object' && typeof obj !== 'function' || obj === null) {\r\n\t\t\t\tthrow new TypeError('Object.keys called on non-object');\r\n\t\t\t}\r\n\r\n\t\t\tvar result = [];\r\n\r\n\t\t\tfor (var prop in obj) {\r\n\t\t\t\tif (hasOwnProperty.call(obj, prop)) {\r\n\t\t\t\t\tresult.push(prop);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (hasDontEnumBug) {\r\n\t\t\t\tfor (var i=0; i < dontEnumsLength; i++) {\r\n\t\t\t\t\tif (hasOwnProperty.call(obj, dontEnums[i])) {\r\n\t\t\t\t\t\tresult.push(dontEnums[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t};\r\n\t})();\r\n}\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create\r\nif (!Object.create) {\r\n\tObject.create = (function(){\r\n\t\tfunction F(){}\r\n\r\n\t\treturn function(o){\r\n\t\t\tif (arguments.length !== 1) {\r\n\t\t\t\tthrow new Error('Object.create implementation only accepts one parameter.');\r\n\t\t\t}\r\n\t\t\tF.prototype = o;\r\n\t\t\treturn new F();\r\n\t\t};\r\n\t})();\r\n}\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FArray%2FisArray\r\nif(!Array.isArray) {\r\n\tArray.isArray = function (vArg) {\r\n\t\treturn Object.prototype.toString.call(vArg) === \"[object Array]\";\r\n\t};\r\n}\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FArray%2FindexOf\r\nif (!Array.prototype.indexOf) {\r\n\tArray.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\r\n\t\tif (this === null) {\r\n\t\t\tthrow new TypeError();\r\n\t\t}\r\n\t\tvar t = Object(this);\r\n\t\tvar len = t.length >>> 0;\r\n\r\n\t\tif (len === 0) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tvar n = 0;\r\n\t\tif (arguments.length > 1) {\r\n\t\t\tn = Number(arguments[1]);\r\n\t\t\tif (n !== n) { // shortcut for verifying if it's NaN\r\n\t\t\t\tn = 0;\r\n\t\t\t} else if (n !== 0 && n !== Infinity && n !== -Infinity) {\r\n\t\t\t\tn = (n > 0 || -1) * Math.floor(Math.abs(n));\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (n >= len) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tvar k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\r\n\t\tfor (; k < len; k++) {\r\n\t\t\tif (k in t && t[k] === searchElement) {\r\n\t\t\t\treturn k;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t};\r\n}\r\n\r\n// Grungey Object.isFrozen hack\r\nif (!Object.isFrozen) {\r\n\tObject.isFrozen = function (obj) {\r\n\t\tvar key = \"tv4_test_frozen_key\";\r\n\t\twhile (obj.hasOwnProperty(key)) {\r\n\t\t\tkey += Math.random();\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tobj[key] = true;\r\n\t\t\tdelete obj[key];\r\n\t\t\treturn false;\r\n\t\t} catch (e) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t};\r\n}\r\n// Based on: https://github.com/geraintluff/uri-templates, but with all the de-substitution stuff removed\r\n\r\nvar uriTemplateGlobalModifiers = {\r\n\t\"+\": true,\r\n\t\"#\": true,\r\n\t\".\": true,\r\n\t\"/\": true,\r\n\t\";\": true,\r\n\t\"?\": true,\r\n\t\"&\": true\r\n};\r\nvar uriTemplateSuffices = {\r\n\t\"*\": true\r\n};\r\n\r\nfunction notReallyPercentEncode(string) {\r\n\treturn encodeURI(string).replace(/%25[0-9][0-9]/g, function (doubleEncoded) {\r\n\t\treturn \"%\" + doubleEncoded.substring(3);\r\n\t});\r\n}\r\n\r\nfunction uriTemplateSubstitution(spec) {\r\n\tvar modifier = \"\";\r\n\tif (uriTemplateGlobalModifiers[spec.charAt(0)]) {\r\n\t\tmodifier = spec.charAt(0);\r\n\t\tspec = spec.substring(1);\r\n\t}\r\n\tvar separator = \"\";\r\n\tvar prefix = \"\";\r\n\tvar shouldEscape = true;\r\n\tvar showVariables = false;\r\n\tvar trimEmptyString = false;\r\n\tif (modifier === '+') {\r\n\t\tshouldEscape = false;\r\n\t} else if (modifier === \".\") {\r\n\t\tprefix = \".\";\r\n\t\tseparator = \".\";\r\n\t} else if (modifier === \"/\") {\r\n\t\tprefix = \"/\";\r\n\t\tseparator = \"/\";\r\n\t} else if (modifier === '#') {\r\n\t\tprefix = \"#\";\r\n\t\tshouldEscape = false;\r\n\t} else if (modifier === ';') {\r\n\t\tprefix = \";\";\r\n\t\tseparator = \";\";\r\n\t\tshowVariables = true;\r\n\t\ttrimEmptyString = true;\r\n\t} else if (modifier === '?') {\r\n\t\tprefix = \"?\";\r\n\t\tseparator = \"&\";\r\n\t\tshowVariables = true;\r\n\t} else if (modifier === '&') {\r\n\t\tprefix = \"&\";\r\n\t\tseparator = \"&\";\r\n\t\tshowVariables = true;\r\n\t}\r\n\r\n\tvar varNames = [];\r\n\tvar varList = spec.split(\",\");\r\n\tvar varSpecs = [];\r\n\tvar varSpecMap = {};\r\n\tfor (var i = 0; i < varList.length; i++) {\r\n\t\tvar varName = varList[i];\r\n\t\tvar truncate = null;\r\n\t\tif (varName.indexOf(\":\") !== -1) {\r\n\t\t\tvar parts = varName.split(\":\");\r\n\t\t\tvarName = parts[0];\r\n\t\t\ttruncate = parseInt(parts[1], 10);\r\n\t\t}\r\n\t\tvar suffices = {};\r\n\t\twhile (uriTemplateSuffices[varName.charAt(varName.length - 1)]) {\r\n\t\t\tsuffices[varName.charAt(varName.length - 1)] = true;\r\n\t\t\tvarName = varName.substring(0, varName.length - 1);\r\n\t\t}\r\n\t\tvar varSpec = {\r\n\t\t\ttruncate: truncate,\r\n\t\t\tname: varName,\r\n\t\t\tsuffices: suffices\r\n\t\t};\r\n\t\tvarSpecs.push(varSpec);\r\n\t\tvarSpecMap[varName] = varSpec;\r\n\t\tvarNames.push(varName);\r\n\t}\r\n\tvar subFunction = function (valueFunction) {\r\n\t\tvar result = \"\";\r\n\t\tvar startIndex = 0;\r\n\t\tfor (var i = 0; i < varSpecs.length; i++) {\r\n\t\t\tvar varSpec = varSpecs[i];\r\n\t\t\tvar value = valueFunction(varSpec.name);\r\n\t\t\tif (value === null || value === undefined || (Array.isArray(value) && value.length === 0) || (typeof value === 'object' && Object.keys(value).length === 0)) {\r\n\t\t\t\tstartIndex++;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (i === startIndex) {\r\n\t\t\t\tresult += prefix;\r\n\t\t\t} else {\r\n\t\t\t\tresult += (separator || \",\");\r\n\t\t\t}\r\n\t\t\tif (Array.isArray(value)) {\r\n\t\t\t\tif (showVariables) {\r\n\t\t\t\t\tresult += varSpec.name + \"=\";\r\n\t\t\t\t}\r\n\t\t\t\tfor (var j = 0; j < value.length; j++) {\r\n\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\tresult += varSpec.suffices['*'] ? (separator || \",\") : \",\";\r\n\t\t\t\t\t\tif (varSpec.suffices['*'] && showVariables) {\r\n\t\t\t\t\t\t\tresult += varSpec.name + \"=\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresult += shouldEscape ? encodeURIComponent(value[j]).replace(/!/g, \"%21\") : notReallyPercentEncode(value[j]);\r\n\t\t\t\t}\r\n\t\t\t} else if (typeof value === \"object\") {\r\n\t\t\t\tif (showVariables && !varSpec.suffices['*']) {\r\n\t\t\t\t\tresult += varSpec.name + \"=\";\r\n\t\t\t\t}\r\n\t\t\t\tvar first = true;\r\n\t\t\t\tfor (var key in value) {\r\n\t\t\t\t\tif (!first) {\r\n\t\t\t\t\t\tresult += varSpec.suffices['*'] ? (separator || \",\") : \",\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfirst = false;\r\n\t\t\t\t\tresult += shouldEscape ? encodeURIComponent(key).replace(/!/g, \"%21\") : notReallyPercentEncode(key);\r\n\t\t\t\t\tresult += varSpec.suffices['*'] ? '=' : \",\";\r\n\t\t\t\t\tresult += shouldEscape ? encodeURIComponent(value[key]).replace(/!/g, \"%21\") : notReallyPercentEncode(value[key]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (showVariables) {\r\n\t\t\t\t\tresult += varSpec.name;\r\n\t\t\t\t\tif (!trimEmptyString || value !== \"\") {\r\n\t\t\t\t\t\tresult += \"=\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (varSpec.truncate != null) {\r\n\t\t\t\t\tvalue = value.substring(0, varSpec.truncate);\r\n\t\t\t\t}\r\n\t\t\t\tresult += shouldEscape ? encodeURIComponent(value).replace(/!/g, \"%21\"): notReallyPercentEncode(value);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\tsubFunction.varNames = varNames;\r\n\treturn {\r\n\t\tprefix: prefix,\r\n\t\tsubstitution: subFunction\r\n\t};\r\n}\r\n\r\nfunction UriTemplate(template) {\r\n\tif (!(this instanceof UriTemplate)) {\r\n\t\treturn new UriTemplate(template);\r\n\t}\r\n\tvar parts = template.split(\"{\");\r\n\tvar textParts = [parts.shift()];\r\n\tvar prefixes = [];\r\n\tvar substitutions = [];\r\n\tvar varNames = [];\r\n\twhile (parts.length > 0) {\r\n\t\tvar part = parts.shift();\r\n\t\tvar spec = part.split(\"}\")[0];\r\n\t\tvar remainder = part.substring(spec.length + 1);\r\n\t\tvar funcs = uriTemplateSubstitution(spec);\r\n\t\tsubstitutions.push(funcs.substitution);\r\n\t\tprefixes.push(funcs.prefix);\r\n\t\ttextParts.push(remainder);\r\n\t\tvarNames = varNames.concat(funcs.substitution.varNames);\r\n\t}\r\n\tthis.fill = function (valueFunction) {\r\n\t\tvar result = textParts[0];\r\n\t\tfor (var i = 0; i < substitutions.length; i++) {\r\n\t\t\tvar substitution = substitutions[i];\r\n\t\t\tresult += substitution(valueFunction);\r\n\t\t\tresult += textParts[i + 1];\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\tthis.varNames = varNames;\r\n\tthis.template = template;\r\n}\r\nUriTemplate.prototype = {\r\n\ttoString: function () {\r\n\t\treturn this.template;\r\n\t},\r\n\tfillFromObject: function (obj) {\r\n\t\treturn this.fill(function (varName) {\r\n\t\t\treturn obj[varName];\r\n\t\t});\r\n\t}\r\n};\r\nvar ValidatorContext = function ValidatorContext(parent, collectMultiple, errorReporter, checkRecursive, trackUnknownProperties) {\r\n\tthis.missing = [];\r\n\tthis.missingMap = {};\r\n\tthis.formatValidators = parent ? Object.create(parent.formatValidators) : {};\r\n\tthis.schemas = parent ? Object.create(parent.schemas) : {};\r\n\tthis.collectMultiple = collectMultiple;\r\n\tthis.errors = [];\r\n\tthis.handleError = collectMultiple ? this.collectError : this.returnError;\r\n\tif (checkRecursive) {\r\n\t\tthis.checkRecursive = true;\r\n\t\tthis.scanned = [];\r\n\t\tthis.scannedFrozen = [];\r\n\t\tthis.scannedFrozenSchemas = [];\r\n\t\tthis.scannedFrozenValidationErrors = [];\r\n\t\tthis.validatedSchemasKey = 'tv4_validation_id';\r\n\t\tthis.validationErrorsKey = 'tv4_validation_errors_id';\r\n\t}\r\n\tif (trackUnknownProperties) {\r\n\t\tthis.trackUnknownProperties = true;\r\n\t\tthis.knownPropertyPaths = {};\r\n\t\tthis.unknownPropertyPaths = {};\r\n\t}\r\n\tthis.errorReporter = errorReporter || defaultErrorReporter('en');\r\n\tif (typeof this.errorReporter === 'string') {\r\n\t\tthrow new Error('debug');\r\n\t}\r\n\tthis.definedKeywords = {};\r\n\tif (parent) {\r\n\t\tfor (var key in parent.definedKeywords) {\r\n\t\t\tthis.definedKeywords[key] = parent.definedKeywords[key].slice(0);\r\n\t\t}\r\n\t}\r\n};\r\nValidatorContext.prototype.defineKeyword = function (keyword, keywordFunction) {\r\n\tthis.definedKeywords[keyword] = this.definedKeywords[keyword] || [];\r\n\tthis.definedKeywords[keyword].push(keywordFunction);\r\n};\r\nValidatorContext.prototype.createError = function (code, messageParams, dataPath, schemaPath, subErrors, data, schema) {\r\n\tvar error = new ValidationError(code, messageParams, dataPath, schemaPath, subErrors);\r\n\terror.message = this.errorReporter(error, data, schema);\r\n\treturn error;\r\n};\r\nValidatorContext.prototype.returnError = function (error) {\r\n\treturn error;\r\n};\r\nValidatorContext.prototype.collectError = function (error) {\r\n\tif (error) {\r\n\t\tthis.errors.push(error);\r\n\t}\r\n\treturn null;\r\n};\r\nValidatorContext.prototype.prefixErrors = function (startIndex, dataPath, schemaPath) {\r\n\tfor (var i = startIndex; i < this.errors.length; i++) {\r\n\t\tthis.errors[i] = this.errors[i].prefixWith(dataPath, schemaPath);\r\n\t}\r\n\treturn this;\r\n};\r\nValidatorContext.prototype.banUnknownProperties = function (data, schema) {\r\n\tfor (var unknownPath in this.unknownPropertyPaths) {\r\n\t\tvar error = this.createError(ErrorCodes.UNKNOWN_PROPERTY, {path: unknownPath}, unknownPath, \"\", null, data, schema);\r\n\t\tvar result = this.handleError(error);\r\n\t\tif (result) {\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.addFormat = function (format, validator) {\r\n\tif (typeof format === 'object') {\r\n\t\tfor (var key in format) {\r\n\t\t\tthis.addFormat(key, format[key]);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\tthis.formatValidators[format] = validator;\r\n};\r\nValidatorContext.prototype.resolveRefs = function (schema, urlHistory) {\r\n\tif (schema['$ref'] !== undefined) {\r\n\t\turlHistory = urlHistory || {};\r\n\t\tif (urlHistory[schema['$ref']]) {\r\n\t\t\treturn this.createError(ErrorCodes.CIRCULAR_REFERENCE, {urls: Object.keys(urlHistory).join(', ')}, '', '', null, undefined, schema);\r\n\t\t}\r\n\t\turlHistory[schema['$ref']] = true;\r\n\t\tschema = this.getSchema(schema['$ref'], urlHistory);\r\n\t}\r\n\treturn schema;\r\n};\r\nValidatorContext.prototype.getSchema = function (url, urlHistory) {\r\n\tvar schema;\r\n\tif (this.schemas[url] !== undefined) {\r\n\t\tschema = this.schemas[url];\r\n\t\treturn this.resolveRefs(schema, urlHistory);\r\n\t}\r\n\tvar baseUrl = url;\r\n\tvar fragment = \"\";\r\n\tif (url.indexOf('#') !== -1) {\r\n\t\tfragment = url.substring(url.indexOf(\"#\") + 1);\r\n\t\tbaseUrl = url.substring(0, url.indexOf(\"#\"));\r\n\t}\r\n\tif (typeof this.schemas[baseUrl] === 'object') {\r\n\t\tschema = this.schemas[baseUrl];\r\n\t\tvar pointerPath = decodeURIComponent(fragment);\r\n\t\tif (pointerPath === \"\") {\r\n\t\t\treturn this.resolveRefs(schema, urlHistory);\r\n\t\t} else if (pointerPath.charAt(0) !== \"/\") {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\tvar parts = pointerPath.split(\"/\").slice(1);\r\n\t\tfor (var i = 0; i < parts.length; i++) {\r\n\t\t\tvar component = parts[i].replace(/~1/g, \"/\").replace(/~0/g, \"~\");\r\n\t\t\tif (schema[component] === undefined) {\r\n\t\t\t\tschema = undefined;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tschema = schema[component];\r\n\t\t}\r\n\t\tif (schema !== undefined) {\r\n\t\t\treturn this.resolveRefs(schema, urlHistory);\r\n\t\t}\r\n\t}\r\n\tif (this.missing[baseUrl] === undefined) {\r\n\t\tthis.missing.push(baseUrl);\r\n\t\tthis.missing[baseUrl] = baseUrl;\r\n\t\tthis.missingMap[baseUrl] = baseUrl;\r\n\t}\r\n};\r\nValidatorContext.prototype.searchSchemas = function (schema, url) {\r\n\tif (Array.isArray(schema)) {\r\n\t\tfor (var i = 0; i < schema.length; i++) {\r\n\t\t\tthis.searchSchemas(schema[i], url);\r\n\t\t}\r\n\t} else if (schema && typeof schema === \"object\") {\r\n\t\tif (typeof schema.id === \"string\") {\r\n\t\t\tif (isTrustedUrl(url, schema.id)) {\r\n\t\t\t\tif (this.schemas[schema.id] === undefined) {\r\n\t\t\t\t\tthis.schemas[schema.id] = schema;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (var key in schema) {\r\n\t\t\tif (key !== \"enum\") {\r\n\t\t\t\tif (typeof schema[key] === \"object\") {\r\n\t\t\t\t\tthis.searchSchemas(schema[key], url);\r\n\t\t\t\t} else if (key === \"$ref\") {\r\n\t\t\t\t\tvar uri = getDocumentUri(schema[key]);\r\n\t\t\t\t\tif (uri && this.schemas[uri] === undefined && this.missingMap[uri] === undefined) {\r\n\t\t\t\t\t\tthis.missingMap[uri] = uri;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\nValidatorContext.prototype.addSchema = function (url, schema) {\r\n\t//overload\r\n\tif (typeof url !== 'string' || typeof schema === 'undefined') {\r\n\t\tif (typeof url === 'object' && typeof url.id === 'string') {\r\n\t\t\tschema = url;\r\n\t\t\turl = schema.id;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\tif (url === getDocumentUri(url) + \"#\") {\r\n\t\t// Remove empty fragment\r\n\t\turl = getDocumentUri(url);\r\n\t}\r\n\tthis.schemas[url] = schema;\r\n\tdelete this.missingMap[url];\r\n\tnormSchema(schema, url);\r\n\tthis.searchSchemas(schema, url);\r\n};\r\n\r\nValidatorContext.prototype.getSchemaMap = function () {\r\n\tvar map = {};\r\n\tfor (var key in this.schemas) {\r\n\t\tmap[key] = this.schemas[key];\r\n\t}\r\n\treturn map;\r\n};\r\n\r\nValidatorContext.prototype.getSchemaUris = function (filterRegExp) {\r\n\tvar list = [];\r\n\tfor (var key in this.schemas) {\r\n\t\tif (!filterRegExp || filterRegExp.test(key)) {\r\n\t\t\tlist.push(key);\r\n\t\t}\r\n\t}\r\n\treturn list;\r\n};\r\n\r\nValidatorContext.prototype.getMissingUris = function (filterRegExp) {\r\n\tvar list = [];\r\n\tfor (var key in this.missingMap) {\r\n\t\tif (!filterRegExp || filterRegExp.test(key)) {\r\n\t\t\tlist.push(key);\r\n\t\t}\r\n\t}\r\n\treturn list;\r\n};\r\n\r\nValidatorContext.prototype.dropSchemas = function () {\r\n\tthis.schemas = {};\r\n\tthis.reset();\r\n};\r\nValidatorContext.prototype.reset = function () {\r\n\tthis.missing = [];\r\n\tthis.missingMap = {};\r\n\tthis.errors = [];\r\n};\r\n\r\nValidatorContext.prototype.validateAll = function (data, schema, dataPathParts, schemaPathParts, dataPointerPath) {\r\n\tvar topLevel;\r\n\tschema = this.resolveRefs(schema);\r\n\tif (!schema) {\r\n\t\treturn null;\r\n\t} else if (schema instanceof ValidationError) {\r\n\t\tthis.errors.push(schema);\r\n\t\treturn schema;\r\n\t}\r\n\r\n\tvar startErrorCount = this.errors.length;\r\n\tvar frozenIndex, scannedFrozenSchemaIndex = null, scannedSchemasIndex = null;\r\n\tif (this.checkRecursive && data && typeof data === 'object') {\r\n\t\ttopLevel = !this.scanned.length;\r\n\t\tif (data[this.validatedSchemasKey]) {\r\n\t\t\tvar schemaIndex = data[this.validatedSchemasKey].indexOf(schema);\r\n\t\t\tif (schemaIndex !== -1) {\r\n\t\t\t\tthis.errors = this.errors.concat(data[this.validationErrorsKey][schemaIndex]);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (Object.isFrozen(data)) {\r\n\t\t\tfrozenIndex = this.scannedFrozen.indexOf(data);\r\n\t\t\tif (frozenIndex !== -1) {\r\n\t\t\t\tvar frozenSchemaIndex = this.scannedFrozenSchemas[frozenIndex].indexOf(schema);\r\n\t\t\t\tif (frozenSchemaIndex !== -1) {\r\n\t\t\t\t\tthis.errors = this.errors.concat(this.scannedFrozenValidationErrors[frozenIndex][frozenSchemaIndex]);\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.scanned.push(data);\r\n\t\tif (Object.isFrozen(data)) {\r\n\t\t\tif (frozenIndex === -1) {\r\n\t\t\t\tfrozenIndex = this.scannedFrozen.length;\r\n\t\t\t\tthis.scannedFrozen.push(data);\r\n\t\t\t\tthis.scannedFrozenSchemas.push([]);\r\n\t\t\t}\r\n\t\t\tscannedFrozenSchemaIndex = this.scannedFrozenSchemas[frozenIndex].length;\r\n\t\t\tthis.scannedFrozenSchemas[frozenIndex][scannedFrozenSchemaIndex] = schema;\r\n\t\t\tthis.scannedFrozenValidationErrors[frozenIndex][scannedFrozenSchemaIndex] = [];\r\n\t\t} else {\r\n\t\t\tif (!data[this.validatedSchemasKey]) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tObject.defineProperty(data, this.validatedSchemasKey, {\r\n\t\t\t\t\t\tvalue: [],\r\n\t\t\t\t\t\tconfigurable: true\r\n\t\t\t\t\t});\r\n\t\t\t\t\tObject.defineProperty(data, this.validationErrorsKey, {\r\n\t\t\t\t\t\tvalue: [],\r\n\t\t\t\t\t\tconfigurable: true\r\n\t\t\t\t\t});\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\t//IE 7/8 workaround\r\n\t\t\t\t\tdata[this.validatedSchemasKey] = [];\r\n\t\t\t\t\tdata[this.validationErrorsKey] = [];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tscannedSchemasIndex = data[this.validatedSchemasKey].length;\r\n\t\t\tdata[this.validatedSchemasKey][scannedSchemasIndex] = schema;\r\n\t\t\tdata[this.validationErrorsKey][scannedSchemasIndex] = [];\r\n\t\t}\r\n\t}\r\n\r\n\tvar errorCount = this.errors.length;\r\n\tvar error = this.validateBasic(data, schema, dataPointerPath)\r\n\t\t|| this.validateNumeric(data, schema, dataPointerPath)\r\n\t\t|| this.validateString(data, schema, dataPointerPath)\r\n\t\t|| this.validateArray(data, schema, dataPointerPath)\r\n\t\t|| this.validateObject(data, schema, dataPointerPath)\r\n\t\t|| this.validateCombinations(data, schema, dataPointerPath)\r\n\t\t|| this.validateHypermedia(data, schema, dataPointerPath)\r\n\t\t|| this.validateFormat(data, schema, dataPointerPath)\r\n\t\t|| this.validateDefinedKeywords(data, schema, dataPointerPath)\r\n\t\t|| null;\r\n\r\n\tif (topLevel) {\r\n\t\twhile (this.scanned.length) {\r\n\t\t\tvar item = this.scanned.pop();\r\n\t\t\tdelete item[this.validatedSchemasKey];\r\n\t\t}\r\n\t\tthis.scannedFrozen = [];\r\n\t\tthis.scannedFrozenSchemas = [];\r\n\t}\r\n\r\n\tif (error || errorCount !== this.errors.length) {\r\n\t\twhile ((dataPathParts && dataPathParts.length) || (schemaPathParts && schemaPathParts.length)) {\r\n\t\t\tvar dataPart = (dataPathParts && dataPathParts.length) ? \"\" + dataPathParts.pop() : null;\r\n\t\t\tvar schemaPart = (schemaPathParts && schemaPathParts.length) ? \"\" + schemaPathParts.pop() : null;\r\n\t\t\tif (error) {\r\n\t\t\t\terror = error.prefixWith(dataPart, schemaPart);\r\n\t\t\t}\r\n\t\t\tthis.prefixErrors(errorCount, dataPart, schemaPart);\r\n\t\t}\r\n\t}\r\n\r\n\tif (scannedFrozenSchemaIndex !== null) {\r\n\t\tthis.scannedFrozenValidationErrors[frozenIndex][scannedFrozenSchemaIndex] = this.errors.slice(startErrorCount);\r\n\t} else if (scannedSchemasIndex !== null) {\r\n\t\tdata[this.validationErrorsKey][scannedSchemasIndex] = this.errors.slice(startErrorCount);\r\n\t}\r\n\r\n\treturn this.handleError(error);\r\n};\r\nValidatorContext.prototype.validateFormat = function (data, schema) {\r\n\tif (typeof schema.format !== 'string' || !this.formatValidators[schema.format]) {\r\n\t\treturn null;\r\n\t}\r\n\tvar errorMessage = this.formatValidators[schema.format].call(null, data, schema);\r\n\tif (typeof errorMessage === 'string' || typeof errorMessage === 'number') {\r\n\t\treturn this.createError(ErrorCodes.FORMAT_CUSTOM, {message: errorMessage}, '', '/format', null, data, schema);\r\n\t} else if (errorMessage && typeof errorMessage === 'object') {\r\n\t\treturn this.createError(ErrorCodes.FORMAT_CUSTOM, {message: errorMessage.message || \"?\"}, errorMessage.dataPath || '', errorMessage.schemaPath || \"/format\", null, data, schema);\r\n\t}\r\n\treturn null;\r\n};\r\nValidatorContext.prototype.validateDefinedKeywords = function (data, schema, dataPointerPath) {\r\n\tfor (var key in this.definedKeywords) {\r\n\t\tif (typeof schema[key] === 'undefined') {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tvar validationFunctions = this.definedKeywords[key];\r\n\t\tfor (var i = 0; i < validationFunctions.length; i++) {\r\n\t\t\tvar func = validationFunctions[i];\r\n\t\t\tvar result = func(data, schema[key], schema, dataPointerPath);\r\n\t\t\tif (typeof result === 'string' || typeof result === 'number') {\r\n\t\t\t\treturn this.createError(ErrorCodes.KEYWORD_CUSTOM, {key: key, message: result}, '', '', null, data, schema).prefixWith(null, key);\r\n\t\t\t} else if (result && typeof result === 'object') {\r\n\t\t\t\tvar code = result.code;\r\n\t\t\t\tif (typeof code === 'string') {\r\n\t\t\t\t\tif (!ErrorCodes[code]) {\r\n\t\t\t\t\t\tthrow new Error('Undefined error code (use defineError): ' + code);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcode = ErrorCodes[code];\r\n\t\t\t\t} else if (typeof code !== 'number') {\r\n\t\t\t\t\tcode = ErrorCodes.KEYWORD_CUSTOM;\r\n\t\t\t\t}\r\n\t\t\t\tvar messageParams = (typeof result.message === 'object') ? result.message : {key: key, message: result.message || \"?\"};\r\n\t\t\t\tvar schemaPath = result.schemaPath || (\"/\" + key.replace(/~/g, '~0').replace(/\\//g, '~1'));\r\n\t\t\t\treturn this.createError(code, messageParams, result.dataPath || null, schemaPath, null, data, schema);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nfunction recursiveCompare(A, B) {\r\n\tif (A === B) {\r\n\t\treturn true;\r\n\t}\r\n\tif (A && B && typeof A === \"object\" && typeof B === \"object\") {\r\n\t\tif (Array.isArray(A) !== Array.isArray(B)) {\r\n\t\t\treturn false;\r\n\t\t} else if (Array.isArray(A)) {\r\n\t\t\tif (A.length !== B.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tfor (var i = 0; i < A.length; i++) {\r\n\t\t\t\tif (!recursiveCompare(A[i], B[i])) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar key;\r\n\t\t\tfor (key in A) {\r\n\t\t\t\tif (B[key] === undefined && A[key] !== undefined) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (key in B) {\r\n\t\t\t\tif (A[key] === undefined && B[key] !== undefined) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (key in A) {\r\n\t\t\t\tif (!recursiveCompare(A[key], B[key])) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nValidatorContext.prototype.validateBasic = function validateBasic(data, schema, dataPointerPath) {\r\n\tvar error;\r\n\tif (error = this.validateType(data, schema, dataPointerPath)) {\r\n\t\treturn error.prefixWith(null, \"type\");\r\n\t}\r\n\tif (error = this.validateEnum(data, schema, dataPointerPath)) {\r\n\t\treturn error.prefixWith(null, \"type\");\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.validateType = function validateType(data, schema) {\r\n\tif (schema.type === undefined) {\r\n\t\treturn null;\r\n\t}\r\n\tvar dataType = typeof data;\r\n\tif (data === null) {\r\n\t\tdataType = \"null\";\r\n\t} else if (Array.isArray(data)) {\r\n\t\tdataType = \"array\";\r\n\t}\r\n\tvar allowedTypes = schema.type;\r\n\tif (!Array.isArray(allowedTypes)) {\r\n\t\tallowedTypes = [allowedTypes];\r\n\t}\r\n\r\n\tfor (var i = 0; i < allowedTypes.length; i++) {\r\n\t\tvar type = allowedTypes[i];\r\n\t\tif (type === dataType || (type === \"integer\" && dataType === \"number\" && (data % 1 === 0))) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\treturn this.createError(ErrorCodes.INVALID_TYPE, {type: dataType, expected: allowedTypes.join(\"/\")}, '', '', null, data, schema);\r\n};\r\n\r\nValidatorContext.prototype.validateEnum = function validateEnum(data, schema) {\r\n\tif (schema[\"enum\"] === undefined) {\r\n\t\treturn null;\r\n\t}\r\n\tfor (var i = 0; i < schema[\"enum\"].length; i++) {\r\n\t\tvar enumVal = schema[\"enum\"][i];\r\n\t\tif (recursiveCompare(data, enumVal)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\treturn this.createError(ErrorCodes.ENUM_MISMATCH, {value: (typeof JSON !== 'undefined') ? JSON.stringify(data) : data}, '', '', null, data, schema);\r\n};\r\n\r\nValidatorContext.prototype.validateNumeric = function validateNumeric(data, schema, dataPointerPath) {\r\n\treturn this.validateMultipleOf(data, schema, dataPointerPath)\r\n\t\t|| this.validateMinMax(data, schema, dataPointerPath)\r\n\t\t|| this.validateNaN(data, schema, dataPointerPath)\r\n\t\t|| null;\r\n};\r\n\r\nvar CLOSE_ENOUGH_LOW = Math.pow(2, -51);\r\nvar CLOSE_ENOUGH_HIGH = 1 - CLOSE_ENOUGH_LOW;\r\nValidatorContext.prototype.validateMultipleOf = function validateMultipleOf(data, schema) {\r\n\tvar multipleOf = schema.multipleOf || schema.divisibleBy;\r\n\tif (multipleOf === undefined) {\r\n\t\treturn null;\r\n\t}\r\n\tif (typeof data === \"number\") {\r\n\t\tvar remainder = (data/multipleOf)%1;\r\n\t\tif (remainder >= CLOSE_ENOUGH_LOW && remainder < CLOSE_ENOUGH_HIGH) {\r\n\t\t\treturn this.createError(ErrorCodes.NUMBER_MULTIPLE_OF, {value: data, multipleOf: multipleOf}, '', '', null, data, schema);\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.validateMinMax = function validateMinMax(data, schema) {\r\n\tif (typeof data !== \"number\") {\r\n\t\treturn null;\r\n\t}\r\n\tif (schema.minimum !== undefined) {\r\n\t\tif (data < schema.minimum) {\r\n\t\t\treturn this.createError(ErrorCodes.NUMBER_MINIMUM, {value: data, minimum: schema.minimum}, '', '/minimum', null, data, schema);\r\n\t\t}\r\n\t\tif (schema.exclusiveMinimum && data === schema.minimum) {\r\n\t\t\treturn this.createError(ErrorCodes.NUMBER_MINIMUM_EXCLUSIVE, {value: data, minimum: schema.minimum}, '', '/exclusiveMinimum', null, data, schema);\r\n\t\t}\r\n\t}\r\n\tif (schema.maximum !== undefined) {\r\n\t\tif (data > schema.maximum) {\r\n\t\t\treturn this.createError(ErrorCodes.NUMBER_MAXIMUM, {value: data, maximum: schema.maximum}, '', '/maximum', null, data, schema);\r\n\t\t}\r\n\t\tif (schema.exclusiveMaximum && data === schema.maximum) {\r\n\t\t\treturn this.createError(ErrorCodes.NUMBER_MAXIMUM_EXCLUSIVE, {value: data, maximum: schema.maximum}, '', '/exclusiveMaximum', null, data, schema);\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.validateNaN = function validateNaN(data, schema) {\r\n\tif (typeof data !== \"number\") {\r\n\t\treturn null;\r\n\t}\r\n\tif (isNaN(data) === true || data === Infinity || data === -Infinity) {\r\n\t\treturn this.createError(ErrorCodes.NUMBER_NOT_A_NUMBER, {value: data}, '', '/type', null, data, schema);\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.validateString = function validateString(data, schema, dataPointerPath) {\r\n\treturn this.validateStringLength(data, schema, dataPointerPath)\r\n\t\t|| this.validateStringPattern(data, schema, dataPointerPath)\r\n\t\t|| null;\r\n};\r\n\r\nValidatorContext.prototype.validateStringLength = function validateStringLength(data, schema) {\r\n\tif (typeof data !== \"string\") {\r\n\t\treturn null;\r\n\t}\r\n\tif (schema.minLength !== undefined) {\r\n\t\tif (data.length < schema.minLength) {\r\n\t\t\treturn this.createError(ErrorCodes.STRING_LENGTH_SHORT, {length: data.length, minimum: schema.minLength}, '', '/minLength', null, data, schema);\r\n\t\t}\r\n\t}\r\n\tif (schema.maxLength !== undefined) {\r\n\t\tif (data.length > schema.maxLength) {\r\n\t\t\treturn this.createError(ErrorCodes.STRING_LENGTH_LONG, {length: data.length, maximum: schema.maxLength}, '', '/maxLength', null, data, schema);\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.validateStringPattern = function validateStringPattern(data, schema) {\r\n\tif (typeof data !== \"string\" || (typeof schema.pattern !== \"string\" && !(schema.pattern instanceof RegExp))) {\r\n\t\treturn null;\r\n\t}\r\n\tvar regexp;\r\n\tif (schema.pattern instanceof RegExp) {\r\n\t  regexp = schema.pattern;\r\n\t}\r\n\telse {\r\n\t  var body, flags = '';\r\n\t  // Check for regular expression literals\r\n\t  // @see http://www.ecma-international.org/ecma-262/5.1/#sec-7.8.5\r\n\t  var literal = schema.pattern.match(/^\\/(.+)\\/([img]*)$/);\r\n\t  if (literal) {\r\n\t    body = literal[1];\r\n\t    flags = literal[2];\r\n\t  }\r\n\t  else {\r\n\t    body = schema.pattern;\r\n\t  }\r\n\t  regexp = new RegExp(body, flags);\r\n\t}\r\n\tif (!regexp.test(data)) {\r\n\t\treturn this.createError(ErrorCodes.STRING_PATTERN, {pattern: schema.pattern}, '', '/pattern', null, data, schema);\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.validateArray = function validateArray(data, schema, dataPointerPath) {\r\n\tif (!Array.isArray(data)) {\r\n\t\treturn null;\r\n\t}\r\n\treturn this.validateArrayLength(data, schema, dataPointerPath)\r\n\t\t|| this.validateArrayUniqueItems(data, schema, dataPointerPath)\r\n\t\t|| this.validateArrayItems(data, schema, dataPointerPath)\r\n\t\t|| null;\r\n};\r\n\r\nValidatorContext.prototype.validateArrayLength = function validateArrayLength(data, schema) {\r\n\tvar error;\r\n\tif (schema.minItems !== undefined) {\r\n\t\tif (data.length < schema.minItems) {\r\n\t\t\terror = this.createError(ErrorCodes.ARRAY_LENGTH_SHORT, {length: data.length, minimum: schema.minItems}, '', '/minItems', null, data, schema);\r\n\t\t\tif (this.handleError(error)) {\r\n\t\t\t\treturn error;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (schema.maxItems !== undefined) {\r\n\t\tif (data.length > schema.maxItems) {\r\n\t\t\terror = this.createError(ErrorCodes.ARRAY_LENGTH_LONG, {length: data.length, maximum: schema.maxItems}, '', '/maxItems', null, data, schema);\r\n\t\t\tif (this.handleError(error)) {\r\n\t\t\t\treturn error;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.validateArrayUniqueItems = function validateArrayUniqueItems(data, schema) {\r\n\tif (schema.uniqueItems) {\r\n\t\tfor (var i = 0; i < data.length; i++) {\r\n\t\t\tfor (var j = i + 1; j < data.length; j++) {\r\n\t\t\t\tif (recursiveCompare(data[i], data[j])) {\r\n\t\t\t\t\tvar error = this.createError(ErrorCodes.ARRAY_UNIQUE, {match1: i, match2: j}, '', '/uniqueItems', null, data, schema);\r\n\t\t\t\t\tif (this.handleError(error)) {\r\n\t\t\t\t\t\treturn error;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.validateArrayItems = function validateArrayItems(data, schema, dataPointerPath) {\r\n\tif (schema.items === undefined) {\r\n\t\treturn null;\r\n\t}\r\n\tvar error, i;\r\n\tif (Array.isArray(schema.items)) {\r\n\t\tfor (i = 0; i < data.length; i++) {\r\n\t\t\tif (i < schema.items.length) {\r\n\t\t\t\tif (error = this.validateAll(data[i], schema.items[i], [i], [\"items\", i], dataPointerPath + \"/\" + i)) {\r\n\t\t\t\t\treturn error;\r\n\t\t\t\t}\r\n\t\t\t} else if (schema.additionalItems !== undefined) {\r\n\t\t\t\tif (typeof schema.additionalItems === \"boolean\") {\r\n\t\t\t\t\tif (!schema.additionalItems) {\r\n\t\t\t\t\t\terror = (this.createError(ErrorCodes.ARRAY_ADDITIONAL_ITEMS, {}, '/' + i, '/additionalItems', null, data, schema));\r\n\t\t\t\t\t\tif (this.handleError(error)) {\r\n\t\t\t\t\t\t\treturn error;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (error = this.validateAll(data[i], schema.additionalItems, [i], [\"additionalItems\"], dataPointerPath + \"/\" + i)) {\r\n\t\t\t\t\treturn error;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\tfor (i = 0; i < data.length; i++) {\r\n\t\t\tif (error = this.validateAll(data[i], schema.items, [i], [\"items\"], dataPointerPath + \"/\" + i)) {\r\n\t\t\t\treturn error;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.validateObject = function validateObject(data, schema, dataPointerPath) {\r\n\tif (typeof data !== \"object\" || data === null || Array.isArray(data)) {\r\n\t\treturn null;\r\n\t}\r\n\treturn this.validateObjectMinMaxProperties(data, schema, dataPointerPath)\r\n\t\t|| this.validateObjectRequiredProperties(data, schema, dataPointerPath)\r\n\t\t|| this.validateObjectProperties(data, schema, dataPointerPath)\r\n\t\t|| this.validateObjectDependencies(data, schema, dataPointerPath)\r\n\t\t|| null;\r\n};\r\n\r\nValidatorContext.prototype.validateObjectMinMaxProperties = function validateObjectMinMaxProperties(data, schema) {\r\n\tvar keys = Object.keys(data);\r\n\tvar error;\r\n\tif (schema.minProperties !== undefined) {\r\n\t\tif (keys.length < schema.minProperties) {\r\n\t\t\terror = this.createError(ErrorCodes.OBJECT_PROPERTIES_MINIMUM, {propertyCount: keys.length, minimum: schema.minProperties}, '', '/minProperties', null, data, schema);\r\n\t\t\tif (this.handleError(error)) {\r\n\t\t\t\treturn error;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (schema.maxProperties !== undefined) {\r\n\t\tif (keys.length > schema.maxProperties) {\r\n\t\t\terror = this.createError(ErrorCodes.OBJECT_PROPERTIES_MAXIMUM, {propertyCount: keys.length, maximum: schema.maxProperties}, '', '/maxProperties', null, data, schema);\r\n\t\t\tif (this.handleError(error)) {\r\n\t\t\t\treturn error;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.validateObjectRequiredProperties = function validateObjectRequiredProperties(data, schema) {\r\n\tif (schema.required !== undefined) {\r\n\t\tfor (var i = 0; i < schema.required.length; i++) {\r\n\t\t\tvar key = schema.required[i];\r\n\t\t\tif (data[key] === undefined) {\r\n\t\t\t\tvar error = this.createError(ErrorCodes.OBJECT_REQUIRED, {key: key}, '', '/required/' + i, null, data, schema);\r\n\t\t\t\tif (this.handleError(error)) {\r\n\t\t\t\t\treturn error;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.validateObjectProperties = function validateObjectProperties(data, schema, dataPointerPath) {\r\n\tvar error;\r\n\tfor (var key in data) {\r\n\t\tvar keyPointerPath = dataPointerPath + \"/\" + key.replace(/~/g, '~0').replace(/\\//g, '~1');\r\n\t\tvar foundMatch = false;\r\n\t\tif (schema.properties !== undefined && schema.properties[key] !== undefined) {\r\n\t\t\tfoundMatch = true;\r\n\t\t\tif (error = this.validateAll(data[key], schema.properties[key], [key], [\"properties\", key], keyPointerPath)) {\r\n\t\t\t\treturn error;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (schema.patternProperties !== undefined) {\r\n\t\t\tfor (var patternKey in schema.patternProperties) {\r\n\t\t\t\tvar regexp = new RegExp(patternKey);\r\n\t\t\t\tif (regexp.test(key)) {\r\n\t\t\t\t\tfoundMatch = true;\r\n\t\t\t\t\tif (error = this.validateAll(data[key], schema.patternProperties[patternKey], [key], [\"patternProperties\", patternKey], keyPointerPath)) {\r\n\t\t\t\t\t\treturn error;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!foundMatch) {\r\n\t\t\tif (schema.additionalProperties !== undefined) {\r\n\t\t\t\tif (this.trackUnknownProperties) {\r\n\t\t\t\t\tthis.knownPropertyPaths[keyPointerPath] = true;\r\n\t\t\t\t\tdelete this.unknownPropertyPaths[keyPointerPath];\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof schema.additionalProperties === \"boolean\") {\r\n\t\t\t\t\tif (!schema.additionalProperties) {\r\n\t\t\t\t\t\terror = this.createError(ErrorCodes.OBJECT_ADDITIONAL_PROPERTIES, {key: key}, '', '/additionalProperties', null, data, schema).prefixWith(key, null);\r\n\t\t\t\t\t\tif (this.handleError(error)) {\r\n\t\t\t\t\t\t\treturn error;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (error = this.validateAll(data[key], schema.additionalProperties, [key], [\"additionalProperties\"], keyPointerPath)) {\r\n\t\t\t\t\t\treturn error;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (this.trackUnknownProperties && !this.knownPropertyPaths[keyPointerPath]) {\r\n\t\t\t\tthis.unknownPropertyPaths[keyPointerPath] = true;\r\n\t\t\t}\r\n\t\t} else if (this.trackUnknownProperties) {\r\n\t\t\tthis.knownPropertyPaths[keyPointerPath] = true;\r\n\t\t\tdelete this.unknownPropertyPaths[keyPointerPath];\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.validateObjectDependencies = function validateObjectDependencies(data, schema, dataPointerPath) {\r\n\tvar error;\r\n\tif (schema.dependencies !== undefined) {\r\n\t\tfor (var depKey in schema.dependencies) {\r\n\t\t\tif (data[depKey] !== undefined) {\r\n\t\t\t\tvar dep = schema.dependencies[depKey];\r\n\t\t\t\tif (typeof dep === \"string\") {\r\n\t\t\t\t\tif (data[dep] === undefined) {\r\n\t\t\t\t\t\terror = this.createError(ErrorCodes.OBJECT_DEPENDENCY_KEY, {key: depKey, missing: dep}, '', '', null, data, schema).prefixWith(null, depKey).prefixWith(null, \"dependencies\");\r\n\t\t\t\t\t\tif (this.handleError(error)) {\r\n\t\t\t\t\t\t\treturn error;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (Array.isArray(dep)) {\r\n\t\t\t\t\tfor (var i = 0; i < dep.length; i++) {\r\n\t\t\t\t\t\tvar requiredKey = dep[i];\r\n\t\t\t\t\t\tif (data[requiredKey] === undefined) {\r\n\t\t\t\t\t\t\terror = this.createError(ErrorCodes.OBJECT_DEPENDENCY_KEY, {key: depKey, missing: requiredKey}, '', '/' + i, null, data, schema).prefixWith(null, depKey).prefixWith(null, \"dependencies\");\r\n\t\t\t\t\t\t\tif (this.handleError(error)) {\r\n\t\t\t\t\t\t\t\treturn error;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (error = this.validateAll(data, dep, [], [\"dependencies\", depKey], dataPointerPath)) {\r\n\t\t\t\t\t\treturn error;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.validateCombinations = function validateCombinations(data, schema, dataPointerPath) {\r\n\treturn this.validateAllOf(data, schema, dataPointerPath)\r\n\t\t|| this.validateAnyOf(data, schema, dataPointerPath)\r\n\t\t|| this.validateOneOf(data, schema, dataPointerPath)\r\n\t\t|| this.validateNot(data, schema, dataPointerPath)\r\n\t\t|| null;\r\n};\r\n\r\nValidatorContext.prototype.validateAllOf = function validateAllOf(data, schema, dataPointerPath) {\r\n\tif (schema.allOf === undefined) {\r\n\t\treturn null;\r\n\t}\r\n\tvar error;\r\n\tfor (var i = 0; i < schema.allOf.length; i++) {\r\n\t\tvar subSchema = schema.allOf[i];\r\n\t\tif (error = this.validateAll(data, subSchema, [], [\"allOf\", i], dataPointerPath)) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.validateAnyOf = function validateAnyOf(data, schema, dataPointerPath) {\r\n\tif (schema.anyOf === undefined) {\r\n\t\treturn null;\r\n\t}\r\n\tvar errors = [];\r\n\tvar startErrorCount = this.errors.length;\r\n\tvar oldUnknownPropertyPaths, oldKnownPropertyPaths;\r\n\tif (this.trackUnknownProperties) {\r\n\t\toldUnknownPropertyPaths = this.unknownPropertyPaths;\r\n\t\toldKnownPropertyPaths = this.knownPropertyPaths;\r\n\t}\r\n\tvar errorAtEnd = true;\r\n\tfor (var i = 0; i < schema.anyOf.length; i++) {\r\n\t\tif (this.trackUnknownProperties) {\r\n\t\t\tthis.unknownPropertyPaths = {};\r\n\t\t\tthis.knownPropertyPaths = {};\r\n\t\t}\r\n\t\tvar subSchema = schema.anyOf[i];\r\n\r\n\t\tvar errorCount = this.errors.length;\r\n\t\tvar error = this.validateAll(data, subSchema, [], [\"anyOf\", i], dataPointerPath);\r\n\r\n\t\tif (error === null && errorCount === this.errors.length) {\r\n\t\t\tthis.errors = this.errors.slice(0, startErrorCount);\r\n\r\n\t\t\tif (this.trackUnknownProperties) {\r\n\t\t\t\tfor (var knownKey in this.knownPropertyPaths) {\r\n\t\t\t\t\toldKnownPropertyPaths[knownKey] = true;\r\n\t\t\t\t\tdelete oldUnknownPropertyPaths[knownKey];\r\n\t\t\t\t}\r\n\t\t\t\tfor (var unknownKey in this.unknownPropertyPaths) {\r\n\t\t\t\t\tif (!oldKnownPropertyPaths[unknownKey]) {\r\n\t\t\t\t\t\toldUnknownPropertyPaths[unknownKey] = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// We need to continue looping so we catch all the property definitions, but we don't want to return an error\r\n\t\t\t\terrorAtEnd = false;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (error) {\r\n\t\t\terrors.push(error.prefixWith(null, \"\" + i).prefixWith(null, \"anyOf\"));\r\n\t\t}\r\n\t}\r\n\tif (this.trackUnknownProperties) {\r\n\t\tthis.unknownPropertyPaths = oldUnknownPropertyPaths;\r\n\t\tthis.knownPropertyPaths = oldKnownPropertyPaths;\r\n\t}\r\n\tif (errorAtEnd) {\r\n\t\terrors = errors.concat(this.errors.slice(startErrorCount));\r\n\t\tthis.errors = this.errors.slice(0, startErrorCount);\r\n\t\treturn this.createError(ErrorCodes.ANY_OF_MISSING, {}, \"\", \"/anyOf\", errors, data, schema);\r\n\t}\r\n};\r\n\r\nValidatorContext.prototype.validateOneOf = function validateOneOf(data, schema, dataPointerPath) {\r\n\tif (schema.oneOf === undefined) {\r\n\t\treturn null;\r\n\t}\r\n\tvar validIndex = null;\r\n\tvar errors = [];\r\n\tvar startErrorCount = this.errors.length;\r\n\tvar oldUnknownPropertyPaths, oldKnownPropertyPaths;\r\n\tif (this.trackUnknownProperties) {\r\n\t\toldUnknownPropertyPaths = this.unknownPropertyPaths;\r\n\t\toldKnownPropertyPaths = this.knownPropertyPaths;\r\n\t}\r\n\tfor (var i = 0; i < schema.oneOf.length; i++) {\r\n\t\tif (this.trackUnknownProperties) {\r\n\t\t\tthis.unknownPropertyPaths = {};\r\n\t\t\tthis.knownPropertyPaths = {};\r\n\t\t}\r\n\t\tvar subSchema = schema.oneOf[i];\r\n\r\n\t\tvar errorCount = this.errors.length;\r\n\t\tvar error = this.validateAll(data, subSchema, [], [\"oneOf\", i], dataPointerPath);\r\n\r\n\t\tif (error === null && errorCount === this.errors.length) {\r\n\t\t\tif (validIndex === null) {\r\n\t\t\t\tvalidIndex = i;\r\n\t\t\t} else {\r\n\t\t\t\tthis.errors = this.errors.slice(0, startErrorCount);\r\n\t\t\t\treturn this.createError(ErrorCodes.ONE_OF_MULTIPLE, {index1: validIndex, index2: i}, \"\", \"/oneOf\", null, data, schema);\r\n\t\t\t}\r\n\t\t\tif (this.trackUnknownProperties) {\r\n\t\t\t\tfor (var knownKey in this.knownPropertyPaths) {\r\n\t\t\t\t\toldKnownPropertyPaths[knownKey] = true;\r\n\t\t\t\t\tdelete oldUnknownPropertyPaths[knownKey];\r\n\t\t\t\t}\r\n\t\t\t\tfor (var unknownKey in this.unknownPropertyPaths) {\r\n\t\t\t\t\tif (!oldKnownPropertyPaths[unknownKey]) {\r\n\t\t\t\t\t\toldUnknownPropertyPaths[unknownKey] = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (error) {\r\n\t\t\terrors.push(error);\r\n\t\t}\r\n\t}\r\n\tif (this.trackUnknownProperties) {\r\n\t\tthis.unknownPropertyPaths = oldUnknownPropertyPaths;\r\n\t\tthis.knownPropertyPaths = oldKnownPropertyPaths;\r\n\t}\r\n\tif (validIndex === null) {\r\n\t\terrors = errors.concat(this.errors.slice(startErrorCount));\r\n\t\tthis.errors = this.errors.slice(0, startErrorCount);\r\n\t\treturn this.createError(ErrorCodes.ONE_OF_MISSING, {}, \"\", \"/oneOf\", errors, data, schema);\r\n\t} else {\r\n\t\tthis.errors = this.errors.slice(0, startErrorCount);\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.validateNot = function validateNot(data, schema, dataPointerPath) {\r\n\tif (schema.not === undefined) {\r\n\t\treturn null;\r\n\t}\r\n\tvar oldErrorCount = this.errors.length;\r\n\tvar oldUnknownPropertyPaths, oldKnownPropertyPaths;\r\n\tif (this.trackUnknownProperties) {\r\n\t\toldUnknownPropertyPaths = this.unknownPropertyPaths;\r\n\t\toldKnownPropertyPaths = this.knownPropertyPaths;\r\n\t\tthis.unknownPropertyPaths = {};\r\n\t\tthis.knownPropertyPaths = {};\r\n\t}\r\n\tvar error = this.validateAll(data, schema.not, null, null, dataPointerPath);\r\n\tvar notErrors = this.errors.slice(oldErrorCount);\r\n\tthis.errors = this.errors.slice(0, oldErrorCount);\r\n\tif (this.trackUnknownProperties) {\r\n\t\tthis.unknownPropertyPaths = oldUnknownPropertyPaths;\r\n\t\tthis.knownPropertyPaths = oldKnownPropertyPaths;\r\n\t}\r\n\tif (error === null && notErrors.length === 0) {\r\n\t\treturn this.createError(ErrorCodes.NOT_PASSED, {}, \"\", \"/not\", null, data, schema);\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nValidatorContext.prototype.validateHypermedia = function validateCombinations(data, schema, dataPointerPath) {\r\n\tif (!schema.links) {\r\n\t\treturn null;\r\n\t}\r\n\tvar error;\r\n\tfor (var i = 0; i < schema.links.length; i++) {\r\n\t\tvar ldo = schema.links[i];\r\n\t\tif (ldo.rel === \"describedby\") {\r\n\t\t\tvar template = new UriTemplate(ldo.href);\r\n\t\t\tvar allPresent = true;\r\n\t\t\tfor (var j = 0; j < template.varNames.length; j++) {\r\n\t\t\t\tif (!(template.varNames[j] in data)) {\r\n\t\t\t\t\tallPresent = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (allPresent) {\r\n\t\t\t\tvar schemaUrl = template.fillFromObject(data);\r\n\t\t\t\tvar subSchema = {\"$ref\": schemaUrl};\r\n\t\t\t\tif (error = this.validateAll(data, subSchema, [], [\"links\", i], dataPointerPath)) {\r\n\t\t\t\t\treturn error;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// parseURI() and resolveUrl() are from https://gist.github.com/1088850\r\n//   -  released as public domain by author (\"Yaffle\") - see comments on gist\r\n\r\nfunction parseURI(url) {\r\n\tvar m = String(url).replace(/^\\s+|\\s+$/g, '').match(/^([^:\\/?#]+:)?(\\/\\/(?:[^:@]*(?::[^:@]*)?@)?(([^:\\/?#]*)(?::(\\d*))?))?([^?#]*)(\\?[^#]*)?(#[\\s\\S]*)?/);\r\n\t// authority = '//' + user + ':' + pass '@' + hostname + ':' port\r\n\treturn (m ? {\r\n\t\thref     : m[0] || '',\r\n\t\tprotocol : m[1] || '',\r\n\t\tauthority: m[2] || '',\r\n\t\thost     : m[3] || '',\r\n\t\thostname : m[4] || '',\r\n\t\tport     : m[5] || '',\r\n\t\tpathname : m[6] || '',\r\n\t\tsearch   : m[7] || '',\r\n\t\thash     : m[8] || ''\r\n\t} : null);\r\n}\r\n\r\nfunction resolveUrl(base, href) {// RFC 3986\r\n\r\n\tfunction removeDotSegments(input) {\r\n\t\tvar output = [];\r\n\t\tinput.replace(/^(\\.\\.?(\\/|$))+/, '')\r\n\t\t\t.replace(/\\/(\\.(\\/|$))+/g, '/')\r\n\t\t\t.replace(/\\/\\.\\.$/, '/../')\r\n\t\t\t.replace(/\\/?[^\\/]*/g, function (p) {\r\n\t\t\t\tif (p === '/..') {\r\n\t\t\t\t\toutput.pop();\r\n\t\t\t\t} else {\r\n\t\t\t\t\toutput.push(p);\r\n\t\t\t\t}\r\n\t\t});\r\n\t\treturn output.join('').replace(/^\\//, input.charAt(0) === '/' ? '/' : '');\r\n\t}\r\n\r\n\thref = parseURI(href || '');\r\n\tbase = parseURI(base || '');\r\n\r\n\treturn !href || !base ? null : (href.protocol || base.protocol) +\r\n\t\t(href.protocol || href.authority ? href.authority : base.authority) +\r\n\t\tremoveDotSegments(href.protocol || href.authority || href.pathname.charAt(0) === '/' ? href.pathname : (href.pathname ? ((base.authority && !base.pathname ? '/' : '') + base.pathname.slice(0, base.pathname.lastIndexOf('/') + 1) + href.pathname) : base.pathname)) +\r\n\t\t(href.protocol || href.authority || href.pathname ? href.search : (href.search || base.search)) +\r\n\t\thref.hash;\r\n}\r\n\r\nfunction getDocumentUri(uri) {\r\n\treturn uri.split('#')[0];\r\n}\r\nfunction normSchema(schema, baseUri) {\r\n\tif (schema && typeof schema === \"object\") {\r\n\t\tif (baseUri === undefined) {\r\n\t\t\tbaseUri = schema.id;\r\n\t\t} else if (typeof schema.id === \"string\") {\r\n\t\t\tbaseUri = resolveUrl(baseUri, schema.id);\r\n\t\t\tschema.id = baseUri;\r\n\t\t}\r\n\t\tif (Array.isArray(schema)) {\r\n\t\t\tfor (var i = 0; i < schema.length; i++) {\r\n\t\t\t\tnormSchema(schema[i], baseUri);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (typeof schema['$ref'] === \"string\") {\r\n\t\t\t\tschema['$ref'] = resolveUrl(baseUri, schema['$ref']);\r\n\t\t\t}\r\n\t\t\tfor (var key in schema) {\r\n\t\t\t\tif (key !== \"enum\") {\r\n\t\t\t\t\tnormSchema(schema[key], baseUri);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction defaultErrorReporter(language) {\r\n\tlanguage = language || 'en';\r\n\r\n\tvar errorMessages = languages[language];\r\n\r\n\treturn function (error) {\r\n\t\tvar messageTemplate = errorMessages[error.code] || ErrorMessagesDefault[error.code];\r\n\t\tif (typeof messageTemplate !== 'string') {\r\n\t\t\treturn \"Unknown error code \" + error.code + \": \" + JSON.stringify(error.messageParams);\r\n\t\t}\r\n\t\tvar messageParams = error.params;\r\n\t\t// Adapted from Crockford's supplant()\r\n\t\treturn messageTemplate.replace(/\\{([^{}]*)\\}/g, function (whole, varName) {\r\n\t\t\tvar subValue = messageParams[varName];\r\n\t\t\treturn typeof subValue === 'string' || typeof subValue === 'number' ? subValue : whole;\r\n\t\t});\r\n\t};\r\n}\r\n\r\nvar ErrorCodes = {\r\n\tINVALID_TYPE: 0,\r\n\tENUM_MISMATCH: 1,\r\n\tANY_OF_MISSING: 10,\r\n\tONE_OF_MISSING: 11,\r\n\tONE_OF_MULTIPLE: 12,\r\n\tNOT_PASSED: 13,\r\n\t// Numeric errors\r\n\tNUMBER_MULTIPLE_OF: 100,\r\n\tNUMBER_MINIMUM: 101,\r\n\tNUMBER_MINIMUM_EXCLUSIVE: 102,\r\n\tNUMBER_MAXIMUM: 103,\r\n\tNUMBER_MAXIMUM_EXCLUSIVE: 104,\r\n\tNUMBER_NOT_A_NUMBER: 105,\r\n\t// String errors\r\n\tSTRING_LENGTH_SHORT: 200,\r\n\tSTRING_LENGTH_LONG: 201,\r\n\tSTRING_PATTERN: 202,\r\n\t// Object errors\r\n\tOBJECT_PROPERTIES_MINIMUM: 300,\r\n\tOBJECT_PROPERTIES_MAXIMUM: 301,\r\n\tOBJECT_REQUIRED: 302,\r\n\tOBJECT_ADDITIONAL_PROPERTIES: 303,\r\n\tOBJECT_DEPENDENCY_KEY: 304,\r\n\t// Array errors\r\n\tARRAY_LENGTH_SHORT: 400,\r\n\tARRAY_LENGTH_LONG: 401,\r\n\tARRAY_UNIQUE: 402,\r\n\tARRAY_ADDITIONAL_ITEMS: 403,\r\n\t// Custom/user-defined errors\r\n\tFORMAT_CUSTOM: 500,\r\n\tKEYWORD_CUSTOM: 501,\r\n\t// Schema structure\r\n\tCIRCULAR_REFERENCE: 600,\r\n\t// Non-standard validation options\r\n\tUNKNOWN_PROPERTY: 1000\r\n};\r\nvar ErrorCodeLookup = {};\r\nfor (var key in ErrorCodes) {\r\n\tErrorCodeLookup[ErrorCodes[key]] = key;\r\n}\r\nvar ErrorMessagesDefault = {\r\n\tINVALID_TYPE: \"Invalid type: {type} (expected {expected})\",\r\n\tENUM_MISMATCH: \"No enum match for: {value}\",\r\n\tANY_OF_MISSING: \"Data does not match any schemas from \\\"anyOf\\\"\",\r\n\tONE_OF_MISSING: \"Data does not match any schemas from \\\"oneOf\\\"\",\r\n\tONE_OF_MULTIPLE: \"Data is valid against more than one schema from \\\"oneOf\\\": indices {index1} and {index2}\",\r\n\tNOT_PASSED: \"Data matches schema from \\\"not\\\"\",\r\n\t// Numeric errors\r\n\tNUMBER_MULTIPLE_OF: \"Value {value} is not a multiple of {multipleOf}\",\r\n\tNUMBER_MINIMUM: \"Value {value} is less than minimum {minimum}\",\r\n\tNUMBER_MINIMUM_EXCLUSIVE: \"Value {value} is equal to exclusive minimum {minimum}\",\r\n\tNUMBER_MAXIMUM: \"Value {value} is greater than maximum {maximum}\",\r\n\tNUMBER_MAXIMUM_EXCLUSIVE: \"Value {value} is equal to exclusive maximum {maximum}\",\r\n\tNUMBER_NOT_A_NUMBER: \"Value {value} is not a valid number\",\r\n\t// String errors\r\n\tSTRING_LENGTH_SHORT: \"String is too short ({length} chars), minimum {minimum}\",\r\n\tSTRING_LENGTH_LONG: \"String is too long ({length} chars), maximum {maximum}\",\r\n\tSTRING_PATTERN: \"String does not match pattern: {pattern}\",\r\n\t// Object errors\r\n\tOBJECT_PROPERTIES_MINIMUM: \"Too few properties defined ({propertyCount}), minimum {minimum}\",\r\n\tOBJECT_PROPERTIES_MAXIMUM: \"Too many properties defined ({propertyCount}), maximum {maximum}\",\r\n\tOBJECT_REQUIRED: \"Missing required property: {key}\",\r\n\tOBJECT_ADDITIONAL_PROPERTIES: \"Additional properties not allowed\",\r\n\tOBJECT_DEPENDENCY_KEY: \"Dependency failed - key must exist: {missing} (due to key: {key})\",\r\n\t// Array errors\r\n\tARRAY_LENGTH_SHORT: \"Array is too short ({length}), minimum {minimum}\",\r\n\tARRAY_LENGTH_LONG: \"Array is too long ({length}), maximum {maximum}\",\r\n\tARRAY_UNIQUE: \"Array items are not unique (indices {match1} and {match2})\",\r\n\tARRAY_ADDITIONAL_ITEMS: \"Additional items not allowed\",\r\n\t// Format errors\r\n\tFORMAT_CUSTOM: \"Format validation failed ({message})\",\r\n\tKEYWORD_CUSTOM: \"Keyword failed: {key} ({message})\",\r\n\t// Schema structure\r\n\tCIRCULAR_REFERENCE: \"Circular $refs: {urls}\",\r\n\t// Non-standard validation options\r\n\tUNKNOWN_PROPERTY: \"Unknown property (not in schema)\"\r\n};\r\n\r\nfunction ValidationError(code, params, dataPath, schemaPath, subErrors) {\r\n\tError.call(this);\r\n\tif (code === undefined) {\r\n\t\tthrow new Error (\"No error code supplied: \" + schemaPath);\r\n\t}\r\n\tthis.message = '';\r\n\tthis.params = params;\r\n\tthis.code = code;\r\n\tthis.dataPath = dataPath || \"\";\r\n\tthis.schemaPath = schemaPath || \"\";\r\n\tthis.subErrors = subErrors || null;\r\n\r\n\tvar err = new Error(this.message);\r\n\tthis.stack = err.stack || err.stacktrace;\r\n\tif (!this.stack) {\r\n\t\ttry {\r\n\t\t\tthrow err;\r\n\t\t}\r\n\t\tcatch(err) {\r\n\t\t\tthis.stack = err.stack || err.stacktrace;\r\n\t\t}\r\n\t}\r\n}\r\nValidationError.prototype = Object.create(Error.prototype);\r\nValidationError.prototype.constructor = ValidationError;\r\nValidationError.prototype.name = 'ValidationError';\r\n\r\nValidationError.prototype.prefixWith = function (dataPrefix, schemaPrefix) {\r\n\tif (dataPrefix !== null) {\r\n\t\tdataPrefix = dataPrefix.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\r\n\t\tthis.dataPath = \"/\" + dataPrefix + this.dataPath;\r\n\t}\r\n\tif (schemaPrefix !== null) {\r\n\t\tschemaPrefix = schemaPrefix.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\r\n\t\tthis.schemaPath = \"/\" + schemaPrefix + this.schemaPath;\r\n\t}\r\n\tif (this.subErrors !== null) {\r\n\t\tfor (var i = 0; i < this.subErrors.length; i++) {\r\n\t\t\tthis.subErrors[i].prefixWith(dataPrefix, schemaPrefix);\r\n\t\t}\r\n\t}\r\n\treturn this;\r\n};\r\n\r\nfunction isTrustedUrl(baseUrl, testUrl) {\r\n\tif(testUrl.substring(0, baseUrl.length) === baseUrl){\r\n\t\tvar remainder = testUrl.substring(baseUrl.length);\r\n\t\tif ((testUrl.length > 0 && testUrl.charAt(baseUrl.length - 1) === \"/\")\r\n\t\t\t|| remainder.charAt(0) === \"#\"\r\n\t\t\t|| remainder.charAt(0) === \"?\") {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nvar languages = {};\r\nfunction createApi(language) {\r\n\tvar globalContext = new ValidatorContext();\r\n\tvar currentLanguage;\r\n\tvar customErrorReporter;\r\n\tvar api = {\r\n\t\tsetErrorReporter: function (reporter) {\r\n\t\t\tif (typeof reporter === 'string') {\r\n\t\t\t\treturn this.language(reporter);\r\n\t\t\t}\r\n\t\t\tcustomErrorReporter = reporter;\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\taddFormat: function () {\r\n\t\t\tglobalContext.addFormat.apply(globalContext, arguments);\r\n\t\t},\r\n\t\tlanguage: function (code) {\r\n\t\t\tif (!code) {\r\n\t\t\t\treturn currentLanguage;\r\n\t\t\t}\r\n\t\t\tif (!languages[code]) {\r\n\t\t\t\tcode = code.split('-')[0]; // fall back to base language\r\n\t\t\t}\r\n\t\t\tif (languages[code]) {\r\n\t\t\t\tcurrentLanguage = code;\r\n\t\t\t\treturn code; // so you can tell if fall-back has happened\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\taddLanguage: function (code, messageMap) {\r\n\t\t\tvar key;\r\n\t\t\tfor (key in ErrorCodes) {\r\n\t\t\t\tif (messageMap[key] && !messageMap[ErrorCodes[key]]) {\r\n\t\t\t\t\tmessageMap[ErrorCodes[key]] = messageMap[key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar rootCode = code.split('-')[0];\r\n\t\t\tif (!languages[rootCode]) { // use for base language if not yet defined\r\n\t\t\t\tlanguages[code] = messageMap;\r\n\t\t\t\tlanguages[rootCode] = messageMap;\r\n\t\t\t} else {\r\n\t\t\t\tlanguages[code] = Object.create(languages[rootCode]);\r\n\t\t\t\tfor (key in messageMap) {\r\n\t\t\t\t\tif (typeof languages[rootCode][key] === 'undefined') {\r\n\t\t\t\t\t\tlanguages[rootCode][key] = messageMap[key];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlanguages[code][key] = messageMap[key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tfreshApi: function (language) {\r\n\t\t\tvar result = createApi();\r\n\t\t\tif (language) {\r\n\t\t\t\tresult.language(language);\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t},\r\n\t\tvalidate: function (data, schema, checkRecursive, banUnknownProperties) {\r\n\t\t\tvar def = defaultErrorReporter(currentLanguage);\r\n\t\t\tvar errorReporter = customErrorReporter ? function (error, data, schema) {\r\n\t\t\t\treturn customErrorReporter(error, data, schema) || def(error, data, schema);\r\n\t\t\t} : def;\r\n\t\t\tvar context = new ValidatorContext(globalContext, false, errorReporter, checkRecursive, banUnknownProperties);\r\n\t\t\tif (typeof schema === \"string\") {\r\n\t\t\t\tschema = {\"$ref\": schema};\r\n\t\t\t}\r\n\t\t\tcontext.addSchema(\"\", schema);\r\n\t\t\tvar error = context.validateAll(data, schema, null, null, \"\");\r\n\t\t\tif (!error && banUnknownProperties) {\r\n\t\t\t\terror = context.banUnknownProperties(data, schema);\r\n\t\t\t}\r\n\t\t\tthis.error = error;\r\n\t\t\tthis.missing = context.missing;\r\n\t\t\tthis.valid = (error === null);\r\n\t\t\treturn this.valid;\r\n\t\t},\r\n\t\tvalidateResult: function () {\r\n\t\t\tvar result = {toString: function () {\r\n\t\t\t\treturn this.valid ? 'valid' : this.error.message;\r\n\t\t\t}};\r\n\t\t\tthis.validate.apply(result, arguments);\r\n\t\t\treturn result;\r\n\t\t},\r\n\t\tvalidateMultiple: function (data, schema, checkRecursive, banUnknownProperties) {\r\n\t\t\tvar def = defaultErrorReporter(currentLanguage);\r\n\t\t\tvar errorReporter = customErrorReporter ? function (error, data, schema) {\r\n\t\t\t\treturn customErrorReporter(error, data, schema) || def(error, data, schema);\r\n\t\t\t} : def;\r\n\t\t\tvar context = new ValidatorContext(globalContext, true, errorReporter, checkRecursive, banUnknownProperties);\r\n\t\t\tif (typeof schema === \"string\") {\r\n\t\t\t\tschema = {\"$ref\": schema};\r\n\t\t\t}\r\n\t\t\tcontext.addSchema(\"\", schema);\r\n\t\t\tcontext.validateAll(data, schema, null, null, \"\");\r\n\t\t\tif (banUnknownProperties) {\r\n\t\t\t\tcontext.banUnknownProperties(data, schema);\r\n\t\t\t}\r\n\t\t\tvar result = {toString: function () {\r\n\t\t\t\treturn this.valid ? 'valid' : this.error.message;\r\n\t\t\t}};\r\n\t\t\tresult.errors = context.errors;\r\n\t\t\tresult.missing = context.missing;\r\n\t\t\tresult.valid = (result.errors.length === 0);\r\n\t\t\treturn result;\r\n\t\t},\r\n\t\taddSchema: function () {\r\n\t\t\treturn globalContext.addSchema.apply(globalContext, arguments);\r\n\t\t},\r\n\t\tgetSchema: function () {\r\n\t\t\treturn globalContext.getSchema.apply(globalContext, arguments);\r\n\t\t},\r\n\t\tgetSchemaMap: function () {\r\n\t\t\treturn globalContext.getSchemaMap.apply(globalContext, arguments);\r\n\t\t},\r\n\t\tgetSchemaUris: function () {\r\n\t\t\treturn globalContext.getSchemaUris.apply(globalContext, arguments);\r\n\t\t},\r\n\t\tgetMissingUris: function () {\r\n\t\t\treturn globalContext.getMissingUris.apply(globalContext, arguments);\r\n\t\t},\r\n\t\tdropSchemas: function () {\r\n\t\t\tglobalContext.dropSchemas.apply(globalContext, arguments);\r\n\t\t},\r\n\t\tdefineKeyword: function () {\r\n\t\t\tglobalContext.defineKeyword.apply(globalContext, arguments);\r\n\t\t},\r\n\t\tdefineError: function (codeName, codeNumber, defaultMessage) {\r\n\t\t\tif (typeof codeName !== 'string' || !/^[A-Z]+(_[A-Z]+)*$/.test(codeName)) {\r\n\t\t\t\tthrow new Error('Code name must be a string in UPPER_CASE_WITH_UNDERSCORES');\r\n\t\t\t}\r\n\t\t\tif (typeof codeNumber !== 'number' || codeNumber%1 !== 0 || codeNumber < 10000) {\r\n\t\t\t\tthrow new Error('Code number must be an integer > 10000');\r\n\t\t\t}\r\n\t\t\tif (typeof ErrorCodes[codeName] !== 'undefined') {\r\n\t\t\t\tthrow new Error('Error already defined: ' + codeName + ' as ' + ErrorCodes[codeName]);\r\n\t\t\t}\r\n\t\t\tif (typeof ErrorCodeLookup[codeNumber] !== 'undefined') {\r\n\t\t\t\tthrow new Error('Error code already used: ' + ErrorCodeLookup[codeNumber] + ' as ' + codeNumber);\r\n\t\t\t}\r\n\t\t\tErrorCodes[codeName] = codeNumber;\r\n\t\t\tErrorCodeLookup[codeNumber] = codeName;\r\n\t\t\tErrorMessagesDefault[codeName] = ErrorMessagesDefault[codeNumber] = defaultMessage;\r\n\t\t\tfor (var langCode in languages) {\r\n\t\t\t\tvar language = languages[langCode];\r\n\t\t\t\tif (language[codeName]) {\r\n\t\t\t\t\tlanguage[codeNumber] = language[codeNumber] || language[codeName];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\treset: function () {\r\n\t\t\tglobalContext.reset();\r\n\t\t\tthis.error = null;\r\n\t\t\tthis.missing = [];\r\n\t\t\tthis.valid = true;\r\n\t\t},\r\n\t\tmissing: [],\r\n\t\terror: null,\r\n\t\tvalid: true,\r\n\t\tnormSchema: normSchema,\r\n\t\tresolveUrl: resolveUrl,\r\n\t\tgetDocumentUri: getDocumentUri,\r\n\t\terrorCodes: ErrorCodes\r\n\t};\r\n\tapi.language(language || 'en');\r\n\treturn api;\r\n}\r\n\r\nvar tv4 = createApi();\r\ntv4.addLanguage('en-gb', ErrorMessagesDefault);\r\n\r\n//legacy property\r\ntv4.tv4 = tv4;\r\n\r\nreturn tv4; // used by _header.js to globalise.\r\n\r\n}));","  //     FBP Graph Journal\n  //     (c) 2016-2017 Flowhub UG\n  //     (c) 2014 Jon Nordby\n  //     (c) 2013 Flowhub UG\n  //     (c) 2011-2012 Henri Bergius, Nemein\n  //     FBP Graph may be freely distributed under the MIT license\n\nvar EventEmitter, Journal, JournalStore, MemoryJournalStore, calculateMeta, clone, entryToPrettyString,\n  boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } };\n\n({EventEmitter} = require('events'));\n\nclone = require('clone');\n\nentryToPrettyString = function(entry) {\n  var a;\n  a = entry.args;\n  switch (entry.cmd) {\n    case 'addNode':\n      return `${a.id}(${a.component})`;\n    case 'removeNode':\n      return `DEL ${a.id}(${a.component})`;\n    case 'renameNode':\n      return `RENAME ${a.oldId} ${a.newId}`;\n    case 'changeNode':\n      return `META ${a.id}`;\n    case 'addEdge':\n      return `${a.from.node} ${a.from.port} -> ${a.to.port} ${a.to.node}`;\n    case 'removeEdge':\n      return `${a.from.node} ${a.from.port} -X> ${a.to.port} ${a.to.node}`;\n    case 'changeEdge':\n      return `META ${a.from.node} ${a.from.port} -> ${a.to.port} ${a.to.node}`;\n    case 'addInitial':\n      return `'${a.from.data}' -> ${a.to.port} ${a.to.node}`;\n    case 'removeInitial':\n      return `'${a.from.data}' -X> ${a.to.port} ${a.to.node}`;\n    case 'startTransaction':\n      return `>>> ${entry.rev}: ${a.id}`;\n    case 'endTransaction':\n      return `<<< ${entry.rev}: ${a.id}`;\n    case 'changeProperties':\n      return \"PROPERTIES\";\n    case 'addGroup':\n      return `GROUP ${a.name}`;\n    case 'renameGroup':\n      return `RENAME GROUP ${a.oldName} ${a.newName}`;\n    case 'removeGroup':\n      return `DEL GROUP ${a.name}`;\n    case 'changeGroup':\n      return `META GROUP ${a.name}`;\n    case 'addInport':\n      return `INPORT ${a.name}`;\n    case 'removeInport':\n      return `DEL INPORT ${a.name}`;\n    case 'renameInport':\n      return `RENAME INPORT ${a.oldId} ${a.newId}`;\n    case 'changeInport':\n      return `META INPORT ${a.name}`;\n    case 'addOutport':\n      return `OUTPORT ${a.name}`;\n    case 'removeOutport':\n      return `DEL OUTPORT ${a.name}`;\n    case 'renameOutport':\n      return `RENAME OUTPORT ${a.oldId} ${a.newId}`;\n    case 'changeOutport':\n      return `META OUTPORT ${a.name}`;\n    default:\n      throw new Error(`Unknown journal entry: ${entry.cmd}`);\n  }\n};\n\n// To set, not just update (append) metadata\ncalculateMeta = function(oldMeta, newMeta) {\n  var k, setMeta, v;\n  setMeta = {};\n  for (k in oldMeta) {\n    v = oldMeta[k];\n    setMeta[k] = null;\n  }\n  for (k in newMeta) {\n    v = newMeta[k];\n    setMeta[k] = v;\n  }\n  return setMeta;\n};\n\nJournalStore = (function() {\n  class JournalStore extends EventEmitter {\n    constructor(graph) {\n      super();\n      this.graph = graph;\n      this.lastRevision = 0;\n    }\n\n    putTransaction(revId, entries) {\n      if (revId > this.lastRevision) {\n        this.lastRevision = revId;\n      }\n      return this.emit('transaction', revId);\n    }\n\n    fetchTransaction(revId, entries) {}\n\n  };\n\n  JournalStore.prototype.lastRevision = 0;\n\n  return JournalStore;\n\n}).call(this);\n\nMemoryJournalStore = class MemoryJournalStore extends JournalStore {\n  constructor(graph) {\n    super(graph);\n    this.transactions = [];\n  }\n\n  putTransaction(revId, entries) {\n    super.putTransaction(revId, entries);\n    return this.transactions[revId] = entries;\n  }\n\n  fetchTransaction(revId) {\n    return this.transactions[revId];\n  }\n\n};\n\nJournal = (function() {\n  // ## Journalling graph changes\n\n  // The Journal can follow graph changes, store them\n  // and allows to recall previous revisions of the graph.\n\n  // Revisions stored in the journal follow the transactions of the graph.\n  // It is not possible to operate on smaller changes than individual transactions.\n  // Use startTransaction and endTransaction on Graph to structure the revisions logical changesets.\n  class Journal extends EventEmitter {\n    constructor(graph, metadata, store) {\n      var edge, group, iip, j, k, l, len, len1, len2, len3, m, n, node, ref, ref1, ref2, ref3, ref4, ref5, v;\n      super();\n      this.startTransaction = this.startTransaction.bind(this);\n      this.endTransaction = this.endTransaction.bind(this);\n      this.graph = graph;\n      this.entries = [];\n      this.subscribed = true;\n      this.store = store || new MemoryJournalStore(this.graph);\n      if (this.store.transactions.length === 0) {\n        // Sync journal with current graph to start transaction history\n        this.currentRevision = -1;\n        this.startTransaction('initial', metadata);\n        ref = this.graph.nodes;\n        for (j = 0, len = ref.length; j < len; j++) {\n          node = ref[j];\n          this.appendCommand('addNode', node);\n        }\n        ref1 = this.graph.edges;\n        for (l = 0, len1 = ref1.length; l < len1; l++) {\n          edge = ref1[l];\n          this.appendCommand('addEdge', edge);\n        }\n        ref2 = this.graph.initializers;\n        for (m = 0, len2 = ref2.length; m < len2; m++) {\n          iip = ref2[m];\n          this.appendCommand('addInitial', iip);\n        }\n        if (Object.keys(this.graph.properties).length > 0) {\n          this.appendCommand('changeProperties', this.graph.properties, {});\n        }\n        ref3 = this.graph.inports;\n        for (k in ref3) {\n          v = ref3[k];\n          this.appendCommand('addInport', {\n            name: k,\n            port: v\n          });\n        }\n        ref4 = this.graph.outports;\n        for (k in ref4) {\n          v = ref4[k];\n          this.appendCommand('addOutport', {\n            name: k,\n            port: v\n          });\n        }\n        ref5 = this.graph.groups;\n        for (n = 0, len3 = ref5.length; n < len3; n++) {\n          group = ref5[n];\n          this.appendCommand('addGroup', group);\n        }\n        this.endTransaction('initial', metadata);\n      } else {\n        // Persistent store, start with its latest rev\n        this.currentRevision = this.store.lastRevision;\n      }\n      // Subscribe to graph changes\n      this.graph.on('addNode', (node) => {\n        return this.appendCommand('addNode', node);\n      });\n      this.graph.on('removeNode', (node) => {\n        return this.appendCommand('removeNode', node);\n      });\n      this.graph.on('renameNode', (oldId, newId) => {\n        var args;\n        args = {\n          oldId: oldId,\n          newId: newId\n        };\n        return this.appendCommand('renameNode', args);\n      });\n      this.graph.on('changeNode', (node, oldMeta) => {\n        return this.appendCommand('changeNode', {\n          id: node.id,\n          new: node.metadata,\n          old: oldMeta\n        });\n      });\n      this.graph.on('addEdge', (edge) => {\n        return this.appendCommand('addEdge', edge);\n      });\n      this.graph.on('removeEdge', (edge) => {\n        return this.appendCommand('removeEdge', edge);\n      });\n      this.graph.on('changeEdge', (edge, oldMeta) => {\n        return this.appendCommand('changeEdge', {\n          from: edge.from,\n          to: edge.to,\n          new: edge.metadata,\n          old: oldMeta\n        });\n      });\n      this.graph.on('addInitial', (iip) => {\n        return this.appendCommand('addInitial', iip);\n      });\n      this.graph.on('removeInitial', (iip) => {\n        return this.appendCommand('removeInitial', iip);\n      });\n      this.graph.on('changeProperties', (newProps, oldProps) => {\n        return this.appendCommand('changeProperties', {\n          new: newProps,\n          old: oldProps\n        });\n      });\n      this.graph.on('addGroup', (group) => {\n        return this.appendCommand('addGroup', group);\n      });\n      this.graph.on('renameGroup', (oldName, newName) => {\n        return this.appendCommand('renameGroup', {\n          oldName: oldName,\n          newName: newName\n        });\n      });\n      this.graph.on('removeGroup', (group) => {\n        return this.appendCommand('removeGroup', group);\n      });\n      this.graph.on('changeGroup', (group, oldMeta) => {\n        return this.appendCommand('changeGroup', {\n          name: group.name,\n          new: group.metadata,\n          old: oldMeta\n        });\n      });\n      this.graph.on('addExport', (exported) => {\n        return this.appendCommand('addExport', exported);\n      });\n      this.graph.on('removeExport', (exported) => {\n        return this.appendCommand('removeExport', exported);\n      });\n      this.graph.on('addInport', (name, port) => {\n        return this.appendCommand('addInport', {\n          name: name,\n          port: port\n        });\n      });\n      this.graph.on('removeInport', (name, port) => {\n        return this.appendCommand('removeInport', {\n          name: name,\n          port: port\n        });\n      });\n      this.graph.on('renameInport', (oldId, newId) => {\n        return this.appendCommand('renameInport', {\n          oldId: oldId,\n          newId: newId\n        });\n      });\n      this.graph.on('changeInport', (name, port, oldMeta) => {\n        return this.appendCommand('changeInport', {\n          name: name,\n          new: port.metadata,\n          old: oldMeta\n        });\n      });\n      this.graph.on('addOutport', (name, port) => {\n        return this.appendCommand('addOutport', {\n          name: name,\n          port: port\n        });\n      });\n      this.graph.on('removeOutport', (name, port) => {\n        return this.appendCommand('removeOutport', {\n          name: name,\n          port: port\n        });\n      });\n      this.graph.on('renameOutport', (oldId, newId) => {\n        return this.appendCommand('renameOutport', {\n          oldId: oldId,\n          newId: newId\n        });\n      });\n      this.graph.on('changeOutport', (name, port, oldMeta) => {\n        return this.appendCommand('changeOutport', {\n          name: name,\n          new: port.metadata,\n          old: oldMeta\n        });\n      });\n      this.graph.on('startTransaction', (id, meta) => {\n        return this.startTransaction(id, meta);\n      });\n      this.graph.on('endTransaction', (id, meta) => {\n        return this.endTransaction(id, meta);\n      });\n    }\n\n    startTransaction(id, meta) {\n      boundMethodCheck(this, Journal);\n      if (!this.subscribed) {\n        return;\n      }\n      if (this.entries.length > 0) {\n        throw Error(\"Inconsistent @entries\");\n      }\n      this.currentRevision++;\n      return this.appendCommand('startTransaction', {\n        id: id,\n        metadata: meta\n      }, this.currentRevision);\n    }\n\n    endTransaction(id, meta) {\n      boundMethodCheck(this, Journal);\n      if (!this.subscribed) {\n        return;\n      }\n      this.appendCommand('endTransaction', {\n        id: id,\n        metadata: meta\n      }, this.currentRevision);\n      // TODO: this would be the place to refine @entries into\n      // a minimal set of changes, like eliminating changes early in transaction\n      // which were later reverted/overwritten\n      this.store.putTransaction(this.currentRevision, this.entries);\n      return this.entries = [];\n    }\n\n    appendCommand(cmd, args, rev) {\n      var entry;\n      if (!this.subscribed) {\n        return;\n      }\n      entry = {\n        cmd: cmd,\n        args: clone(args)\n      };\n      if (rev != null) {\n        entry.rev = rev;\n      }\n      return this.entries.push(entry);\n    }\n\n    executeEntry(entry) {\n      var a;\n      a = entry.args;\n      switch (entry.cmd) {\n        case 'addNode':\n          return this.graph.addNode(a.id, a.component);\n        case 'removeNode':\n          return this.graph.removeNode(a.id);\n        case 'renameNode':\n          return this.graph.renameNode(a.oldId, a.newId);\n        case 'changeNode':\n          return this.graph.setNodeMetadata(a.id, calculateMeta(a.old, a.new));\n        case 'addEdge':\n          return this.graph.addEdge(a.from.node, a.from.port, a.to.node, a.to.port);\n        case 'removeEdge':\n          return this.graph.removeEdge(a.from.node, a.from.port, a.to.node, a.to.port);\n        case 'changeEdge':\n          return this.graph.setEdgeMetadata(a.from.node, a.from.port, a.to.node, a.to.port, calculateMeta(a.old, a.new));\n        case 'addInitial':\n          return this.graph.addInitial(a.from.data, a.to.node, a.to.port);\n        case 'removeInitial':\n          return this.graph.removeInitial(a.to.node, a.to.port);\n        case 'startTransaction':\n          return null;\n        case 'endTransaction':\n          return null;\n        case 'changeProperties':\n          return this.graph.setProperties(a.new);\n        case 'addGroup':\n          return this.graph.addGroup(a.name, a.nodes, a.metadata);\n        case 'renameGroup':\n          return this.graph.renameGroup(a.oldName, a.newName);\n        case 'removeGroup':\n          return this.graph.removeGroup(a.name);\n        case 'changeGroup':\n          return this.graph.setGroupMetadata(a.name, calculateMeta(a.old, a.new));\n        case 'addInport':\n          return this.graph.addInport(a.name, a.port.process, a.port.port, a.port.metadata);\n        case 'removeInport':\n          return this.graph.removeInport(a.name);\n        case 'renameInport':\n          return this.graph.renameInport(a.oldId, a.newId);\n        case 'changeInport':\n          return this.graph.setInportMetadata(a.name, calculateMeta(a.old, a.new));\n        case 'addOutport':\n          return this.graph.addOutport(a.name, a.port.process, a.port.port, a.port.metadata(a.name));\n        case 'removeOutport':\n          return this.graph.removeOutport;\n        case 'renameOutport':\n          return this.graph.renameOutport(a.oldId, a.newId);\n        case 'changeOutport':\n          return this.graph.setOutportMetadata(a.name, calculateMeta(a.old, a.new));\n        default:\n          throw new Error(`Unknown journal entry: ${entry.cmd}`);\n      }\n    }\n\n    executeEntryInversed(entry) {\n      var a;\n      a = entry.args;\n      switch (entry.cmd) {\n        case 'addNode':\n          return this.graph.removeNode(a.id);\n        case 'removeNode':\n          return this.graph.addNode(a.id, a.component);\n        case 'renameNode':\n          return this.graph.renameNode(a.newId, a.oldId);\n        case 'changeNode':\n          return this.graph.setNodeMetadata(a.id, calculateMeta(a.new, a.old));\n        case 'addEdge':\n          return this.graph.removeEdge(a.from.node, a.from.port, a.to.node, a.to.port);\n        case 'removeEdge':\n          return this.graph.addEdge(a.from.node, a.from.port, a.to.node, a.to.port);\n        case 'changeEdge':\n          return this.graph.setEdgeMetadata(a.from.node, a.from.port, a.to.node, a.to.port, calculateMeta(a.new, a.old));\n        case 'addInitial':\n          return this.graph.removeInitial(a.to.node, a.to.port);\n        case 'removeInitial':\n          return this.graph.addInitial(a.from.data, a.to.node, a.to.port);\n        case 'startTransaction':\n          return null;\n        case 'endTransaction':\n          return null;\n        case 'changeProperties':\n          return this.graph.setProperties(a.old);\n        case 'addGroup':\n          return this.graph.removeGroup(a.name);\n        case 'renameGroup':\n          return this.graph.renameGroup(a.newName, a.oldName);\n        case 'removeGroup':\n          return this.graph.addGroup(a.name, a.nodes, a.metadata);\n        case 'changeGroup':\n          return this.graph.setGroupMetadata(a.name, calculateMeta(a.new, a.old));\n        case 'addInport':\n          return this.graph.removeInport(a.name);\n        case 'removeInport':\n          return this.graph.addInport(a.name, a.port.process, a.port.port, a.port.metadata);\n        case 'renameInport':\n          return this.graph.renameInport(a.newId, a.oldId);\n        case 'changeInport':\n          return this.graph.setInportMetadata(a.name, calculateMeta(a.new, a.old));\n        case 'addOutport':\n          return this.graph.removeOutport(a.name);\n        case 'removeOutport':\n          return this.graph.addOutport(a.name, a.port.process, a.port.port, a.port.metadata);\n        case 'renameOutport':\n          return this.graph.renameOutport(a.newId, a.oldId);\n        case 'changeOutport':\n          return this.graph.setOutportMetadata(a.name, calculateMeta(a.new, a.old));\n        default:\n          throw new Error(`Unknown journal entry: ${entry.cmd}`);\n      }\n    }\n\n    moveToRevision(revId) {\n      var entries, entry, i, j, l, len, m, n, r, ref, ref1, ref2, ref3, ref4, ref5;\n      if (revId === this.currentRevision) {\n        return;\n      }\n      this.subscribed = false;\n      if (revId > this.currentRevision) {\n// Forward replay journal to revId\n        for (r = j = ref = this.currentRevision + 1, ref1 = revId; (ref <= ref1 ? j <= ref1 : j >= ref1); r = ref <= ref1 ? ++j : --j) {\n          ref2 = this.store.fetchTransaction(r);\n          for (l = 0, len = ref2.length; l < len; l++) {\n            entry = ref2[l];\n            this.executeEntry(entry);\n          }\n        }\n      } else {\n// Move backwards, and apply inverse changes\n        for (r = m = ref3 = this.currentRevision, ref4 = revId + 1; -1 !== 0 && (-1 > 0 ? m <= ref4 : m >= ref4); r = m += -1) {\n          entries = this.store.fetchTransaction(r);\n          for (i = n = ref5 = entries.length - 1; -1 !== 0 && (-1 > 0 ? n <= 0 : n >= 0); i = n += -1) {\n            this.executeEntryInversed(entries[i]);\n          }\n        }\n      }\n      this.currentRevision = revId;\n      return this.subscribed = true;\n    }\n\n    // ## Undoing & redoing\n    // Undo the last graph change\n    undo() {\n      if (!this.canUndo()) {\n        return;\n      }\n      return this.moveToRevision(this.currentRevision - 1);\n    }\n\n    // If there is something to undo\n    canUndo() {\n      return this.currentRevision > 0;\n    }\n\n    // Redo the last undo\n    redo() {\n      if (!this.canRedo()) {\n        return;\n      }\n      return this.moveToRevision(this.currentRevision + 1);\n    }\n\n    // If there is something to redo\n    canRedo() {\n      return this.currentRevision < this.store.lastRevision;\n    }\n\n    //# Serializing\n    // Render a pretty printed string of the journal. Changes are abbreviated\n    toPrettyString(startRev, endRev) {\n      var e, entry, j, l, len, lines, r, ref, ref1;\n      startRev |= 0;\n      endRev |= this.store.lastRevision;\n      lines = [];\n      for (r = j = ref = startRev, ref1 = endRev; (ref <= ref1 ? j < ref1 : j > ref1); r = ref <= ref1 ? ++j : --j) {\n        e = this.store.fetchTransaction(r);\n        for (l = 0, len = e.length; l < len; l++) {\n          entry = e[l];\n          lines.push(entryToPrettyString(entry));\n        }\n      }\n      return lines.join('\\n');\n    }\n\n    // Serialize journal to JSON\n    toJSON(startRev, endRev) {\n      var entries, entry, j, l, len, r, ref, ref1, ref2;\n      startRev |= 0;\n      endRev |= this.store.lastRevision;\n      entries = [];\n      for (r = j = ref = startRev, ref1 = endRev; 1 !== 0 && (1 > 0 ? j < ref1 : j > ref1); r = j += 1) {\n        ref2 = this.store.fetchTransaction(r);\n        for (l = 0, len = ref2.length; l < len; l++) {\n          entry = ref2[l];\n          entries.push(entryToPrettyString(entry));\n        }\n      }\n      return entries;\n    }\n\n    save(file, success) {\n      var json;\n      json = JSON.stringify(this.toJSON(), null, 4);\n      return require('fs').writeFile(`${file}.json`, json, \"utf-8\", function(err, data) {\n        if (err) {\n          throw err;\n        }\n        return success(file);\n      });\n    }\n\n  };\n\n  Journal.prototype.graph = null;\n\n  Journal.prototype.entries = [];\n\n  Journal.prototype.subscribed = true; // Whether we should respond to graph change notifications or not\n\n  return Journal;\n\n}).call(this);\n\nexports.Journal = Journal;\n\nexports.JournalStore = JournalStore;\n\nexports.MemoryJournalStore = MemoryJournalStore;\n","\n// File generated by noflo-component-loader on 2018-12-01T16:38:50.025Z\nvar baseLoader = require('noflo-component-loader/lib/loader.js');\nvar sources = {\"browser-app/DoSomething\":{\"language\":\"javascript\",\"source\":\"const noflo = require('noflo');\\n\\nexports.getComponent = () => {\\n  const c = new noflo.Component();\\n  // Define a meaningful icon for component from http://fontawesome.io/icons/\\n  c.icon = 'cog';\\n  // Provide a description on component usage\\n  c.description = 'do X';\\n  // Add input ports\\n  c.inPorts.add('in', {\\n    datatype: 'string',\\n  });\\n  // Add output ports\\n  c.outPorts.add('out', {\\n    datatype: 'string',\\n  });\\n  // What to do when port receives a packet\\n  c.process((input, output) => {\\n    // Check that input has received data packet\\n    if (!input.hasData('in')) {\\n      return;\\n    }\\n    // Read the contents of the data packet\\n    const data = input.getData('in');\\n    // Send the contents to output port\\n    output.send({\\n      out: data,\\n    });\\n    // Finish processing\\n    output.done();\\n  });\\n  return c;\\n};\\n\"},\"Graph\":{\"language\":\"javascript\",\"source\":\"//     NoFlo - Flow-Based Programming for JavaScript\\n//     (c) 2013-2017 Flowhub UG\\n//     (c) 2011-2012 Henri Bergius, Nemein\\n//     NoFlo may be freely distributed under the MIT license\\n\\n// The Graph component is used to wrap NoFlo Networks into components inside\\n// another network.\\nvar Graph, noflo;\\n\\nnoflo = require(\\\"../lib/NoFlo\\\");\\n\\nGraph = class Graph extends noflo.Component {\\n  constructor(metadata) {\\n    super();\\n    this.metadata = metadata;\\n    this.network = null;\\n    this.ready = true;\\n    this.started = false;\\n    this.starting = false;\\n    this.baseDir = null;\\n    this.loader = null;\\n    this.load = 0;\\n    this.inPorts = new noflo.InPorts({\\n      graph: {\\n        datatype: 'all',\\n        description: 'NoFlo graph definition to be used with the subgraph component',\\n        required: true\\n      }\\n    });\\n    this.outPorts = new noflo.OutPorts;\\n    this.inPorts.graph.on('ip', (packet) => {\\n      if (packet.type !== 'data') {\\n        return;\\n      }\\n      return this.setGraph(packet.data, (err) => {\\n        if (err) {\\n          // TODO: Port this part to Process API and use output.error method instead\\n          return this.error(err);\\n        }\\n      });\\n    });\\n  }\\n\\n  setGraph(graph, callback) {\\n    this.ready = false;\\n    if (typeof graph === 'object') {\\n      if (typeof graph.addNode === 'function') {\\n        // Existing Graph object\\n        this.createNetwork(graph, callback);\\n        return;\\n      }\\n      // JSON definition of a graph\\n      noflo.graph.loadJSON(graph, (err, instance) => {\\n        if (err) {\\n          return callback(err);\\n        }\\n        instance.baseDir = this.baseDir;\\n        return this.createNetwork(instance, callback);\\n      });\\n      return;\\n    }\\n    if (graph.substr(0, 1) !== \\\"/\\\" && graph.substr(1, 1) !== \\\":\\\" && process && process.cwd) {\\n      graph = `${process.cwd()}/${graph}`;\\n    }\\n    return noflo.graph.loadFile(graph, (err, instance) => {\\n      if (err) {\\n        return callback(err);\\n      }\\n      instance.baseDir = this.baseDir;\\n      return this.createNetwork(instance, callback);\\n    });\\n  }\\n\\n  createNetwork(graph, callback) {\\n    this.description = graph.properties.description || '';\\n    this.icon = graph.properties.icon || this.icon;\\n    if (!graph.name) {\\n      graph.name = this.nodeId;\\n    }\\n    graph.componentLoader = this.loader;\\n    return noflo.createNetwork(graph, (err, network1) => {\\n      this.network = network1;\\n      if (err) {\\n        return callback(err);\\n      }\\n      this.emit('network', this.network);\\n      // Subscribe to network lifecycle\\n      this.subscribeNetwork(this.network);\\n      // Wire the network up\\n      return this.network.connect((err) => {\\n        var name, node, ref;\\n        if (err) {\\n          return callback(err);\\n        }\\n        ref = this.network.processes;\\n        for (name in ref) {\\n          node = ref[name];\\n          // Map exported ports to local component\\n          this.findEdgePorts(name, node);\\n        }\\n        // Finally set ourselves as \\\"ready\\\"\\n        this.setToReady();\\n        return callback();\\n      });\\n    }, true);\\n  }\\n\\n  subscribeNetwork(network) {\\n    var contexts;\\n    contexts = [];\\n    this.network.on('start', () => {\\n      var ctx;\\n      ctx = {};\\n      contexts.push(ctx);\\n      return this.activate(ctx);\\n    });\\n    return this.network.on('end', () => {\\n      var ctx;\\n      ctx = contexts.pop();\\n      if (!ctx) {\\n        return;\\n      }\\n      return this.deactivate(ctx);\\n    });\\n  }\\n\\n  isExportedInport(port, nodeName, portName) {\\n    var priv, pub, ref;\\n    ref = this.network.graph.inports;\\n    // First we check disambiguated exported ports\\n    for (pub in ref) {\\n      priv = ref[pub];\\n      if (!(priv.process === nodeName && priv.port === portName)) {\\n        continue;\\n      }\\n      return pub;\\n    }\\n    // Component has exported ports and this isn't one of them\\n    return false;\\n  }\\n\\n  isExportedOutport(port, nodeName, portName) {\\n    var priv, pub, ref;\\n    ref = this.network.graph.outports;\\n    // First we check disambiguated exported ports\\n    for (pub in ref) {\\n      priv = ref[pub];\\n      if (!(priv.process === nodeName && priv.port === portName)) {\\n        continue;\\n      }\\n      return pub;\\n    }\\n    // Component has exported ports and this isn't one of them\\n    return false;\\n  }\\n\\n  setToReady() {\\n    if (typeof process !== 'undefined' && process.execPath && process.execPath.indexOf('node') !== -1) {\\n      return process.nextTick(() => {\\n        this.ready = true;\\n        return this.emit('ready');\\n      });\\n    } else {\\n      return setTimeout(() => {\\n        this.ready = true;\\n        return this.emit('ready');\\n      }, 0);\\n    }\\n  }\\n\\n  findEdgePorts(name, process) {\\n    var inPorts, outPorts, port, portName, targetPortName;\\n    inPorts = process.component.inPorts.ports;\\n    outPorts = process.component.outPorts.ports;\\n    for (portName in inPorts) {\\n      port = inPorts[portName];\\n      targetPortName = this.isExportedInport(port, name, portName);\\n      if (targetPortName === false) {\\n        continue;\\n      }\\n      this.inPorts.add(targetPortName, port);\\n      this.inPorts[targetPortName].on('connect', () => {\\n        // Start the network implicitly if we're starting to get data\\n        if (this.starting) {\\n          return;\\n        }\\n        if (this.network.isStarted()) {\\n          return;\\n        }\\n        if (this.network.startupDate) {\\n          // Network was started, but did finish. Re-start simply\\n          this.network.setStarted(true);\\n          return;\\n        }\\n        // Network was never started, start properly\\n        return this.setUp(function() {});\\n      });\\n    }\\n    for (portName in outPorts) {\\n      port = outPorts[portName];\\n      targetPortName = this.isExportedOutport(port, name, portName);\\n      if (targetPortName === false) {\\n        continue;\\n      }\\n      this.outPorts.add(targetPortName, port);\\n    }\\n    return true;\\n  }\\n\\n  isReady() {\\n    return this.ready;\\n  }\\n\\n  isSubgraph() {\\n    return true;\\n  }\\n\\n  isLegacy() {\\n    return false;\\n  }\\n\\n  setUp(callback) {\\n    this.starting = true;\\n    if (!this.isReady()) {\\n      this.once('ready', () => {\\n        return this.setUp(callback);\\n      });\\n      return;\\n    }\\n    if (!this.network) {\\n      return callback(null);\\n    }\\n    return this.network.start((err) => {\\n      if (err) {\\n        return callback(err);\\n      }\\n      this.starting = false;\\n      return callback();\\n    });\\n  }\\n\\n  tearDown(callback) {\\n    this.starting = false;\\n    if (!this.network) {\\n      return callback(null);\\n    }\\n    return this.network.stop(function(err) {\\n      if (err) {\\n        return callback(err);\\n      }\\n      return callback();\\n    });\\n  }\\n\\n};\\n\\nexports.getComponent = function(metadata) {\\n  return new Graph(metadata);\\n};\\n\"},\"core/Callback\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'This component calls a given callback function for each\\n  IP it receives.  The Callback component is typically used to connect\\n  NoFlo with external Node.js code.'\\n  c.icon = 'sign-out'\\n\\n  c.inPorts.add 'in',\\n    description: 'Object passed as argument of the callback'\\n    datatype: 'all'\\n  c.inPorts.add 'callback',\\n    description: 'Callback to invoke'\\n    datatype: 'function'\\n    control: true\\n    required: true\\n  c.outPorts.add 'error',\\n    datatype: 'object'\\n\\n  c.process (input, output) ->\\n    return unless input.hasData 'callback', 'in'\\n    [callback, data] = input.getData 'callback', 'in'\\n    unless typeof callback is 'function'\\n      output.done new Error 'The provided callback must be a function'\\n      return\\n\\n    # Call the callback when receiving data\\n    try\\n      callback data\\n    catch e\\n      return output.done e\\n    output.done()\\n\"},\"core/Copy\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\nowl = require 'owl-deepcopy'\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'deep (i.e. recursively) copy an object'\\n  c.icon = 'copy'\\n\\n  c.inPorts.add 'in',\\n    datatype: 'all'\\n    description: 'Packet to be copied'\\n  c.outPorts.add 'out',\\n    datatype: 'all'\\n    description: 'Copy of the original packet'\\n\\n  c.process (input, output) ->\\n    return unless input.hasData 'in'\\n    data = input.getData 'in'\\n\\n    copy = owl.deepCopy data\\n    output.sendDone\\n      out: copy\\n    return\\n\"},\"core/DisconnectAfterPacket\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'Makes each data packet a stream of its own'\\n  c.icon = 'pause'\\n  c.forwardBrackets = {}\\n  c.autoOrdering = false\\n\\n  c.inPorts.add 'in',\\n    datatype: 'all'\\n    description: 'Packet to be forward with disconnection'\\n  c.outPorts.add 'out',\\n    datatype: 'all'\\n\\n  brackets = {}\\n  c.tearDown = (callback) ->\\n    brackets = {}\\n  c.process (input, output) ->\\n    # Force auto-ordering to be off for this one\\n    c.autoOrdering = false\\n\\n    data = input.get 'in'\\n    brackets[input.scope] = [] unless brackets[input.scope]\\n    if data.type is 'openBracket'\\n      brackets[input.scope].push data.data\\n      output.done()\\n      return\\n    if data.type is 'closeBracket'\\n      brackets[input.scope].pop()\\n      output.done()\\n      return\\n\\n    return unless data.type is 'data'\\n\\n    for bracket in brackets[input.scope]\\n      output.sendIP 'out', new noflo.IP 'openBracket', bracket\\n    output.sendIP 'out', data\\n    closes = brackets[input.scope].slice 0\\n    closes.reverse()\\n    for bracket in closes\\n      output.sendIP 'out', new noflo.IP 'closeBracket', bracket\\n\\n    output.done()\\n\"},\"core/Drop\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'This component drops every packet it receives with no\\n  action'\\n  c.icon = 'trash-o'\\n\\n  c.inPorts.add 'in',\\n    datatypes: 'all'\\n    description: 'Packet to be dropped'\\n\\n  c.process (input, output) ->\\n    data = input.get 'in'\\n    data.drop()\\n    output.done()\\n    return\\n\"},\"core/Kick\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'This component generates a single packet and sends it to\\n  the output port. Mostly usable for debugging, but can also be useful\\n  for starting up networks.'\\n  c.icon = 'share'\\n\\n  c.inPorts.add 'in',\\n    datatype: 'bang'\\n    description: 'Signal to send the data packet'\\n  c.inPorts.add 'data',\\n    datatype: 'all'\\n    description: 'Packet to be sent'\\n    control: true\\n    default: null\\n  c.outPorts.add 'out',\\n    datatype: 'all'\\n\\n  c.process (input, output) ->\\n    return unless input.hasStream 'in'\\n    return if input.attached('data').length and not input.hasData 'data'\\n    bang = input.getData 'in'\\n    data = input.getData 'data'\\n    output.send\\n      out: data\\n    output.done()\\n\"},\"core/MakeFunction\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'Evaluates a function each time data hits the \\\"in\\\" port\\n  and sends the return value to \\\"out\\\". Within the function \\\"x\\\" will\\n  be the variable from the in port. For example, to make a ^2 function\\n  input \\\"return x*x;\\\" to the function port.'\\n  c.icon = 'code'\\n\\n  c.inPorts.add 'in',\\n    datatype: 'all'\\n    description: 'Packet to be processed'\\n  c.inPorts.add 'function',\\n    datatype: 'string'\\n    description: 'Function to evaluate'\\n    control: true\\n  c.outPorts.add 'out',\\n    datatype: 'all'\\n  c.outPorts.add 'function',\\n    datatype: 'function'\\n  c.outPorts.add 'error',\\n    datatype: 'object'\\n\\n  prepareFunction = (func, callback) ->\\n    if typeof func is 'function'\\n      callback null, func\\n      return\\n    try\\n      newFunc = Function 'x', func\\n    catch e\\n      callback e\\n      return\\n    callback null, newFunc\\n\\n  c.process (input, output) ->\\n    return if input.attached('in').length and not input.hasData 'in'\\n    if input.hasData 'function', 'in'\\n      # Both function and input data\\n      prepareFunction input.getData('function'), (err, func) ->\\n        if err\\n          output.done e\\n          return\\n        data = input.getData 'in'\\n        try\\n          result = func data\\n        catch e\\n          output.done e\\n          return\\n        output.sendDone\\n          function: func\\n          out: result\\n        return\\n      return\\n    return unless input.hasData 'function'\\n    prepareFunction input.getData('function'), (err, func) ->\\n      if err\\n        output.done e\\n        return\\n      output.sendDone\\n        function: func\\n      return\\n    return\\n\"},\"core/Merge\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'This component receives data on multiple input ports and\\n    sends the same data out to the connected output port'\\n  c.icon = 'compress'\\n\\n  c.inPorts.add 'in',\\n    datatype: 'all'\\n    description: 'Packet to be forwarded'\\n  c.outPorts.add 'out',\\n    datatype: 'all'\\n\\n  c.process (input, output) ->\\n    data = input.get 'in'\\n    output.sendDone\\n      out: data\\n\"},\"core/Output\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\nunless noflo.isBrowser()\\n  util = require 'util'\\nelse\\n  util =\\n    inspect: (data) -> data\\n\\nlog = (options, data) ->\\n  if options?\\n    console.log util.inspect data,\\n      options.showHidden, options.depth, options.colors\\n  else\\n    console.log data\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'Sends the data items to console.log'\\n  c.icon = 'bug'\\n\\n  c.inPorts.add 'in',\\n    datatype: 'all'\\n    description: 'Packet to be printed through console.log'\\n  c.inPorts.add 'options',\\n    datatype: 'object'\\n    description: 'Options to be passed to console.log'\\n    control: true\\n  c.outPorts.add 'out',\\n    datatype: 'all'\\n\\n  c.process (input, output) ->\\n    return unless input.hasData 'in'\\n    return if input.attached('options').length and not input.hasData 'options'\\n\\n    options = null\\n    if input.has 'options'\\n      options = input.getData 'options'\\n\\n    data = input.getData 'in'\\n    log options, data\\n    output.sendDone\\n      out: data\\n\"},\"core/ReadGlobal\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'Returns the value of a global variable.'\\n  c.icon = 'usd'\\n\\n  # inPorts\\n  c.inPorts.add 'name',\\n    description: 'The name of the global variable.'\\n\\n  # outPorts\\n  c.outPorts.add 'value',\\n    description: 'The value of the variable.'\\n\\n  c.outPorts.add 'error',\\n    description: 'Any errors that occured reading the variables value.'\\n\\n  c.forwardBrackets =\\n    name: ['value', 'error']\\n\\n  c.process (input, output) ->\\n    return unless input.hasData 'name'\\n    data = input.getData 'name'\\n\\n    value = unless noflo.isBrowser() then global[data] else window[data]\\n\\n    if typeof value is 'undefined'\\n      err = new Error \\\"\\\\\\\"#{data}\\\\\\\" is undefined on the global object.\\\"\\n      output.sendDone err\\n      return\\n    output.sendDone\\n      value: value\\n\"},\"core/Repeat\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'Forwards packets and metadata in the same way\\n  it receives them'\\n  c.icon = 'forward'\\n  c.inPorts.add 'in',\\n    datatype: 'all'\\n    description: 'Packet to forward'\\n  c.outPorts.add 'out',\\n    datatype: 'all'\\n\\n  c.process (input, output) ->\\n    data = input.get 'in'\\n    output.sendDone\\n      out: data\\n\"},\"core/RepeatAsync\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = \\\"Like 'Repeat', except repeat on next tick\\\"\\n  c.icon = 'step-forward'\\n  c.inPorts.add 'in',\\n    datatype: 'all'\\n    description: 'Packet to forward'\\n  c.outPorts.add 'out',\\n    datatype: 'all'\\n\\n  c.process (input, output) ->\\n    data = input.get 'in'\\n    setTimeout ->\\n      output.sendDone\\n        out: data\\n    , 0\\n\"},\"core/RepeatDelayed\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'Forward packet after a set delay'\\n  c.icon = 'clock-o'\\n\\n  c.timers = []\\n\\n  c.inPorts.add 'in',\\n    datatype: 'all'\\n    description: 'Packet to be forwarded with a delay'\\n  c.inPorts.add 'delay',\\n    datatype: 'number'\\n    description: 'How much to delay'\\n    default: 500\\n    control: true\\n\\n  c.outPorts.add 'out',\\n    datatype: 'all'\\n\\n  c.tearDown = (callback) ->\\n    clearTimeout timer for timer in c.timers\\n    c.timers = []\\n    callback()\\n\\n  c.process (input, output) ->\\n    return unless input.hasData 'in'\\n    return if input.attached('delay').length and not input.hasData 'delay'\\n\\n    delay = 500\\n    if input.hasData 'delay'\\n      delay = input.getData 'delay'\\n    payload = input.get 'in'\\n\\n    timer = setTimeout ->\\n      c.timers.splice c.timers.indexOf(timer), 1\\n      output.sendDone\\n        out: payload\\n    , delay\\n    c.timers.push timer\\n\"},\"core/RunInterval\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'Send a packet at the given interval'\\n  c.icon = 'clock-o'\\n  c.inPorts.add 'interval',\\n    datatype: 'number'\\n    description: 'Interval at which output packets are emitted (ms)'\\n    required: true\\n    control: true\\n  c.inPorts.add 'start',\\n    datatype: 'bang'\\n    description: 'Start the emission'\\n  c.inPorts.add 'stop',\\n    datatype: 'bang'\\n    description: 'Stop the emission'\\n  c.outPorts.add 'out',\\n    datatype: 'bang'\\n\\n  c.timers = {}\\n\\n  cleanUp = (scope) ->\\n    return unless c.timers[scope]\\n    clearInterval c.timers[scope].interval\\n    c.timers[scope].deactivate()\\n    c.timers[scope] = null\\n\\n  c.tearDown = (callback) ->\\n    for scope, context of c.timers\\n      cleanUp scope\\n    c.timers = {}\\n    callback()\\n\\n  c.forwardBrackets = {}\\n  c.process (input, output, context) ->\\n    if input.hasData 'start'\\n      return unless input.hasData 'interval'\\n      start = input.get 'start'\\n      return unless start.type is 'data'\\n      interval = parseInt input.getData 'interval'\\n      # Ensure we deactivate previous interval in this scope, if any\\n      cleanUp start.scope\\n\\n      # Set up interval\\n      context.interval = setInterval ->\\n        bang = new noflo.IP 'data', true\\n        bang.scope = start.scope\\n        c.outPorts.out.sendIP bang\\n      , interval\\n\\n      # Register scope, we keep it active until stopped\\n      c.timers[start.scope] = context\\n      return\\n\\n    if input.hasData 'stop'\\n      stop = input.get 'stop'\\n      return unless stop.type is 'data'\\n      # Deactivate interval in this scope\\n      cleanUp stop.scope\\n      return\\n\"},\"core/RunTimeout\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'Send a packet after the given time in ms'\\n  c.icon = 'clock-o'\\n\\n  c.timer = {}\\n\\n  c.inPorts.add 'time',\\n    datatype: 'number'\\n    description: 'Time after which a packet will be sent'\\n    required: true\\n    control: true\\n  c.inPorts.add 'start',\\n    datatype: 'bang'\\n    description: 'Start the timeout before sending a packet'\\n  c.outPorts.add 'out',\\n    datatype: 'bang'\\n\\n  c.forwardBrackets =\\n    start: ['out']\\n\\n  c.stopTimer = (scope) ->\\n    return unless c.timer[scope]\\n    clearTimeout c.timer[scope].timeout\\n    c.timer[scope].deactivate()\\n    delete c.timer[scope]\\n\\n  c.tearDown = (callback) ->\\n    for scope, timer of c.timer\\n      c.stopTimer scope\\n    callback()\\n\\n  c.process (input, output, context) ->\\n    return unless input.hasData 'time', 'start'\\n    time = input.getData 'time'\\n    bang = input.getData 'start'\\n    # Ensure we deactivate previous timeout, if any\\n    c.stopTimer input.scope\\n    # Set up new timer\\n    context.timeout = setTimeout ->\\n      c.timer = null\\n      output.sendDone\\n        out: true\\n    , time\\n    c.timer[input.scope] = context\\n    return\\n\"},\"core/SendNext\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'Sends next packet in buffer when receiving a bang'\\n  c.icon = 'forward'\\n\\n  c.inPorts.add 'data',\\n    datatype: 'all'\\n  c.inPorts.add 'in',\\n    datatype: 'bang'\\n  c.outPorts.add 'out',\\n    datatype: 'all'\\n  c.outPorts.add 'empty',\\n    datatype: 'bang'\\n    required: false\\n\\n  c.forwardBrackets = {}\\n  c.process (input, output) ->\\n    return unless input.hasData 'in'\\n    bang = input.getData 'in'\\n\\n    unless input.hasData 'data'\\n      # No data packets in the buffer, send \\\"empty\\\"\\n      output.sendDone\\n        empty: true\\n      return\\n\\n    sent = false\\n    # Loop until we've either drained the buffer completely, or until\\n    # we hit the next data packet\\n    while input.has 'data'\\n      if sent\\n        # If we already sent data, we look ahead to see if next packet is data and bail out\\n        buf = c.inPorts.data.getBuffer bang.scope\\n        break if buf[0].type is 'data'\\n\\n      packet = input.get 'data'\\n      output.send\\n        out: packet\\n      sent = true if packet.type is 'data'\\n    # After the loop we can deactivate\\n    output.done()\\n\"},\"core/Split\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.icon = 'expand'\\n  c.description = 'This component receives data on a single input port and\\n    sends the same data out to all connected output ports'\\n\\n  c.inPorts.add 'in',\\n    datatype: 'all'\\n    description: 'Packet to be forwarded'\\n\\n  c.outPorts.add 'out',\\n    datatype: 'all'\\n\\n  c.process (input, output) ->\\n    data = input.get 'in'\\n    output.sendDone\\n      out: data\\n\"},\"dom/AddClass\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\n# @runtime noflo-browser\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'Add a class to an element'\\n  c.inPorts.add 'element',\\n    datatype: 'object'\\n  c.inPorts.add 'class',\\n    datatype: 'string'\\n\\n  c.process (input, output) ->\\n    return unless input.has 'element', 'class'\\n    [element, className] = input.getData 'element', 'class'\\n    element.classList.add className\\n    output.done()\\n\"},\"dom/AppendChild\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\n# @runtime noflo-browser\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'Append elements as children of a parent element'\\n  c.inPorts.add 'parent',\\n    datatype: 'object'\\n  c.inPorts.add 'child',\\n    datatype: 'object'\\n\\n  c.process (input, output) ->\\n    return unless input.hasData 'parent', 'child'\\n    [parent, child] = input.getData 'parent', 'child'\\n    parent.appendChild child\\n    output.done()\\n\"},\"dom/CreateElement\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\n# @runtime noflo-browser\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'Create a new DOM Element'\\n  c.inPorts.add 'tagname',\\n    datatype: 'string'\\n  c.inPorts.add 'container',\\n    datatype: 'object'\\n  c.outPorts.add 'element',\\n    datatype: 'object'\\n  c.forwardBrackets =\\n    tagname: ['element']\\n\\n  c.process (input, output) ->\\n    return unless input.hasData 'tagname'\\n    if c.inPorts.container.isAttached()\\n      # If container is attached, we want it too\\n      return unless input.hasData 'container'\\n\\n    tagname = input.getData 'tagname'\\n    element = document.createElement tagname\\n    if input.hasData 'container'\\n      container = input.getData 'container'\\n      container.appendChild element\\n\\n    output.sendDone\\n      element: element\\n\"},\"dom/CreateFragment\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\n# @runtime noflo-browser\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c. description = 'Create a new DOM DocumentFragment'\\n  c.inPorts.add 'in',\\n    datatype: 'bang'\\n  c.outPorts.add 'fragment',\\n    datatype: 'object'\\n\\n  c.forwardBrackets =\\n    in: ['fragment']\\n\\n  c.process (input, output) ->\\n    return unless input.hasData 'in'\\n    input.getData 'in'\\n    fragment = document.createDocumentFragment()\\n    output.sendDone\\n      fragment: fragment\\n\"},\"dom/GetAttribute\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\n# @runtime noflo-browser\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = \\\"Reads the given attribute from the DOM element on the in\\n    port.\\\"\\n\\n  # Define in ports.\\n  c.inPorts.add 'element',\\n    datatype: 'object'\\n    description: 'The element from which to read the attribute from.'\\n    required: true\\n\\n  c.inPorts.add 'attribute',\\n    datatype: 'string'\\n    description: 'The attribute which is read from the DOM element.'\\n    required: true\\n    control: true\\n\\n  # Define out ports.\\n  c.outPorts.add 'out',\\n    datatype: 'string'\\n    description: 'Value of the attribute being read.'\\n\\n  c.forwardBrackets =\\n    element: ['out']\\n\\n  # On data flow.\\n  c.process (input, output) ->\\n    return unless input.hasData 'element', 'attribute'\\n    [element, attribute] = input.getData 'element', 'attribute'\\n    value = element.getAttribute attribute\\n    output.sendDone\\n      out: value\\n\"},\"dom/GetElement\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\n# @runtime noflo-browser\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description ='Get a DOM element matching a query'\\n  c.inPorts.add 'in',\\n    datatype: 'object'\\n    description: 'DOM element to constrain the query to'\\n  c.inPorts.add 'selector',\\n    datatype: 'string'\\n    description: 'CSS selector'\\n  c.outPorts.add 'element',\\n    datatype: 'object'\\n  c.outPorts.add 'error',\\n    datatype: 'object'\\n  c.forwardBrackets =\\n    selector: ['element', 'error']\\n  c.process (input, output) ->\\n    return unless input.hasData 'selector'\\n    return unless input.hasData 'in' if input.attached('in').length > 0\\n    if input.hasData 'in'\\n      # Element-scoped selector\\n      [container, selector] = input.getData 'in', 'selector'\\n      unless typeof container.querySelector is 'function'\\n        output.done new Error 'Given container doesn\\\\'t support querySelectors'\\n        return\\n      el = container.querySelectorAll selector\\n      unless el.length\\n        output.done new Error \\\"No element matching '#{selector}' found under container\\\"\\n        return\\n      for element in el\\n        output.send\\n          element: element\\n      output.done()\\n      return\\n    selector = input.getData 'selector'\\n    el = document.querySelectorAll selector\\n    unless el.length\\n      output.done new Error \\\"No element matching '#{selector}' found under document\\\"\\n      return\\n    for element in el\\n      output.send\\n        element: element\\n    output.done()\\n\"},\"dom/HasClass\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\n# @runtime noflo-browser\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'Check if an element has a given class'\\n  c.inPorts.add 'element',\\n    datatype: 'object'\\n  c.inPorts.add 'class',\\n    datatype: 'string'\\n  c.outPorts.add 'element',\\n    datatype: 'object'\\n  c.outPorts.add 'missed',\\n    datatype: 'object'\\n  c.process (input, output) ->\\n    return unless input.hasData 'element', 'class'\\n    [element, klass] = input.getData 'element', 'class'\\n    if element.classList.contains klass\\n      output.sendDone\\n        element: element\\n      return\\n    output.sendDone\\n      missed: element\\n\"},\"dom/Listen\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\n# @runtime noflo-browser\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'addEventListener for specified event type'\\n  c.icon = 'stethoscope'\\n\\n  c.inPorts.add 'element',\\n    datatype: 'object'\\n  c.inPorts.add 'type',\\n    datatype: 'string'\\n  c.inPorts.add 'preventdefault',\\n    datatype: 'boolean'\\n    control: true\\n    default: false\\n  c.outPorts.add 'element',\\n    datatype: 'object'\\n  c.outPorts.add 'event',\\n    datatype: 'object'\\n\\n  c.elements = {}\\n  cleanUp = (scope) ->\\n    return unless c.elements[scope]\\n    {element, event, listener} = c.elements[scope]\\n    element.removeEventListener event, listener\\n    c.elements[scope].deactivate()\\n    delete c.elements[scope]\\n  c.tearDown = (callback) ->\\n    for scope, element of c.elements\\n      cleanUp scope\\n    c.elements = {}\\n    callback()\\n  c.forwardBrackets = {}\\n\\n  c.process (input, output, context) ->\\n\\n    return unless input.hasData 'element', 'type'\\n    [element, type] = input.getData 'element', 'type'\\n\\n    preventDefault = false\\n    if input.hasData 'preventdefault'\\n      preventDefault = input.getData 'preventdefault'\\n\\n    scope = null\\n    cleanUp scope\\n\\n    context.element = element\\n    context.event = type\\n    context.listener = (event) ->\\n      event.preventDefault() if preventDefault\\n      output.send\\n        element: context.element\\n        event: event\\n    c.elements[context] = context\\n    element.addEventListener type, context.listener\\n\"},\"dom/ReadHtml\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\n# @runtime noflo-browser\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'Read HTML from an existing element'\\n  c.inPorts.add 'container',\\n    datatype: 'object'\\n  c.outPorts.add 'html',\\n    datatype: 'string'\\n  c.forwardBrackets =\\n    container: ['html']\\n  c.process (input, output) ->\\n    return unless input.hasData 'container'\\n    container = input.getData 'container'\\n    output.sendDone\\n      html: container.innerHTML\\n\"},\"dom/RemoveClass\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\n# @runtime noflo-browser\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'Remove a class from an element'\\n  c.inPorts.add 'element',\\n    datatype: 'object'\\n  c.inPorts.add 'class',\\n    datatype: 'string'\\n\\n  c.process (input, output) ->\\n    return unless input.has 'element', 'class'\\n    [element, className] = input.getData 'element', 'class'\\n    element.classList.remove className\\n    output.done()\\n\"},\"dom/RemoveElement\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\n# @runtime noflo-browser\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'Remove an element from DOM'\\n  c.inPorts.add 'element',\\n    datatype: 'object'\\n  c.process (input, output) ->\\n    return unless input.hasData 'element'\\n    element = input.getData 'element'\\n    return unless element.parentNode\\n    element.parentNode.removeChild element\\n    output.done()\\n\"},\"dom/RequestAnimationFrame\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\n# @runtime noflo-browser\\n\\nrequestAnimationFrame =\\n  window.requestAnimationFrame       ||\\n  window.webkitRequestAnimationFrame ||\\n  window.mozRequestAnimationFrame    ||\\n  window.oRequestAnimationFrame      ||\\n  window.msRequestAnimationFrame     ||\\n  (callback, element) ->\\n    window.setTimeout( ->\\n      callback(+new Date())\\n    , 1000 / 60)\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'Sends bangs that correspond with screen refresh rate.'\\n  c.icon = 'film'\\n\\n  c.inPorts.add 'start',\\n    datatype: 'bang'\\n  c.inPorts.add 'stop',\\n    datatype: 'bang'\\n  c.outPorts.add 'out',\\n    datatype: 'bang'\\n\\n  c.running = {}\\n  cleanUp = (scope) ->\\n    return unless c.running[scope]\\n    c.running[scope].deactivate()\\n    delete c.running[scope]\\n  c.tearDown = (callback) ->\\n    for scope, running of c.running\\n      cleanUp scope\\n    c.running = {}\\n    callback()\\n  c.animate = (scope, output) ->\\n    # Stop when context has been stopped\\n    return unless c.running[scope]\\n    # Send bang\\n    output.send true\\n    # Request next frame\\n    requestAnimationFrame c.animate.bind c, scope, output\\n\\n  c.forwardBrackets = {}\\n  c.process (input, output, context) ->\\n    if input.hasData 'start'\\n      start = input.get 'start'\\n      return unless start.type is 'data'\\n      # Ensure previous was deactivated\\n      cleanUp start.scope\\n\\n      # Register scope\\n      c.running[start.scope] = context\\n\\n      # Request first frame\\n      requestAnimationFrame c.animate.bind c, start.scope, output\\n      return\\n\\n    if input.hasData 'stop'\\n      stop = input.get 'stop'\\n      return unless stop.type is 'data'\\n      # Deactivate this scope\\n      cleanUp stop.scope\\n      return\\n\"},\"dom/SetAttribute\":{\"language\":\"coffeescript\",\"source\":\"'use strict'\\n\\n# @runtime noflo-browser\\n\\nnoflo = require 'noflo'\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = \\\"Set the given attribute on the DOM element to the received\\n    value.\\\"\\n    \\n  # Define in ports.\\n  c.inPorts.add 'element',\\n    datatype: 'object'\\n    description: 'The element on which to set the attribute.'\\n\\n  c.inPorts.add 'attribute',\\n    datatype: 'string'\\n    description: 'The attribute which is set on the DOM element.'\\n\\n  c.inPorts.add 'value',\\n    datatype: 'string'\\n    description: 'Value of the attribute being set.'\\n  \\n  # Define out ports.\\n  c.outPorts.add 'element',\\n    datatype: 'object'\\n    description: 'The element that was updated.'\\n\\n  c.forwardBrackets =\\n    element: ['element']\\n    value: ['element']\\n\\n  c.process (input, output) ->\\n    return unless input.hasData 'element', 'attribute', 'value'\\n    [element, attribute, value] = input.getData 'element', 'attribute', 'value'\\n    if typeof value is 'object'\\n      if toString.call(value) is '[object Array]'\\n        value = value.join ' '\\n      else\\n        newVal = []\\n        newVal.push val for key, val of value\\n        value = newVal.join ' '\\n    if attribute is \\\"value\\\"\\n      element.value = value\\n    else\\n      element.setAttribute attribute, value\\n\\n    output.sendDone\\n      element: element\\n\"},\"dom/WriteHtml\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\n# @runtime noflo-browser\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'Write HTML inside an existing element'\\n  c.inPorts.add 'container',\\n    datatype: 'object'\\n  c.inPorts.add 'html',\\n    datatype: 'string'\\n  c.outPorts.add 'container',\\n    datatype: 'object'\\n  c.process (input, output) ->\\n    return unless input.hasData 'container', 'html'\\n    [container, html] = input.getData 'container', 'html'\\n    container.innerHTML = html\\n    output.sendDone\\n      container: container\\n\"},\"interaction/Focus\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\n# @runtime noflo-browser\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.icon = 'i-cursor'\\n  c.description = 'focus element'\\n  c.inPorts.add 'element',\\n    datatype: 'object'\\n    description: 'element to be focused'\\n    control: true\\n  c.inPorts.add 'trigger',\\n    datatype: 'bang'\\n    description: 'trigger focus'\\n  c.outPorts.add 'out',\\n    datatype: 'bang'\\n  c.process (input, output) ->\\n    return unless input.hasData 'element', 'trigger'\\n    element = input.getData 'element'\\n    input.getData 'trigger'\\n    window.setTimeout ->\\n      element.focus()\\n      output.sendDone\\n        out: true\\n    , 0\\n\"},\"interaction/ListenChange\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\n# @runtime noflo-browser\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'Listen to changes on an input element'\\n  c.icon = 'hourglass'\\n  c.inPorts.add 'element',\\n    datatype: 'object'\\n  c.outPorts.add 'value',\\n    datatype: 'object'\\n  c.elements = []\\n  c.tearDown = (callback) ->\\n    for element in c.elements\\n      element.el.removeEventListener 'change', element.listener, false\\n      element.ctx.deactivate()\\n    c.elements = []\\n    do callback\\n  c.forwardBrackets = {}\\n  c.process (input, output, context) ->\\n    return unless input.hasData 'element'\\n    data =\\n      el: input.getData 'element'\\n      listener: (event) ->\\n        event.preventDefault()\\n        event.stopPropagation()\\n        output.send\\n          value: event.target.value\\n      ctx: context\\n    data.el.addEventListener 'change', data.listener, false\\n    c.elements.push data\\n    return\\n\"},\"interaction/ListenDrag\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\n# @runtime noflo-browser\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description =  'Listen to drag events on a DOM element'\\n  c.icon = 'arrows'\\n  c.inPorts.add 'element',\\n    datatype: 'object'\\n  c.outPorts.add 'start',\\n    datatype: 'object'\\n  c.outPorts.add 'movey',\\n    datatype: 'number'\\n  c.outPorts.add 'movex',\\n    datatype: 'number'\\n  c.outPorts.add 'end',\\n    datatype: 'object'\\n  c.elements = []\\n  c.tearDown = (callback) ->\\n    for element in c.elements\\n      element.el.removeEventListener 'dragstart', element.dragstart, false\\n      element.el.removeEventListener 'drag', element.dragmove, false\\n      element.el.removeEventListener 'dragend', element.dragend, false\\n      element.ctx.deactivate()\\n    c.elements = []\\n    do callback\\n  c.forwardBrackets = {}\\n  c.process (input, output, context) ->\\n    return unless input.hasData 'element'\\n    data =\\n      el: input.getData 'element'\\n      dragstart: (event) ->\\n        event.stopPropagation()\\n        output.send\\n          start: event\\n      dragmove: (event) ->\\n        event.preventDefault()\\n        event.stopPropagation()\\n        output.send\\n          movex: event.clientX\\n          movey: event.clientY\\n      dragend: (event) ->\\n        event.preventDefault()\\n        event.stopPropagation()\\n        output.send\\n          end: event\\n      ctx: context\\n    data.el.addEventListener 'dragstart', data.dragstart, false\\n    data.el.addEventListener 'drag', data.dragmove, false\\n    data.el.addEventListener 'dragend', data.dragend, false\\n    c.elements.push data\\n    return\\n\"},\"interaction/ListenEvent\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\n# @runtime noflo-browser\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.icon = 'rss'\\n  c.description = 'Listen to custom events on a DOM element'\\n  c.inPorts.add 'element',\\n    datatype: 'object'\\n  c.inPorts.add 'event',\\n    datatype: 'string'\\n  c.outPorts.add 'out',\\n    datatype: 'object'\\n  c.elements = []\\n  c.tearDown = (callback) ->\\n    for element in c.elements\\n      element.el.removeEventListener element.eventName, element.onEvent, false\\n      element.ctx.deactivate()\\n    c.elements = []\\n    do callback\\n  c.forwardBrackets = {}\\n  c.process (input, output, context) ->\\n    return unless input.hasData 'element', 'event'\\n    el = input.getData 'element'\\n    eventName = input.getData 'event'\\n    data =\\n      el: el\\n      eventName: eventName\\n      onEvent: (event) ->\\n        event.preventDefault()\\n        event.stopPropagation()\\n        event.eventName = eventName\\n        output.send\\n          out: event\\n      ctx: context\\n    data.el.addEventListener eventName, data.onEvent, false\\n    c.elements.push data\\n    return\\n\"},\"interaction/ListenHash\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\n# @runtime noflo-browser\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'Listen for hash changes in browser\\\\'s URL bar'\\n  c.icon = 'slack'\\n  c.inPorts.add 'start',\\n    datatype: 'bang'\\n    description: 'Start listening for hash changes'\\n  c.inPorts.add 'stop',\\n    datatype: 'bang'\\n    description: 'Stop listening for hash changes'\\n  c.outPorts.add 'initial',\\n    datatype: 'string'\\n  c.outPorts.add 'change',\\n    datatype: 'string'\\n  c.current = null\\n  c.subscriber = null\\n  unsubscribe = ->\\n    return unless c.subscriber\\n    window.removeEventListener 'hashchange', c.subscriber.callback, false\\n    c.subscriber.ctx.deactivate()\\n    c.subscriber = null\\n  c.tearDown = (callback) ->\\n    c.current = null\\n    do unsubscribe\\n    do callback\\n  c.forwardBrackets = {}\\n  c.process (input, output, context) ->\\n    if input.hasData 'start'\\n      input.getData 'start'\\n      # Ensure previous subscription is ended\\n      do unsubscribe\\n      sendHash = (port) ->\\n        oldHash = c.current\\n        c.current = window.location.href.split('#')[1] or ''\\n        if oldHash\\n          output.send\\n            change: new noflo.IP 'openBracket', oldHash\\n        payload = {}\\n        payload[port] = c.current\\n        output.send payload\\n        if oldHash\\n          output.send\\n            change: new noflo.IP 'closeBracket', oldHash\\n      c.subscriber =\\n        callback: (event) ->\\n          sendHash 'change'\\n        ctx: context\\n      # Send initial\\n      sendHash 'initial'\\n      window.addEventListener 'hashchange', c.subscriber.callback, false\\n      return\\n    if input.hasData 'stop'\\n      input.getData 'stop'\\n      do unsubscribe\\n      output.done()\\n      return\\n\"},\"interaction/ListenKeyboard\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\n# @runtime noflo-browser\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'Listen for key presses on a given DOM element'\\n  c.icon = 'keyboard-o'\\n  c.inPorts.add 'element',\\n    datatype: 'object'\\n  c.inPorts.add 'stop',\\n    datatype: 'object'\\n  c.outPorts.add 'keypress',\\n    datatype: 'integer'\\n  c.elements = []\\n  unsubcribe = (element) ->\\n    element.el.removeEventListener 'keypress', element.listener, false\\n    element.ctx.deactivate()\\n  c.tearDown = (callback) ->\\n    unsubscribe element for element in c.elements\\n    c.elements = []\\n    do callback\\n  c.forwardBrackets = {}\\n  c.process (input, output, context) ->\\n    if input.hasData 'element'\\n      data =\\n        el: input.getData 'element'\\n        listener: (event) ->\\n          output.send\\n            keypress: event.keyCode\\n        ctx: context\\n      data.el.addEventListener 'keypress', data.listener, false\\n      c.elements.push data\\n      return\\n    if input.hasData 'stop'\\n      element = input.getData 'stop'\\n      ctx = null\\n      for el in c.elements\\n        continue unless el.el is element\\n        ctx = el\\n      return unless ctx\\n      unsubscribe ctx\\n      output.done()\\n\"},\"interaction/ListenKeyboardShortcuts\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\n# @runtime noflo-browser\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'Listen for keyboard shortcuts and route them'\\n  c.icon = 'keyboard-o'\\n  c.inPorts.add 'keys',\\n    datatype: 'array'\\n  c.inPorts.add 'ignoreinput',\\n    datatype: 'boolean'\\n    default: true\\n    control: true\\n  c.inPorts.add 'stop',\\n    datatype: 'bang'\\n  c.outPorts.add 'shortcut',\\n    datatype: 'bang'\\n    addressable: true\\n  c.outPorts.add 'missed',\\n    datatype: 'integer'\\n  c.subscriber = null\\n  unsubscribe = ->\\n    return unless c.subscriber\\n    document.removeEventListener 'keydown', c.subscriber.callback, false\\n    c.subscriber.ctx.deactivate()\\n    c.subscriber = null\\n  c.tearDown = (callback) ->\\n    do unsubscribe\\n    do callback\\n  c.forwardBrackets = {}\\n  c.process (input, output, context) ->\\n    if input.hasData 'keys'\\n      keys = input.getData 'keys'\\n\\n      # Ensure previous subscription is ended\\n      do unsubscribe\\n\\n      # Older version of this component used string input\\n      keys = keys.split ',' if typeof keys is 'string'\\n\\n      # We allow some common keyboard shortcuts to be passed as strings\\n      for key, index in keys\\n        switch key\\n          when '-' then keys[index] = 189\\n          when '=' then keys[index] = 187\\n          when '0' then keys[index] = 48\\n          when 'a' then keys[index] = 65\\n          when 'x' then keys[index] = 88\\n          when 'c' then keys[index] = 67\\n          when 'v' then keys[index] = 86\\n          when 'z' then keys[index] = 90\\n          when 'r' then keys[index] = 82\\n\\n      ignoreInput = if input.hasData('ignoreinput') then input.getData('ignoreinput') else true\\n\\n      c.subscriber =\\n        callback: (event) ->\\n          return unless event.ctrlKey or event.metaKey\\n          return if event.target.tagName is 'TEXTAREA' and ignoreInput\\n          return if event.target.tagName is 'INPUT' and ignoreInput\\n          return if String(event.target.contentEditable) is 'true' and ignoreInput\\n          route = keys.indexOf event.keyCode\\n          if route is -1\\n            output.send\\n              missed: event.keyCode\\n            return\\n          event.preventDefault()\\n          event.stopPropagation()\\n          output.send\\n            shortcut: new noflo.IP 'data', event.keyCode,\\n              index: route\\n        ctx: context\\n      document.addEventListener 'keydown', c.subscriber.callback, false\\n      return\\n    if input.hasData 'stop'\\n      input.getData 'stop'\\n      do unsubscribe\\n      output.done()\\n      return\\n\"},\"interaction/ListenMouse\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\n# @runtime noflo-browser\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.icon = 'mouse-pointer'\\n  c.description = 'Listen to mouse events on a DOM element'\\n  c.inPorts.add 'element',\\n    datatype: 'object'\\n  c.outPorts.add 'click',\\n    datatype: 'object'\\n  c.outPorts.add 'dblclick',\\n    datatype: 'object'\\n  c.elements = []\\n  c.tearDown = (callback) ->\\n    for element in c.elements\\n      element.el.removeEventListener 'click', element.click, false\\n      element.el.removeEventListener 'dblclick', element.dblclick, false\\n      element.ctx.deactivate()\\n    c.elements = []\\n    do callback\\n  c.forwardBrackets = {}\\n  c.process (input, output, context) ->\\n    return unless input.hasData 'element'\\n    data =\\n      el: input.getData 'element'\\n      click: (event) ->\\n        event.preventDefault()\\n        event.stopPropagation()\\n        output.send\\n          click: event\\n      dblclick: (event) ->\\n        event.preventDefault()\\n        event.stopPropagation()\\n        output.send\\n          dblclick: event\\n      ctx: context\\n    data.el.addEventListener 'click', data.click, false\\n    data.el.addEventListener 'dblclick', data.dblclick, false\\n    c.elements.push data\\n    return\\n\"},\"interaction/ListenPointer\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\n# @runtime noflo-browser\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'Listen to pointer events on a DOM element'\\n  c.icon = 'pencil-square-o'\\n  c.inPorts.add 'element',\\n    datatype: 'object'\\n  c.inPorts.add 'action',\\n    datatype: 'string'\\n    default: 'none'\\n    control: true\\n  events = [\\n    'down'\\n    'up'\\n    'cancel'\\n    'move'\\n    'over'\\n    'out'\\n    'enter'\\n    'leave'\\n  ]\\n  for event in events\\n    c.outPorts.add event,\\n      datatype: 'object'\\n      description: \\\"Sends event on pointer#{event}\\\"\\n  c.elements = []\\n  c.tearDown = (callback) ->\\n    for element in c.elements\\n      if element.el.removeAttribute\\n        element.el.removeAttribute 'touch-action'\\n      for event in events\\n        element.el.removeEventListener \\\"pointer#{event}\\\", element[\\\"pointer#{event}\\\"], false\\n      element.ctx.deactivate()\\n    c.elements = []\\n    do callback\\n  c.forwardBrackets = {}\\n  c.process (input, output, context) ->\\n    return unless input.hasData 'element'\\n    action = if input.hasData('action') then input.getData('action') else 'none'\\n    data =\\n      el: input.getData 'element'\\n      ctx: context\\n    data.el.setAttribute 'touch-action', action\\n    events.forEach (event) ->\\n      data[\\\"pointer#{event}\\\"] = (ev) ->\\n        ev.preventDefault()\\n        ev.stopPropagation()\\n        payload = {}\\n        payload[event] = ev.target.value\\n        output.send payload\\n      data.el.addEventListener \\\"pointer#{event}\\\", data[\\\"pointer#{event}\\\"], false\\n    c.elements.push data\\n    return\\n\"},\"interaction/ListenResize\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\n# @runtime noflo-browser\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'Listen to window resize events'\\n  c.icon = 'desktop'\\n  c.inPorts.add 'start',\\n    datatype: 'bang'\\n    description: 'Start listening for screen resizes'\\n  c.inPorts.add 'stop',\\n    datatype: 'bang'\\n    description: 'Stop listening for screen resizes'\\n  c.outPorts.add 'width',\\n    datatype: 'number'\\n  c.outPorts.add 'height',\\n    datatype: 'number'\\n  c.subscriber = null\\n  unsubscribe = ->\\n    return unless c.subscriber\\n    window.removeEventListener 'resize', c.subscriber.callback, false\\n    c.subscriber.ctx.deactivate()\\n    c.subscriber = null\\n  c.tearDown = (callback) ->\\n    do unsubscribe\\n    do callback\\n  c.forwardBrackets = {}\\n  c.process (input, output, context) ->\\n    if input.hasData 'start'\\n      input.getData 'start'\\n      # Ensure previous subscription is ended\\n      do unsubscribe\\n      c.subscriber =\\n        callback: (event) ->\\n          output.send\\n            width: window.innerWidth\\n            height: window.innerHeight\\n        ctx: context\\n      output.send\\n        width: window.innerWidth\\n        height: window.innerHeight\\n      window.addEventListener 'resize', c.subscriber.callback, false\\n      return\\n    if input.hasData 'stop'\\n      input.getData 'stop'\\n      do unsubscribe\\n      output.done()\\n      return\\n\"},\"interaction/ListenScroll\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\n# @runtime noflo-browser\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'Listen to scroll events on the browser window'\\n  c.icon = 'arrows-v'\\n  c.inPorts.add 'start',\\n    datatype: 'bang'\\n    description: 'Start listening for hash changes'\\n  c.inPorts.add 'stop',\\n    datatype: 'bang'\\n    description: 'Stop listening for hash changes'\\n  c.outPorts.add 'top',\\n    datatype: 'number'\\n  c.outPorts.add 'bottom',\\n    datatype: 'number'\\n  c.outPorts.add 'left',\\n    datatype: 'number'\\n  c.outPorts.add 'right',\\n    datatype: 'number'\\n  c.subscriber = null\\n  unsubscribe = ->\\n    return unless c.subscriber\\n    window.removeEventListener 'scroll', c.subscriber.callback, false\\n    c.subscriber.ctx.deactivate()\\n    c.subscriber = null\\n  c.tearDown = (callback) ->\\n    do unsubscribe\\n    do callback\\n  c.forwardBrackets = {}\\n  c.process (input, output, context) ->\\n    if input.hasData 'start'\\n      input.getData 'start'\\n      # Ensure previous subscription is ended\\n      do unsubscribe\\n      c.subscriber =\\n        callback: (event) ->\\n          top = window.scrollY\\n          left = window.scrollX\\n          output.send\\n            top: top\\n            bottom: top + window.innerHeight\\n            left: left\\n            right: left.window.innerWidth\\n        ctx: context\\n      window.addEventListener 'scroll', c.subscriber.callback, false\\n      return\\n    if input.hasData 'stop'\\n      input.getData 'stop'\\n      do unsubscribe\\n      output.done()\\n      return\\n\"},\"interaction/ListenSpeech\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\n# @runtime noflo-browser\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'Listen for user\\\\'s microphone and recognize phrases'\\n  c.icon = 'microphone'\\n  c.inPorts.add 'start',\\n    datatype: 'bang'\\n    description: 'Start listening for hash changes'\\n  c.inPorts.add 'stop',\\n    datatype: 'bang'\\n    description: 'Stop listening for hash changes'\\n  c.outPorts.add 'result',\\n    datatype: 'string'\\n  c.outPorts.add 'error',\\n    datatype: 'object'\\n  c.subscriber = null\\n  unsubscribe = ->\\n    return unless c.subscriber\\n    do c.subscriber.recognition.stop\\n    do c.subscriber.ctx.deactivate\\n    c.subscriber = null\\n  c.tearDown = (callback) ->\\n    do unsubscribe\\n    do callback\\n  c.forwardBrackets = {}\\n  c.process (input, output, context) ->\\n    if input.hasData 'start'\\n      input.getData 'start'\\n      # Ensure previous subscription is ended\\n      do unsubscribe\\n      unless window.webkitSpeechRecognition\\n        output.done new Error 'Speech recognition support not available'\\n        return\\n      c.subscriber =\\n        sent: []\\n        callback: (event) ->\\n          for result, idx in event.results\\n            continue unless result.isFinal\\n            if c.subscriber.sent.indexOf(idx) isnt -1\\n              continue\\n            output.send\\n              result: result[0].transcript\\n            c.subscriber.sent.push idx\\n        error: (err) ->\\n          output.send\\n            error: err\\n        ctx: context\\n      c.subscriber.recognition = new window.webkitSpeechRecognition\\n      c.subscriber.recognition.continuous = true\\n      c.subscriber.recognition.start()\\n      c.subscriber.recognition.onresult = c.subscriber.callback\\n      c.subscriber.recognition.onerror = c.subscriber.error\\n      return\\n    if input.hasData 'stop'\\n      input.getData 'stop'\\n      do unsubscribe\\n      output.done()\\n      return\\n\"},\"interaction/SetHash\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\n# @runtime noflo-browser\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'Set the hash in browser\\\\'s URL bar'\\n  c.icon = 'slack'\\n  c.inPorts.add 'hash',\\n    datatype: 'string'\\n  c.outPorts.add 'out',\\n    datatype: 'string'\\n  c.process (input, output) ->\\n    return unless input.hasData 'hash'\\n    hash = input.getData 'hash'\\n    window.location.hash = \\\"##{hash}\\\"\\n    output.sendDone\\n      out: hash\\n\"},\"interaction/ListenTouch\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\n# @runtime noflo-browser\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'Listen to touch events on a DOM element'\\n  c.icon = 'hand-o-up'\\n  c.inPorts.add 'element',\\n    datatype: 'object'\\n  c.outPorts.add 'start',\\n    datatype: 'object'\\n  c.outPorts.add 'movex',\\n    datatype: 'number'\\n  c.outPorts.add 'movey',\\n    datatype: 'number'\\n  c.outPorts.add 'end',\\n    datatype: 'object'\\n  c.elements = []\\n  c.tearDown = (callback) ->\\n    for element in c.elements\\n      element.el.removeEventListener 'touchstart', element.touchstart, false\\n      element.el.removeEventListener 'touchmove', element.touchmove, false\\n      element.el.removeEventListener 'touchend', element.touchend, false\\n      element.ctx.deactivate()\\n    c.elements = []\\n    do callback\\n  c.forwardBrackets = {}\\n  c.process (input, output, context) ->\\n    return unless input.hasData 'element'\\n    data =\\n      el: input.getData 'element'\\n      touchstart: (event) ->\\n        event.preventDefault()\\n        event.stopPropagation()\\n        return unless event.changedTouches\\n        return unless event.changedTouches.length\\n        for touch, idx in event.changedTouches\\n          output.send\\n            start: new noflo.IP 'data', event,\\n              touch: idx\\n      touchmove: (event) ->\\n        event.preventDefault()\\n        event.stopPropagation()\\n        return unless event.changedTouches\\n        return unless event.changedTouches.length\\n        for touch, idx in event.changedTouches\\n          output.send\\n            movex: new noflo.IP 'data', touch.pageX,\\n              touch: idx\\n            movey: new noflo.IP 'data', touch.pageY,\\n              touch: idx\\n      touchend: (event) ->\\n        event.preventDefault()\\n        event.stopPropagation()\\n        return unless event.changedTouches\\n        return unless event.changedTouches.length\\n        for touch, idx in event.changedTouches\\n          output.send\\n            end: new noflo.IP 'data', event,\\n              touch: idx\\n      ctx: context\\n    data.el.addEventListener 'touchstart', data.touchstart, false\\n    data.el.addEventListener 'touchmove', data.touchmove, false\\n    data.el.addEventListener 'touchend', data.touchend, false\\n    c.elements.push data\\n    return\\n\"},\"interaction/ReadCoordinates\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\n# @runtime noflo-browser\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'Read the coordinates from a DOM event'\\n  c.icon = 'map-marker'\\n  c.inPorts.add 'event',\\n    datatype: 'object'\\n  c.outPorts.add 'screen',\\n    datatype: 'object'\\n  c.outPorts.add 'client',\\n    datatype: 'object'\\n  c.outPorts.add 'page',\\n    datatype: 'object'\\n  c.forwardBrackets =\\n    event: ['screen', 'client', 'page']\\n  c.process (input, output) ->\\n    return unless input.hasData 'event'\\n    event = input.getData 'event'\\n    output.sendDone\\n      screen:\\n        x: event.screenX\\n        y: event.screenY\\n      client:\\n        x: event.clientX\\n        y: event.clientY\\n      page:\\n        x: event.pageX\\n        y: event.pageY\\n\"},\"interaction/ReadGamepad\":{\"language\":\"coffeescript\",\"source\":\"noflo = require 'noflo'\\n\\n# @runtime noflo-browser\\n\\nexports.getComponent = ->\\n  c = new noflo.Component\\n  c.description = 'Read the state of a gamepad'\\n  c.icon = 'gamepad'\\n  c.inPorts.add 'gamepad',\\n    datatype: 'integer'\\n  c.outPorts.add 'out',\\n    datatype: 'object'\\n  c.outPorts.add 'error',\\n    datatype: 'object'\\n  c.lastTimestamps = {}\\n  c.tearDown = (callback) ->\\n    c.lastTimestamps = {}\\n    do callback\\n  c.process (input, output) ->\\n    return unless input.hasData 'gamepad'\\n    gamepad = input.getData 'gamepad'\\n    unless navigator.webkitGetGamepads\\n      output.done new Error \\\"No WebKit Gamepad API available\\\"\\n      return\\n    gamepadState = navigator.webkitGetGamepads()[gamepad]\\n    unless gamepadState\\n      output.done new Error \\\"Gamepad '#{gamepad}' not available\\\"\\n    if c.lastTimestamps[gamepad] = gamepadState.timestamp\\n      # No change\\n      output.done()\\n      return\\n    c.lastTimestamps[gamepad] = gamepadState.timestamp\\n    output.sendDone\\n      out: gamepadState\\n\"}};\n\nexports.setSource = function (loader, packageId, name, source, language, callback) {\n  baseLoader.setSource(sources, loader, packageId, name, source, language, callback);\n};\nexports.getSource = function (loader, name, callback) {\n  baseLoader.getSource(sources, loader,  name, callback);\n}\n\nexports.register = function (loader, callback) {\n  loader.setLibraryIcon(\"dom\", \"html5\");\n  loader.registerComponent(\"browser-app\", \"DoSomething\", require(\"/home/travis/build/noflo/noflo-browser-app/components/DoSomething.js\"));\n  loader.registerComponent(\"browser-app\", \"main\", require(\"/home/travis/build/noflo/noflo-browser-app/graphs/main.json\"));\n  loader.registerComponent(null, \"Graph\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo/components/Graph.js\"));\n  loader.registerComponent(\"core\", \"Callback\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-core/components/Callback.coffee\"));\n  loader.registerComponent(\"core\", \"Copy\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-core/components/Copy.coffee\"));\n  loader.registerComponent(\"core\", \"DisconnectAfterPacket\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-core/components/DisconnectAfterPacket.coffee\"));\n  loader.registerComponent(\"core\", \"Drop\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-core/components/Drop.coffee\"));\n  loader.registerComponent(\"core\", \"Kick\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-core/components/Kick.coffee\"));\n  loader.registerComponent(\"core\", \"MakeFunction\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-core/components/MakeFunction.coffee\"));\n  loader.registerComponent(\"core\", \"Merge\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-core/components/Merge.coffee\"));\n  loader.registerComponent(\"core\", \"Output\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-core/components/Output.coffee\"));\n  loader.registerComponent(\"core\", \"ReadGlobal\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-core/components/ReadGlobal.coffee\"));\n  loader.registerComponent(\"core\", \"Repeat\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-core/components/Repeat.coffee\"));\n  loader.registerComponent(\"core\", \"RepeatAsync\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-core/components/RepeatAsync.coffee\"));\n  loader.registerComponent(\"core\", \"RepeatDelayed\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-core/components/RepeatDelayed.coffee\"));\n  loader.registerComponent(\"core\", \"RunInterval\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-core/components/RunInterval.coffee\"));\n  loader.registerComponent(\"core\", \"RunTimeout\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-core/components/RunTimeout.coffee\"));\n  loader.registerComponent(\"core\", \"SendNext\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-core/components/SendNext.coffee\"));\n  loader.registerComponent(\"core\", \"Split\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-core/components/Split.coffee\"));\n  loader.registerComponent(\"dom\", \"AddClass\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-dom/components/AddClass.coffee\"));\n  loader.registerComponent(\"dom\", \"AppendChild\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-dom/components/AppendChild.coffee\"));\n  loader.registerComponent(\"dom\", \"CreateElement\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-dom/components/CreateElement.coffee\"));\n  loader.registerComponent(\"dom\", \"CreateFragment\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-dom/components/CreateFragment.coffee\"));\n  loader.registerComponent(\"dom\", \"GetAttribute\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-dom/components/GetAttribute.coffee\"));\n  loader.registerComponent(\"dom\", \"GetElement\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-dom/components/GetElement.coffee\"));\n  loader.registerComponent(\"dom\", \"HasClass\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-dom/components/HasClass.coffee\"));\n  loader.registerComponent(\"dom\", \"Listen\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-dom/components/Listen.coffee\"));\n  loader.registerComponent(\"dom\", \"ReadHtml\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-dom/components/ReadHtml.coffee\"));\n  loader.registerComponent(\"dom\", \"RemoveClass\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-dom/components/RemoveClass.coffee\"));\n  loader.registerComponent(\"dom\", \"RemoveElement\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-dom/components/RemoveElement.coffee\"));\n  loader.registerComponent(\"dom\", \"RequestAnimationFrame\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-dom/components/RequestAnimationFrame.coffee\"));\n  loader.registerComponent(\"dom\", \"SetAttribute\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-dom/components/SetAttribute.coffee\"));\n  loader.registerComponent(\"dom\", \"WriteHtml\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-dom/components/WriteHtml.coffee\"));\n  loader.registerComponent(\"interaction\", \"Focus\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-interaction/components/Focus.coffee\"));\n  loader.registerComponent(\"interaction\", \"ListenChange\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-interaction/components/ListenChange.coffee\"));\n  loader.registerComponent(\"interaction\", \"ListenDrag\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-interaction/components/ListenDrag.coffee\"));\n  loader.registerComponent(\"interaction\", \"ListenEvent\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-interaction/components/ListenEvent.coffee\"));\n  loader.registerComponent(\"interaction\", \"ListenHash\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-interaction/components/ListenHash.coffee\"));\n  loader.registerComponent(\"interaction\", \"ListenKeyboard\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-interaction/components/ListenKeyboard.coffee\"));\n  loader.registerComponent(\"interaction\", \"ListenKeyboardShortcuts\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-interaction/components/ListenKeyboardShortcuts.coffee\"));\n  loader.registerComponent(\"interaction\", \"ListenMouse\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-interaction/components/ListenMouse.coffee\"));\n  loader.registerComponent(\"interaction\", \"ListenPointer\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-interaction/components/ListenPointer.coffee\"));\n  loader.registerComponent(\"interaction\", \"ListenResize\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-interaction/components/ListenResize.coffee\"));\n  loader.registerComponent(\"interaction\", \"ListenScroll\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-interaction/components/ListenScroll.coffee\"));\n  loader.registerComponent(\"interaction\", \"ListenSpeech\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-interaction/components/ListenSpeech.coffee\"));\n  loader.registerComponent(\"interaction\", \"ListenTouch\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-interaction/components/ListenTouch.coffee\"));\n  loader.registerComponent(\"interaction\", \"ReadCoordinates\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-interaction/components/ReadCoordinates.coffee\"));\n  loader.registerComponent(\"interaction\", \"ReadGamepad\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-interaction/components/ReadGamepad.coffee\"));\n  loader.registerComponent(\"interaction\", \"SetHash\", require(\"/home/travis/build/noflo/noflo-browser-app/node_modules/noflo-interaction/components/SetHash.coffee\"));\n  var loaders = [];\n  \n  baseLoader.registerCustomLoaders(loader, loaders, callback);\n};\n  ","/* eslint-disable */\nexports.registerCustomLoaders = function (loader, loaders, callback) {\n  if (!loaders.length) {\n    return callback();\n  }\n  var customLoader = loaders.shift();\n  loader.registerLoader(customLoader, function (err) {\n    if (err) {\n      return callback(err);\n    }\n    exports.registerCustomLoaders(loader, loaders, callback);\n  });\n};\n\n\nexports.setSource = function (sources, loader, packageId, name, source, language, callback) {\n  var implementation;\n  var originalSource = source;\n  // Transpiling\n  if (language === 'coffeescript') {\n    if (typeof window !== 'undefined' && !window.CoffeeScript) {\n      return callback(new Error('CoffeeScript compiler needed for ' + packageId + '/' + name + ' not available'));\n    }\n    try {\n      source = window.CoffeeScript.compile(source, {\n        bare: true\n      });\n    } catch (e) {\n      return callback(e);\n    }\n  }\n  if (language === 'es6' || language === 'es2015') {\n    if (typeof window !== 'undefined' && window.babel) {\n      try {\n        source = window.babel.transform(source).code;\n      } catch (e) {\n        return callback(e);\n      }\n    }\n  }\n  // Eval the contents to get a runnable component\n  try {\n    var withExports = '(function () { var exports = {}; ' + source + '; return exports; })();';\n    implementation = eval(withExports);\n  } catch (e) {\n    return callback(e);\n  }\n\n  if (typeof implementation !== 'function' && (!implementation.getComponent || typeof implementation.getComponent !== 'function')) {\n    return callback(new Error('Provided source for ' + packageId + '/' + name + ' failed to create a runnable component'));\n  }\n\n  var fullName = packageId + '/' + name;\n  sources[fullName] = {\n    language: language,\n    source: originalSource\n  };\n\n  loader.registerComponent(packageId, name, implementation, callback);\n};\n\nexports.getSource = function (sources, loader, name, callback) {\n  if (!loader.components[name]) {\n    return callback(new Error('Component ' + name + ' not available'));\n  }\n  var component = loader.components[name];\n  if (name.indexOf('/') !== -1) {\n    var nameParts = name.split('/');\n    var componentData = {\n      name: nameParts[1],\n      library: nameParts[0]\n    };\n  } else {\n    var componentData = {\n      name: name,\n      library: ''\n    };\n  }\n  if (loader.isGraph(component)) {\n    componentData.code = JSON.stringify(component, null, 2);\n    componentData.language = 'json';\n    return callback(null, componentData);\n  } else if (sources[name]) {\n    componentData.code = sources[name].source;\n    componentData.language = sources[name].language;\n    return callback(null, componentData);\n  } else if (typeof component === 'function') {\n    componentData.code = component.toString();\n    componentData.language = 'javascript';\n    return callback(null, componentData);\n  } else if (typeof component.getComponent === 'function') {\n    componentData.code = component.getComponent.toString();\n    componentData.language = 'javascript';\n    return callback(null, componentData);\n  }\n  return callback(new Error('Unable to get sources for ' + name));\n};\n","const noflo = require('noflo');\n\nexports.getComponent = () => {\n  const c = new noflo.Component();\n  // Define a meaningful icon for component from http://fontawesome.io/icons/\n  c.icon = 'cog';\n  // Provide a description on component usage\n  c.description = 'do X';\n  // Add input ports\n  c.inPorts.add('in', {\n    datatype: 'string',\n  });\n  // Add output ports\n  c.outPorts.add('out', {\n    datatype: 'string',\n  });\n  // What to do when port receives a packet\n  c.process((input, output) => {\n    // Check that input has received data packet\n    if (!input.hasData('in')) {\n      return;\n    }\n    // Read the contents of the data packet\n    const data = input.getData('in');\n    // Send the contents to output port\n    output.send({\n      out: data,\n    });\n    // Finish processing\n    output.done();\n  });\n  return c;\n};\n","//     NoFlo - Flow-Based Programming for JavaScript\n//     (c) 2013-2017 Flowhub UG\n//     (c) 2011-2012 Henri Bergius, Nemein\n//     NoFlo may be freely distributed under the MIT license\n\n// The Graph component is used to wrap NoFlo Networks into components inside\n// another network.\nvar Graph, noflo;\n\nnoflo = require(\"../lib/NoFlo\");\n\nGraph = class Graph extends noflo.Component {\n  constructor(metadata) {\n    super();\n    this.metadata = metadata;\n    this.network = null;\n    this.ready = true;\n    this.started = false;\n    this.starting = false;\n    this.baseDir = null;\n    this.loader = null;\n    this.load = 0;\n    this.inPorts = new noflo.InPorts({\n      graph: {\n        datatype: 'all',\n        description: 'NoFlo graph definition to be used with the subgraph component',\n        required: true\n      }\n    });\n    this.outPorts = new noflo.OutPorts;\n    this.inPorts.graph.on('ip', (packet) => {\n      if (packet.type !== 'data') {\n        return;\n      }\n      return this.setGraph(packet.data, (err) => {\n        if (err) {\n          // TODO: Port this part to Process API and use output.error method instead\n          return this.error(err);\n        }\n      });\n    });\n  }\n\n  setGraph(graph, callback) {\n    this.ready = false;\n    if (typeof graph === 'object') {\n      if (typeof graph.addNode === 'function') {\n        // Existing Graph object\n        this.createNetwork(graph, callback);\n        return;\n      }\n      // JSON definition of a graph\n      noflo.graph.loadJSON(graph, (err, instance) => {\n        if (err) {\n          return callback(err);\n        }\n        instance.baseDir = this.baseDir;\n        return this.createNetwork(instance, callback);\n      });\n      return;\n    }\n    if (graph.substr(0, 1) !== \"/\" && graph.substr(1, 1) !== \":\" && process && process.cwd) {\n      graph = `${process.cwd()}/${graph}`;\n    }\n    return noflo.graph.loadFile(graph, (err, instance) => {\n      if (err) {\n        return callback(err);\n      }\n      instance.baseDir = this.baseDir;\n      return this.createNetwork(instance, callback);\n    });\n  }\n\n  createNetwork(graph, callback) {\n    this.description = graph.properties.description || '';\n    this.icon = graph.properties.icon || this.icon;\n    if (!graph.name) {\n      graph.name = this.nodeId;\n    }\n    graph.componentLoader = this.loader;\n    return noflo.createNetwork(graph, (err, network1) => {\n      this.network = network1;\n      if (err) {\n        return callback(err);\n      }\n      this.emit('network', this.network);\n      // Subscribe to network lifecycle\n      this.subscribeNetwork(this.network);\n      // Wire the network up\n      return this.network.connect((err) => {\n        var name, node, ref;\n        if (err) {\n          return callback(err);\n        }\n        ref = this.network.processes;\n        for (name in ref) {\n          node = ref[name];\n          // Map exported ports to local component\n          this.findEdgePorts(name, node);\n        }\n        // Finally set ourselves as \"ready\"\n        this.setToReady();\n        return callback();\n      });\n    }, true);\n  }\n\n  subscribeNetwork(network) {\n    var contexts;\n    contexts = [];\n    this.network.on('start', () => {\n      var ctx;\n      ctx = {};\n      contexts.push(ctx);\n      return this.activate(ctx);\n    });\n    return this.network.on('end', () => {\n      var ctx;\n      ctx = contexts.pop();\n      if (!ctx) {\n        return;\n      }\n      return this.deactivate(ctx);\n    });\n  }\n\n  isExportedInport(port, nodeName, portName) {\n    var priv, pub, ref;\n    ref = this.network.graph.inports;\n    // First we check disambiguated exported ports\n    for (pub in ref) {\n      priv = ref[pub];\n      if (!(priv.process === nodeName && priv.port === portName)) {\n        continue;\n      }\n      return pub;\n    }\n    // Component has exported ports and this isn't one of them\n    return false;\n  }\n\n  isExportedOutport(port, nodeName, portName) {\n    var priv, pub, ref;\n    ref = this.network.graph.outports;\n    // First we check disambiguated exported ports\n    for (pub in ref) {\n      priv = ref[pub];\n      if (!(priv.process === nodeName && priv.port === portName)) {\n        continue;\n      }\n      return pub;\n    }\n    // Component has exported ports and this isn't one of them\n    return false;\n  }\n\n  setToReady() {\n    if (typeof process !== 'undefined' && process.execPath && process.execPath.indexOf('node') !== -1) {\n      return process.nextTick(() => {\n        this.ready = true;\n        return this.emit('ready');\n      });\n    } else {\n      return setTimeout(() => {\n        this.ready = true;\n        return this.emit('ready');\n      }, 0);\n    }\n  }\n\n  findEdgePorts(name, process) {\n    var inPorts, outPorts, port, portName, targetPortName;\n    inPorts = process.component.inPorts.ports;\n    outPorts = process.component.outPorts.ports;\n    for (portName in inPorts) {\n      port = inPorts[portName];\n      targetPortName = this.isExportedInport(port, name, portName);\n      if (targetPortName === false) {\n        continue;\n      }\n      this.inPorts.add(targetPortName, port);\n      this.inPorts[targetPortName].on('connect', () => {\n        // Start the network implicitly if we're starting to get data\n        if (this.starting) {\n          return;\n        }\n        if (this.network.isStarted()) {\n          return;\n        }\n        if (this.network.startupDate) {\n          // Network was started, but did finish. Re-start simply\n          this.network.setStarted(true);\n          return;\n        }\n        // Network was never started, start properly\n        return this.setUp(function() {});\n      });\n    }\n    for (portName in outPorts) {\n      port = outPorts[portName];\n      targetPortName = this.isExportedOutport(port, name, portName);\n      if (targetPortName === false) {\n        continue;\n      }\n      this.outPorts.add(targetPortName, port);\n    }\n    return true;\n  }\n\n  isReady() {\n    return this.ready;\n  }\n\n  isSubgraph() {\n    return true;\n  }\n\n  isLegacy() {\n    return false;\n  }\n\n  setUp(callback) {\n    this.starting = true;\n    if (!this.isReady()) {\n      this.once('ready', () => {\n        return this.setUp(callback);\n      });\n      return;\n    }\n    if (!this.network) {\n      return callback(null);\n    }\n    return this.network.start((err) => {\n      if (err) {\n        return callback(err);\n      }\n      this.starting = false;\n      return callback();\n    });\n  }\n\n  tearDown(callback) {\n    this.starting = false;\n    if (!this.network) {\n      return callback(null);\n    }\n    return this.network.stop(function(err) {\n      if (err) {\n        return callback(err);\n      }\n      return callback();\n    });\n  }\n\n};\n\nexports.getComponent = function(metadata) {\n  return new Graph(metadata);\n};\n","noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'This component calls a given callback function for each\n  IP it receives.  The Callback component is typically used to connect\n  NoFlo with external Node.js code.'\n  c.icon = 'sign-out'\n\n  c.inPorts.add 'in',\n    description: 'Object passed as argument of the callback'\n    datatype: 'all'\n  c.inPorts.add 'callback',\n    description: 'Callback to invoke'\n    datatype: 'function'\n    control: true\n    required: true\n  c.outPorts.add 'error',\n    datatype: 'object'\n\n  c.process (input, output) ->\n    return unless input.hasData 'callback', 'in'\n    [callback, data] = input.getData 'callback', 'in'\n    unless typeof callback is 'function'\n      output.done new Error 'The provided callback must be a function'\n      return\n\n    # Call the callback when receiving data\n    try\n      callback data\n    catch e\n      return output.done e\n    output.done()\n","noflo = require 'noflo'\nowl = require 'owl-deepcopy'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'deep (i.e. recursively) copy an object'\n  c.icon = 'copy'\n\n  c.inPorts.add 'in',\n    datatype: 'all'\n    description: 'Packet to be copied'\n  c.outPorts.add 'out',\n    datatype: 'all'\n    description: 'Copy of the original packet'\n\n  c.process (input, output) ->\n    return unless input.hasData 'in'\n    data = input.getData 'in'\n\n    copy = owl.deepCopy data\n    output.sendDone\n      out: copy\n    return\n","/* This file is part of OWL JavaScript Utilities.\r\n\r\nOWL JavaScript Utilities is free software: you can redistribute it and/or \r\nmodify it under the terms of the GNU Lesser General Public License\r\nas published by the Free Software Foundation, either version 3 of\r\nthe License, or (at your option) any later version.\r\n\r\nOWL JavaScript Utilities is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU Lesser General Public License for more details.\r\n\r\nYou should have received a copy of the GNU Lesser General Public \r\nLicense along with OWL JavaScript Utilities.  If not, see \r\n<http://www.gnu.org/licenses/>.\r\n*/\r\n\r\n/*\r\n  Hey, so, this deep copy is still the only attempt at a truly\r\n  comprehensive approach, even years later. Kudos to the original\r\n  author, one 'Oran Looney' (or, at least, that's what his blog\r\n  sez'.\r\n\r\n  All I did was lift it out of the closure wrapper to make it\r\n  CommonJS requireable.\r\n*/\r\n\r\n\r\nfunction Clone() {}\r\n\r\n// clone objects, skip other types.\r\nfunction clone(target) {\r\n  if ( typeof target == 'object' ) {\r\n    Clone.prototype = target;\r\n    return new Clone();\r\n  } else {\r\n    return target;\r\n  }\r\n}\r\n\r\n\r\n// Shallow Copy \r\nfunction copy(target) {\r\n  if (typeof target !== 'object' ) {\r\n    return target;  // non-object have value sematics, so target is already a copy.\r\n  } else {\r\n    var value = target.valueOf();\r\n    if (target != value) { \r\n      // the object is a standard object wrapper for a native type, say String.\r\n      // we can make a copy by instantiating a new object around the value.\r\n      return new target.constructor(value);\r\n    } else {\r\n      // ok, we have a normal object. If possible, we'll clone the original's prototype \r\n      // (not the original) to get an empty object with the same prototype chain as\r\n      // the original.  If just copy the instance properties.  Otherwise, we have to \r\n      // copy the whole thing, property-by-property.\r\n      if ( target instanceof target.constructor && target.constructor !== Object ) { \r\n\tvar c = clone(target.constructor.prototype);\r\n\t\r\n\t// give the copy all the instance properties of target.  It has the same\r\n\t// prototype as target, so inherited properties are already there.\r\n\tfor ( var property in target) { \r\n\t  if (target.hasOwnProperty(property)) {\r\n\t    c[property] = target[property];\r\n\t  } \r\n\t}\r\n      } else {\r\n\tvar c = {};\r\n\tfor ( var property in target ) c[property] = target[property];\r\n      }\r\n      \r\n      return c;\r\n    }\r\n  }\r\n}\r\n\r\n// Deep Copy\r\nvar deepCopiers = [];\r\n\r\nfunction DeepCopier(config) {\r\n  for ( var key in config ) this[key] = config[key];\r\n}\r\nDeepCopier.prototype = {\r\n  constructor: DeepCopier,\r\n  \r\n  // determines if this DeepCopier can handle the given object.\r\n  canCopy: function(source) { return false; },\r\n  \r\n  // starts the deep copying process by creating the copy object.  You\r\n  // can initialize any properties you want, but you can't call recursively\r\n  // into the DeeopCopyAlgorithm.\r\n  create: function(source) { },\r\n  \r\n  // Completes the deep copy of the source object by populating any properties\r\n  // that need to be recursively deep copied.  You can do this by using the\r\n  // provided deepCopyAlgorithm instance's deepCopy() method.  This will handle\r\n  // cyclic references for objects already deepCopied, including the source object\r\n  // itself.  The \"result\" passed in is the object returned from create().\r\n  populate: function(deepCopyAlgorithm, source, result) {}\r\n};\r\n\r\nfunction DeepCopyAlgorithm() {\r\n  // copiedObjects keeps track of objects already copied by this\r\n  // deepCopy operation, so we can correctly handle cyclic references.\r\n  this.copiedObjects = [];\r\n  var thisPass = this;\r\n  this.recursiveDeepCopy = function(source) {\r\n    return thisPass.deepCopy(source);\r\n  }\r\n  this.depth = 0;\r\n}\r\nDeepCopyAlgorithm.prototype = {\r\n  constructor: DeepCopyAlgorithm,\r\n  \r\n  maxDepth: 256,\r\n  \r\n  // add an object to the cache.  No attempt is made to filter duplicates;\r\n  // we always check getCachedResult() before calling it.\r\n  cacheResult: function(source, result) {\r\n    this.copiedObjects.push([source, result]);\r\n  },\r\n  \r\n  // Returns the cached copy of a given object, or undefined if it's an\r\n  // object we haven't seen before.\r\n  getCachedResult: function(source) {\r\n    var copiedObjects = this.copiedObjects;\r\n    var length = copiedObjects.length;\r\n    for ( var i=0; i<length; i++ ) {\r\n      if ( copiedObjects[i][0] === source ) {\r\n\treturn copiedObjects[i][1];\r\n      }\r\n    }\r\n    return undefined;\r\n  },\r\n  \r\n  // deepCopy handles the simple cases itself: non-objects and object's we've seen before.\r\n  // For complex cases, it first identifies an appropriate DeepCopier, then calls\r\n  // applyDeepCopier() to delegate the details of copying the object to that DeepCopier.\r\n  deepCopy: function(source) {\r\n    // null is a special case: it's the only value of type 'object' without properties.\r\n    if ( source === null ) return null;\r\n    \r\n    // All non-objects use value semantics and don't need explict copying.\r\n    if ( typeof source !== 'object' ) return source;\r\n    \r\n    var cachedResult = this.getCachedResult(source);\r\n    \r\n    // we've already seen this object during this deep copy operation\r\n    // so can immediately return the result.  This preserves the cyclic\r\n    // reference structure and protects us from infinite recursion.\r\n    if ( cachedResult ) return cachedResult;\r\n    \r\n    // objects may need special handling depending on their class.  There is\r\n    // a class of handlers call \"DeepCopiers\"  that know how to copy certain\r\n    // objects.  There is also a final, generic deep copier that can handle any object.\r\n    for ( var i=0; i<deepCopiers.length; i++ ) {\r\n      var deepCopier = deepCopiers[i];\r\n      if ( deepCopier.canCopy(source) ) {\r\n\treturn this.applyDeepCopier(deepCopier, source);\r\n      }\r\n    }\r\n    // the generic copier can handle anything, so we should never reach this line.\r\n    throw new Error(\"no DeepCopier is able to copy \" + source);\r\n  },\r\n  \r\n  // once we've identified which DeepCopier to use, we need to call it in a very\r\n  // particular order: create, cache, populate.  This is the key to detecting cycles.\r\n  // We also keep track of recursion depth when calling the potentially recursive\r\n  // populate(): this is a fail-fast to prevent an infinite loop from consuming all\r\n  // available memory and crashing or slowing down the browser.\r\n  applyDeepCopier: function(deepCopier, source) {\r\n    // Start by creating a stub object that represents the copy.\r\n    var result = deepCopier.create(source);\r\n    \r\n    // we now know the deep copy of source should always be result, so if we encounter\r\n    // source again during this deep copy we can immediately use result instead of\r\n    // descending into it recursively.  \r\n    this.cacheResult(source, result);\r\n    \r\n    // only DeepCopier::populate() can recursively deep copy.  So, to keep track\r\n    // of recursion depth, we increment this shared counter before calling it,\r\n    // and decrement it afterwards.\r\n    this.depth++;\r\n    if ( this.depth > this.maxDepth ) {\r\n      throw new Error(\"Exceeded max recursion depth in deep copy.\");\r\n    }\r\n    \r\n    // It's now safe to let the deepCopier recursively deep copy its properties.\r\n    deepCopier.populate(this.recursiveDeepCopy, source, result);\r\n    \r\n    this.depth--;\r\n    \r\n    return result;\r\n  }\r\n};\r\n\r\n// entry point for deep copy.\r\n//   source is the object to be deep copied.\r\n//   maxDepth is an optional recursion limit. Defaults to 256.\r\nfunction deepCopy(source, maxDepth) {\r\n  var deepCopyAlgorithm = new DeepCopyAlgorithm();\r\n  if ( maxDepth ) deepCopyAlgorithm.maxDepth = maxDepth;\r\n  return deepCopyAlgorithm.deepCopy(source);\r\n}\r\n\r\n// publicly expose the DeepCopier class.\r\ndeepCopy.DeepCopier = DeepCopier;\r\n\r\n// publicly expose the list of deepCopiers.\r\ndeepCopy.deepCopiers = deepCopiers;\r\n\r\n// make deepCopy() extensible by allowing others to \r\n// register their own custom DeepCopiers.\r\ndeepCopy.register = function(deepCopier) {\r\n  if ( !(deepCopier instanceof DeepCopier) ) {\r\n    deepCopier = new DeepCopier(deepCopier);\r\n  }\r\n  deepCopiers.unshift(deepCopier);\r\n}\r\n\r\n// Generic Object copier\r\n// the ultimate fallback DeepCopier, which tries to handle the generic case.  This\r\n// should work for base Objects and many user-defined classes.\r\ndeepCopy.register({\r\n  canCopy: function(source) { return true; },\r\n\r\n  create: function(source) {\r\n    if ( source.hasOwnProperty && source instanceof source.constructor ) {\r\n      return clone(source.constructor.prototype);\r\n    } else {\r\n      return {};\r\n    }\r\n  },\r\n\r\n  populate: function(deepCopy, source, result) {\r\n    for ( var key in source ) {\r\n      if ( source.hasOwnProperty && source.hasOwnProperty(key) ) {\r\n    result[key] = deepCopy(source[key]);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n});\r\n\r\n// Array copier\r\ndeepCopy.register({\r\n  canCopy: function(source) {\r\n    return ( source instanceof Array );\r\n  },\r\n  \r\n  create: function(source) {\r\n    return new source.constructor();\r\n  },\r\n  \r\n  populate: function(deepCopy, source, result) {\r\n    for ( var i=0; i<source.length; i++) {\r\n      result.push( deepCopy(source[i]) );\r\n    }\r\n    return result;\r\n  }\r\n});\r\n\r\n// Date copier\r\ndeepCopy.register({\r\n  canCopy: function(source) {\r\n    return ( source instanceof Date );\r\n  },\r\n  \r\n  create: function(source) {\r\n    return new Date(source);\r\n  }\r\n});\r\n\r\n// EventEmitter copier\r\n// EventEmitters have a property which is an object, but doesn't \r\n// have an object prototype, so instanceof doesn't work on them\r\nvar EventEmitter = require('events').EventEmitter;\r\ndeepCopy.register({\r\n  canCopy: function(source) { return source instanceof EventEmitter; },\r\n  \r\n  create: function(source) {\r\n    if ( source.hasOwnProperty && source instanceof source.constructor ) {\r\n      return clone(source.constructor.prototype);\r\n    } else {\r\n      return {};\r\n    }\r\n  },\r\n  \r\n  populate: function(deepCopy, source, result) {\r\n    for ( var key in source ) {\r\n      if ( !source.hasOwnProperty || source.hasOwnProperty(key) ) {\r\n        result[key] = deepCopy(source[key]);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n});\r\n\r\n// HTML DOM Node\r\n\r\n// utility function to detect Nodes.  In particular, we're looking\r\n// for the cloneNode method.  The global document is also defined to\r\n// be a Node, but is a special case in many ways.\r\nfunction isNode(source) {\r\n  return false; // LJF change here -- I don't care that I am breaking\r\n  // this for the browser. at all.\r\n  if ( window.Node ) {\r\n    return source instanceof Node;\r\n  } else {\r\n    // the document is a special Node and doesn't have many of\r\n    // the common properties so we use an identity check instead.\r\n    if ( source === document ) return true;\r\n    return (\r\n      typeof source.nodeType === 'number' &&\r\n\tsource.attributes &&\r\n\tsource.childNodes &&\r\n\tsource.cloneNode\r\n    );\r\n  }\r\n}\r\n\r\n// Node copier\r\ndeepCopy.register({\r\n  canCopy: function(source) { return isNode(source); },\r\n  \r\n  create: function(source) {\r\n    // there can only be one (document).\r\n    if ( source === document ) return document;\r\n    \r\n    // start with a shallow copy.  We'll handle the deep copy of\r\n    // its children ourselves.\r\n    return source.cloneNode(false);\r\n  },\r\n  \r\n  populate: function(deepCopy, source, result) {\r\n    // we're not copying the global document, so don't have to populate it either.\r\n    if ( source === document ) return document;\r\n    \r\n    // if this Node has children, deep copy them one-by-one.\r\n    if ( source.childNodes && source.childNodes.length ) {\r\n      for ( var i=0; i<source.childNodes.length; i++ ) {\r\n\tvar childCopy = deepCopy(source.childNodes[i]);\r\n\tresult.appendChild(childCopy);\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexports.DeepCopyAlgorithm = DeepCopyAlgorithm;\r\nexports.copy = copy;\r\nexports.clone = clone;\r\nexports.deepCopy = deepCopy;\r\n\r\n","noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Makes each data packet a stream of its own'\n  c.icon = 'pause'\n  c.forwardBrackets = {}\n  c.autoOrdering = false\n\n  c.inPorts.add 'in',\n    datatype: 'all'\n    description: 'Packet to be forward with disconnection'\n  c.outPorts.add 'out',\n    datatype: 'all'\n\n  brackets = {}\n  c.tearDown = (callback) ->\n    brackets = {}\n  c.process (input, output) ->\n    # Force auto-ordering to be off for this one\n    c.autoOrdering = false\n\n    data = input.get 'in'\n    brackets[input.scope] = [] unless brackets[input.scope]\n    if data.type is 'openBracket'\n      brackets[input.scope].push data.data\n      output.done()\n      return\n    if data.type is 'closeBracket'\n      brackets[input.scope].pop()\n      output.done()\n      return\n\n    return unless data.type is 'data'\n\n    for bracket in brackets[input.scope]\n      output.sendIP 'out', new noflo.IP 'openBracket', bracket\n    output.sendIP 'out', data\n    closes = brackets[input.scope].slice 0\n    closes.reverse()\n    for bracket in closes\n      output.sendIP 'out', new noflo.IP 'closeBracket', bracket\n\n    output.done()\n","noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'This component drops every packet it receives with no\n  action'\n  c.icon = 'trash-o'\n\n  c.inPorts.add 'in',\n    datatypes: 'all'\n    description: 'Packet to be dropped'\n\n  c.process (input, output) ->\n    data = input.get 'in'\n    data.drop()\n    output.done()\n    return\n","noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'This component generates a single packet and sends it to\n  the output port. Mostly usable for debugging, but can also be useful\n  for starting up networks.'\n  c.icon = 'share'\n\n  c.inPorts.add 'in',\n    datatype: 'bang'\n    description: 'Signal to send the data packet'\n  c.inPorts.add 'data',\n    datatype: 'all'\n    description: 'Packet to be sent'\n    control: true\n    default: null\n  c.outPorts.add 'out',\n    datatype: 'all'\n\n  c.process (input, output) ->\n    return unless input.hasStream 'in'\n    return if input.attached('data').length and not input.hasData 'data'\n    bang = input.getData 'in'\n    data = input.getData 'data'\n    output.send\n      out: data\n    output.done()\n","noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Evaluates a function each time data hits the \"in\" port\n  and sends the return value to \"out\". Within the function \"x\" will\n  be the variable from the in port. For example, to make a ^2 function\n  input \"return x*x;\" to the function port.'\n  c.icon = 'code'\n\n  c.inPorts.add 'in',\n    datatype: 'all'\n    description: 'Packet to be processed'\n  c.inPorts.add 'function',\n    datatype: 'string'\n    description: 'Function to evaluate'\n    control: true\n  c.outPorts.add 'out',\n    datatype: 'all'\n  c.outPorts.add 'function',\n    datatype: 'function'\n  c.outPorts.add 'error',\n    datatype: 'object'\n\n  prepareFunction = (func, callback) ->\n    if typeof func is 'function'\n      callback null, func\n      return\n    try\n      newFunc = Function 'x', func\n    catch e\n      callback e\n      return\n    callback null, newFunc\n\n  c.process (input, output) ->\n    return if input.attached('in').length and not input.hasData 'in'\n    if input.hasData 'function', 'in'\n      # Both function and input data\n      prepareFunction input.getData('function'), (err, func) ->\n        if err\n          output.done e\n          return\n        data = input.getData 'in'\n        try\n          result = func data\n        catch e\n          output.done e\n          return\n        output.sendDone\n          function: func\n          out: result\n        return\n      return\n    return unless input.hasData 'function'\n    prepareFunction input.getData('function'), (err, func) ->\n      if err\n        output.done e\n        return\n      output.sendDone\n        function: func\n      return\n    return\n","noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'This component receives data on multiple input ports and\n    sends the same data out to the connected output port'\n  c.icon = 'compress'\n\n  c.inPorts.add 'in',\n    datatype: 'all'\n    description: 'Packet to be forwarded'\n  c.outPorts.add 'out',\n    datatype: 'all'\n\n  c.process (input, output) ->\n    data = input.get 'in'\n    output.sendDone\n      out: data\n","noflo = require 'noflo'\n\nunless noflo.isBrowser()\n  util = require 'util'\nelse\n  util =\n    inspect: (data) -> data\n\nlog = (options, data) ->\n  if options?\n    console.log util.inspect data,\n      options.showHidden, options.depth, options.colors\n  else\n    console.log data\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Sends the data items to console.log'\n  c.icon = 'bug'\n\n  c.inPorts.add 'in',\n    datatype: 'all'\n    description: 'Packet to be printed through console.log'\n  c.inPorts.add 'options',\n    datatype: 'object'\n    description: 'Options to be passed to console.log'\n    control: true\n  c.outPorts.add 'out',\n    datatype: 'all'\n\n  c.process (input, output) ->\n    return unless input.hasData 'in'\n    return if input.attached('options').length and not input.hasData 'options'\n\n    options = null\n    if input.has 'options'\n      options = input.getData 'options'\n\n    data = input.getData 'in'\n    log options, data\n    output.sendDone\n      out: data\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Returns the value of a global variable.'\n  c.icon = 'usd'\n\n  # inPorts\n  c.inPorts.add 'name',\n    description: 'The name of the global variable.'\n\n  # outPorts\n  c.outPorts.add 'value',\n    description: 'The value of the variable.'\n\n  c.outPorts.add 'error',\n    description: 'Any errors that occured reading the variables value.'\n\n  c.forwardBrackets =\n    name: ['value', 'error']\n\n  c.process (input, output) ->\n    return unless input.hasData 'name'\n    data = input.getData 'name'\n\n    value = unless noflo.isBrowser() then global[data] else window[data]\n\n    if typeof value is 'undefined'\n      err = new Error \"\\\"#{data}\\\" is undefined on the global object.\"\n      output.sendDone err\n      return\n    output.sendDone\n      value: value\n","noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Forwards packets and metadata in the same way\n  it receives them'\n  c.icon = 'forward'\n  c.inPorts.add 'in',\n    datatype: 'all'\n    description: 'Packet to forward'\n  c.outPorts.add 'out',\n    datatype: 'all'\n\n  c.process (input, output) ->\n    data = input.get 'in'\n    output.sendDone\n      out: data\n","noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = \"Like 'Repeat', except repeat on next tick\"\n  c.icon = 'step-forward'\n  c.inPorts.add 'in',\n    datatype: 'all'\n    description: 'Packet to forward'\n  c.outPorts.add 'out',\n    datatype: 'all'\n\n  c.process (input, output) ->\n    data = input.get 'in'\n    setTimeout ->\n      output.sendDone\n        out: data\n    , 0\n","noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Forward packet after a set delay'\n  c.icon = 'clock-o'\n\n  c.timers = []\n\n  c.inPorts.add 'in',\n    datatype: 'all'\n    description: 'Packet to be forwarded with a delay'\n  c.inPorts.add 'delay',\n    datatype: 'number'\n    description: 'How much to delay'\n    default: 500\n    control: true\n\n  c.outPorts.add 'out',\n    datatype: 'all'\n\n  c.tearDown = (callback) ->\n    clearTimeout timer for timer in c.timers\n    c.timers = []\n    callback()\n\n  c.process (input, output) ->\n    return unless input.hasData 'in'\n    return if input.attached('delay').length and not input.hasData 'delay'\n\n    delay = 500\n    if input.hasData 'delay'\n      delay = input.getData 'delay'\n    payload = input.get 'in'\n\n    timer = setTimeout ->\n      c.timers.splice c.timers.indexOf(timer), 1\n      output.sendDone\n        out: payload\n    , delay\n    c.timers.push timer\n","noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Send a packet at the given interval'\n  c.icon = 'clock-o'\n  c.inPorts.add 'interval',\n    datatype: 'number'\n    description: 'Interval at which output packets are emitted (ms)'\n    required: true\n    control: true\n  c.inPorts.add 'start',\n    datatype: 'bang'\n    description: 'Start the emission'\n  c.inPorts.add 'stop',\n    datatype: 'bang'\n    description: 'Stop the emission'\n  c.outPorts.add 'out',\n    datatype: 'bang'\n\n  c.timers = {}\n\n  cleanUp = (scope) ->\n    return unless c.timers[scope]\n    clearInterval c.timers[scope].interval\n    c.timers[scope].deactivate()\n    c.timers[scope] = null\n\n  c.tearDown = (callback) ->\n    for scope, context of c.timers\n      cleanUp scope\n    c.timers = {}\n    callback()\n\n  c.forwardBrackets = {}\n  c.process (input, output, context) ->\n    if input.hasData 'start'\n      return unless input.hasData 'interval'\n      start = input.get 'start'\n      return unless start.type is 'data'\n      interval = parseInt input.getData 'interval'\n      # Ensure we deactivate previous interval in this scope, if any\n      cleanUp start.scope\n\n      # Set up interval\n      context.interval = setInterval ->\n        bang = new noflo.IP 'data', true\n        bang.scope = start.scope\n        c.outPorts.out.sendIP bang\n      , interval\n\n      # Register scope, we keep it active until stopped\n      c.timers[start.scope] = context\n      return\n\n    if input.hasData 'stop'\n      stop = input.get 'stop'\n      return unless stop.type is 'data'\n      # Deactivate interval in this scope\n      cleanUp stop.scope\n      return\n","noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Send a packet after the given time in ms'\n  c.icon = 'clock-o'\n\n  c.timer = {}\n\n  c.inPorts.add 'time',\n    datatype: 'number'\n    description: 'Time after which a packet will be sent'\n    required: true\n    control: true\n  c.inPorts.add 'start',\n    datatype: 'bang'\n    description: 'Start the timeout before sending a packet'\n  c.outPorts.add 'out',\n    datatype: 'bang'\n\n  c.forwardBrackets =\n    start: ['out']\n\n  c.stopTimer = (scope) ->\n    return unless c.timer[scope]\n    clearTimeout c.timer[scope].timeout\n    c.timer[scope].deactivate()\n    delete c.timer[scope]\n\n  c.tearDown = (callback) ->\n    for scope, timer of c.timer\n      c.stopTimer scope\n    callback()\n\n  c.process (input, output, context) ->\n    return unless input.hasData 'time', 'start'\n    time = input.getData 'time'\n    bang = input.getData 'start'\n    # Ensure we deactivate previous timeout, if any\n    c.stopTimer input.scope\n    # Set up new timer\n    context.timeout = setTimeout ->\n      c.timer = null\n      output.sendDone\n        out: true\n    , time\n    c.timer[input.scope] = context\n    return\n","noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Sends next packet in buffer when receiving a bang'\n  c.icon = 'forward'\n\n  c.inPorts.add 'data',\n    datatype: 'all'\n  c.inPorts.add 'in',\n    datatype: 'bang'\n  c.outPorts.add 'out',\n    datatype: 'all'\n  c.outPorts.add 'empty',\n    datatype: 'bang'\n    required: false\n\n  c.forwardBrackets = {}\n  c.process (input, output) ->\n    return unless input.hasData 'in'\n    bang = input.getData 'in'\n\n    unless input.hasData 'data'\n      # No data packets in the buffer, send \"empty\"\n      output.sendDone\n        empty: true\n      return\n\n    sent = false\n    # Loop until we've either drained the buffer completely, or until\n    # we hit the next data packet\n    while input.has 'data'\n      if sent\n        # If we already sent data, we look ahead to see if next packet is data and bail out\n        buf = c.inPorts.data.getBuffer bang.scope\n        break if buf[0].type is 'data'\n\n      packet = input.get 'data'\n      output.send\n        out: packet\n      sent = true if packet.type is 'data'\n    # After the loop we can deactivate\n    output.done()\n","noflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'expand'\n  c.description = 'This component receives data on a single input port and\n    sends the same data out to all connected output ports'\n\n  c.inPorts.add 'in',\n    datatype: 'all'\n    description: 'Packet to be forwarded'\n\n  c.outPorts.add 'out',\n    datatype: 'all'\n\n  c.process (input, output) ->\n    data = input.get 'in'\n    output.sendDone\n      out: data\n","noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Add a class to an element'\n  c.inPorts.add 'element',\n    datatype: 'object'\n  c.inPorts.add 'class',\n    datatype: 'string'\n\n  c.process (input, output) ->\n    return unless input.has 'element', 'class'\n    [element, className] = input.getData 'element', 'class'\n    element.classList.add className\n    output.done()\n","noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Append elements as children of a parent element'\n  c.inPorts.add 'parent',\n    datatype: 'object'\n  c.inPorts.add 'child',\n    datatype: 'object'\n\n  c.process (input, output) ->\n    return unless input.hasData 'parent', 'child'\n    [parent, child] = input.getData 'parent', 'child'\n    parent.appendChild child\n    output.done()\n","noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Create a new DOM Element'\n  c.inPorts.add 'tagname',\n    datatype: 'string'\n  c.inPorts.add 'container',\n    datatype: 'object'\n  c.outPorts.add 'element',\n    datatype: 'object'\n  c.forwardBrackets =\n    tagname: ['element']\n\n  c.process (input, output) ->\n    return unless input.hasData 'tagname'\n    if c.inPorts.container.isAttached()\n      # If container is attached, we want it too\n      return unless input.hasData 'container'\n\n    tagname = input.getData 'tagname'\n    element = document.createElement tagname\n    if input.hasData 'container'\n      container = input.getData 'container'\n      container.appendChild element\n\n    output.sendDone\n      element: element\n","noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c. description = 'Create a new DOM DocumentFragment'\n  c.inPorts.add 'in',\n    datatype: 'bang'\n  c.outPorts.add 'fragment',\n    datatype: 'object'\n\n  c.forwardBrackets =\n    in: ['fragment']\n\n  c.process (input, output) ->\n    return unless input.hasData 'in'\n    input.getData 'in'\n    fragment = document.createDocumentFragment()\n    output.sendDone\n      fragment: fragment\n","noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = \"Reads the given attribute from the DOM element on the in\n    port.\"\n\n  # Define in ports.\n  c.inPorts.add 'element',\n    datatype: 'object'\n    description: 'The element from which to read the attribute from.'\n    required: true\n\n  c.inPorts.add 'attribute',\n    datatype: 'string'\n    description: 'The attribute which is read from the DOM element.'\n    required: true\n    control: true\n\n  # Define out ports.\n  c.outPorts.add 'out',\n    datatype: 'string'\n    description: 'Value of the attribute being read.'\n\n  c.forwardBrackets =\n    element: ['out']\n\n  # On data flow.\n  c.process (input, output) ->\n    return unless input.hasData 'element', 'attribute'\n    [element, attribute] = input.getData 'element', 'attribute'\n    value = element.getAttribute attribute\n    output.sendDone\n      out: value\n","noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description ='Get a DOM element matching a query'\n  c.inPorts.add 'in',\n    datatype: 'object'\n    description: 'DOM element to constrain the query to'\n  c.inPorts.add 'selector',\n    datatype: 'string'\n    description: 'CSS selector'\n  c.outPorts.add 'element',\n    datatype: 'object'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.forwardBrackets =\n    selector: ['element', 'error']\n  c.process (input, output) ->\n    return unless input.hasData 'selector'\n    return unless input.hasData 'in' if input.attached('in').length > 0\n    if input.hasData 'in'\n      # Element-scoped selector\n      [container, selector] = input.getData 'in', 'selector'\n      unless typeof container.querySelector is 'function'\n        output.done new Error 'Given container doesn\\'t support querySelectors'\n        return\n      el = container.querySelectorAll selector\n      unless el.length\n        output.done new Error \"No element matching '#{selector}' found under container\"\n        return\n      for element in el\n        output.send\n          element: element\n      output.done()\n      return\n    selector = input.getData 'selector'\n    el = document.querySelectorAll selector\n    unless el.length\n      output.done new Error \"No element matching '#{selector}' found under document\"\n      return\n    for element in el\n      output.send\n        element: element\n    output.done()\n","noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Check if an element has a given class'\n  c.inPorts.add 'element',\n    datatype: 'object'\n  c.inPorts.add 'class',\n    datatype: 'string'\n  c.outPorts.add 'element',\n    datatype: 'object'\n  c.outPorts.add 'missed',\n    datatype: 'object'\n  c.process (input, output) ->\n    return unless input.hasData 'element', 'class'\n    [element, klass] = input.getData 'element', 'class'\n    if element.classList.contains klass\n      output.sendDone\n        element: element\n      return\n    output.sendDone\n      missed: element\n","noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'addEventListener for specified event type'\n  c.icon = 'stethoscope'\n\n  c.inPorts.add 'element',\n    datatype: 'object'\n  c.inPorts.add 'type',\n    datatype: 'string'\n  c.inPorts.add 'preventdefault',\n    datatype: 'boolean'\n    control: true\n    default: false\n  c.outPorts.add 'element',\n    datatype: 'object'\n  c.outPorts.add 'event',\n    datatype: 'object'\n\n  c.elements = {}\n  cleanUp = (scope) ->\n    return unless c.elements[scope]\n    {element, event, listener} = c.elements[scope]\n    element.removeEventListener event, listener\n    c.elements[scope].deactivate()\n    delete c.elements[scope]\n  c.tearDown = (callback) ->\n    for scope, element of c.elements\n      cleanUp scope\n    c.elements = {}\n    callback()\n  c.forwardBrackets = {}\n\n  c.process (input, output, context) ->\n\n    return unless input.hasData 'element', 'type'\n    [element, type] = input.getData 'element', 'type'\n\n    preventDefault = false\n    if input.hasData 'preventdefault'\n      preventDefault = input.getData 'preventdefault'\n\n    scope = null\n    cleanUp scope\n\n    context.element = element\n    context.event = type\n    context.listener = (event) ->\n      event.preventDefault() if preventDefault\n      output.send\n        element: context.element\n        event: event\n    c.elements[context] = context\n    element.addEventListener type, context.listener\n","noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Read HTML from an existing element'\n  c.inPorts.add 'container',\n    datatype: 'object'\n  c.outPorts.add 'html',\n    datatype: 'string'\n  c.forwardBrackets =\n    container: ['html']\n  c.process (input, output) ->\n    return unless input.hasData 'container'\n    container = input.getData 'container'\n    output.sendDone\n      html: container.innerHTML\n","noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Remove a class from an element'\n  c.inPorts.add 'element',\n    datatype: 'object'\n  c.inPorts.add 'class',\n    datatype: 'string'\n\n  c.process (input, output) ->\n    return unless input.has 'element', 'class'\n    [element, className] = input.getData 'element', 'class'\n    element.classList.remove className\n    output.done()\n","noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Remove an element from DOM'\n  c.inPorts.add 'element',\n    datatype: 'object'\n  c.process (input, output) ->\n    return unless input.hasData 'element'\n    element = input.getData 'element'\n    return unless element.parentNode\n    element.parentNode.removeChild element\n    output.done()\n","noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nrequestAnimationFrame =\n  window.requestAnimationFrame       ||\n  window.webkitRequestAnimationFrame ||\n  window.mozRequestAnimationFrame    ||\n  window.oRequestAnimationFrame      ||\n  window.msRequestAnimationFrame     ||\n  (callback, element) ->\n    window.setTimeout( ->\n      callback(+new Date())\n    , 1000 / 60)\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Sends bangs that correspond with screen refresh rate.'\n  c.icon = 'film'\n\n  c.inPorts.add 'start',\n    datatype: 'bang'\n  c.inPorts.add 'stop',\n    datatype: 'bang'\n  c.outPorts.add 'out',\n    datatype: 'bang'\n\n  c.running = {}\n  cleanUp = (scope) ->\n    return unless c.running[scope]\n    c.running[scope].deactivate()\n    delete c.running[scope]\n  c.tearDown = (callback) ->\n    for scope, running of c.running\n      cleanUp scope\n    c.running = {}\n    callback()\n  c.animate = (scope, output) ->\n    # Stop when context has been stopped\n    return unless c.running[scope]\n    # Send bang\n    output.send true\n    # Request next frame\n    requestAnimationFrame c.animate.bind c, scope, output\n\n  c.forwardBrackets = {}\n  c.process (input, output, context) ->\n    if input.hasData 'start'\n      start = input.get 'start'\n      return unless start.type is 'data'\n      # Ensure previous was deactivated\n      cleanUp start.scope\n\n      # Register scope\n      c.running[start.scope] = context\n\n      # Request first frame\n      requestAnimationFrame c.animate.bind c, start.scope, output\n      return\n\n    if input.hasData 'stop'\n      stop = input.get 'stop'\n      return unless stop.type is 'data'\n      # Deactivate this scope\n      cleanUp stop.scope\n      return\n","'use strict'\n\n# @runtime noflo-browser\n\nnoflo = require 'noflo'\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = \"Set the given attribute on the DOM element to the received\n    value.\"\n    \n  # Define in ports.\n  c.inPorts.add 'element',\n    datatype: 'object'\n    description: 'The element on which to set the attribute.'\n\n  c.inPorts.add 'attribute',\n    datatype: 'string'\n    description: 'The attribute which is set on the DOM element.'\n\n  c.inPorts.add 'value',\n    datatype: 'string'\n    description: 'Value of the attribute being set.'\n  \n  # Define out ports.\n  c.outPorts.add 'element',\n    datatype: 'object'\n    description: 'The element that was updated.'\n\n  c.forwardBrackets =\n    element: ['element']\n    value: ['element']\n\n  c.process (input, output) ->\n    return unless input.hasData 'element', 'attribute', 'value'\n    [element, attribute, value] = input.getData 'element', 'attribute', 'value'\n    if typeof value is 'object'\n      if toString.call(value) is '[object Array]'\n        value = value.join ' '\n      else\n        newVal = []\n        newVal.push val for key, val of value\n        value = newVal.join ' '\n    if attribute is \"value\"\n      element.value = value\n    else\n      element.setAttribute attribute, value\n\n    output.sendDone\n      element: element\n","noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Write HTML inside an existing element'\n  c.inPorts.add 'container',\n    datatype: 'object'\n  c.inPorts.add 'html',\n    datatype: 'string'\n  c.outPorts.add 'container',\n    datatype: 'object'\n  c.process (input, output) ->\n    return unless input.hasData 'container', 'html'\n    [container, html] = input.getData 'container', 'html'\n    container.innerHTML = html\n    output.sendDone\n      container: container\n","noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'i-cursor'\n  c.description = 'focus element'\n  c.inPorts.add 'element',\n    datatype: 'object'\n    description: 'element to be focused'\n    control: true\n  c.inPorts.add 'trigger',\n    datatype: 'bang'\n    description: 'trigger focus'\n  c.outPorts.add 'out',\n    datatype: 'bang'\n  c.process (input, output) ->\n    return unless input.hasData 'element', 'trigger'\n    element = input.getData 'element'\n    input.getData 'trigger'\n    window.setTimeout ->\n      element.focus()\n      output.sendDone\n        out: true\n    , 0\n","noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Listen to changes on an input element'\n  c.icon = 'hourglass'\n  c.inPorts.add 'element',\n    datatype: 'object'\n  c.outPorts.add 'value',\n    datatype: 'object'\n  c.elements = []\n  c.tearDown = (callback) ->\n    for element in c.elements\n      element.el.removeEventListener 'change', element.listener, false\n      element.ctx.deactivate()\n    c.elements = []\n    do callback\n  c.forwardBrackets = {}\n  c.process (input, output, context) ->\n    return unless input.hasData 'element'\n    data =\n      el: input.getData 'element'\n      listener: (event) ->\n        event.preventDefault()\n        event.stopPropagation()\n        output.send\n          value: event.target.value\n      ctx: context\n    data.el.addEventListener 'change', data.listener, false\n    c.elements.push data\n    return\n","noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description =  'Listen to drag events on a DOM element'\n  c.icon = 'arrows'\n  c.inPorts.add 'element',\n    datatype: 'object'\n  c.outPorts.add 'start',\n    datatype: 'object'\n  c.outPorts.add 'movey',\n    datatype: 'number'\n  c.outPorts.add 'movex',\n    datatype: 'number'\n  c.outPorts.add 'end',\n    datatype: 'object'\n  c.elements = []\n  c.tearDown = (callback) ->\n    for element in c.elements\n      element.el.removeEventListener 'dragstart', element.dragstart, false\n      element.el.removeEventListener 'drag', element.dragmove, false\n      element.el.removeEventListener 'dragend', element.dragend, false\n      element.ctx.deactivate()\n    c.elements = []\n    do callback\n  c.forwardBrackets = {}\n  c.process (input, output, context) ->\n    return unless input.hasData 'element'\n    data =\n      el: input.getData 'element'\n      dragstart: (event) ->\n        event.stopPropagation()\n        output.send\n          start: event\n      dragmove: (event) ->\n        event.preventDefault()\n        event.stopPropagation()\n        output.send\n          movex: event.clientX\n          movey: event.clientY\n      dragend: (event) ->\n        event.preventDefault()\n        event.stopPropagation()\n        output.send\n          end: event\n      ctx: context\n    data.el.addEventListener 'dragstart', data.dragstart, false\n    data.el.addEventListener 'drag', data.dragmove, false\n    data.el.addEventListener 'dragend', data.dragend, false\n    c.elements.push data\n    return\n","noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'rss'\n  c.description = 'Listen to custom events on a DOM element'\n  c.inPorts.add 'element',\n    datatype: 'object'\n  c.inPorts.add 'event',\n    datatype: 'string'\n  c.outPorts.add 'out',\n    datatype: 'object'\n  c.elements = []\n  c.tearDown = (callback) ->\n    for element in c.elements\n      element.el.removeEventListener element.eventName, element.onEvent, false\n      element.ctx.deactivate()\n    c.elements = []\n    do callback\n  c.forwardBrackets = {}\n  c.process (input, output, context) ->\n    return unless input.hasData 'element', 'event'\n    el = input.getData 'element'\n    eventName = input.getData 'event'\n    data =\n      el: el\n      eventName: eventName\n      onEvent: (event) ->\n        event.preventDefault()\n        event.stopPropagation()\n        event.eventName = eventName\n        output.send\n          out: event\n      ctx: context\n    data.el.addEventListener eventName, data.onEvent, false\n    c.elements.push data\n    return\n","noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Listen for hash changes in browser\\'s URL bar'\n  c.icon = 'slack'\n  c.inPorts.add 'start',\n    datatype: 'bang'\n    description: 'Start listening for hash changes'\n  c.inPorts.add 'stop',\n    datatype: 'bang'\n    description: 'Stop listening for hash changes'\n  c.outPorts.add 'initial',\n    datatype: 'string'\n  c.outPorts.add 'change',\n    datatype: 'string'\n  c.current = null\n  c.subscriber = null\n  unsubscribe = ->\n    return unless c.subscriber\n    window.removeEventListener 'hashchange', c.subscriber.callback, false\n    c.subscriber.ctx.deactivate()\n    c.subscriber = null\n  c.tearDown = (callback) ->\n    c.current = null\n    do unsubscribe\n    do callback\n  c.forwardBrackets = {}\n  c.process (input, output, context) ->\n    if input.hasData 'start'\n      input.getData 'start'\n      # Ensure previous subscription is ended\n      do unsubscribe\n      sendHash = (port) ->\n        oldHash = c.current\n        c.current = window.location.href.split('#')[1] or ''\n        if oldHash\n          output.send\n            change: new noflo.IP 'openBracket', oldHash\n        payload = {}\n        payload[port] = c.current\n        output.send payload\n        if oldHash\n          output.send\n            change: new noflo.IP 'closeBracket', oldHash\n      c.subscriber =\n        callback: (event) ->\n          sendHash 'change'\n        ctx: context\n      # Send initial\n      sendHash 'initial'\n      window.addEventListener 'hashchange', c.subscriber.callback, false\n      return\n    if input.hasData 'stop'\n      input.getData 'stop'\n      do unsubscribe\n      output.done()\n      return\n","noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Listen for key presses on a given DOM element'\n  c.icon = 'keyboard-o'\n  c.inPorts.add 'element',\n    datatype: 'object'\n  c.inPorts.add 'stop',\n    datatype: 'object'\n  c.outPorts.add 'keypress',\n    datatype: 'integer'\n  c.elements = []\n  unsubcribe = (element) ->\n    element.el.removeEventListener 'keypress', element.listener, false\n    element.ctx.deactivate()\n  c.tearDown = (callback) ->\n    unsubscribe element for element in c.elements\n    c.elements = []\n    do callback\n  c.forwardBrackets = {}\n  c.process (input, output, context) ->\n    if input.hasData 'element'\n      data =\n        el: input.getData 'element'\n        listener: (event) ->\n          output.send\n            keypress: event.keyCode\n        ctx: context\n      data.el.addEventListener 'keypress', data.listener, false\n      c.elements.push data\n      return\n    if input.hasData 'stop'\n      element = input.getData 'stop'\n      ctx = null\n      for el in c.elements\n        continue unless el.el is element\n        ctx = el\n      return unless ctx\n      unsubscribe ctx\n      output.done()\n","noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Listen for keyboard shortcuts and route them'\n  c.icon = 'keyboard-o'\n  c.inPorts.add 'keys',\n    datatype: 'array'\n  c.inPorts.add 'ignoreinput',\n    datatype: 'boolean'\n    default: true\n    control: true\n  c.inPorts.add 'stop',\n    datatype: 'bang'\n  c.outPorts.add 'shortcut',\n    datatype: 'bang'\n    addressable: true\n  c.outPorts.add 'missed',\n    datatype: 'integer'\n  c.subscriber = null\n  unsubscribe = ->\n    return unless c.subscriber\n    document.removeEventListener 'keydown', c.subscriber.callback, false\n    c.subscriber.ctx.deactivate()\n    c.subscriber = null\n  c.tearDown = (callback) ->\n    do unsubscribe\n    do callback\n  c.forwardBrackets = {}\n  c.process (input, output, context) ->\n    if input.hasData 'keys'\n      keys = input.getData 'keys'\n\n      # Ensure previous subscription is ended\n      do unsubscribe\n\n      # Older version of this component used string input\n      keys = keys.split ',' if typeof keys is 'string'\n\n      # We allow some common keyboard shortcuts to be passed as strings\n      for key, index in keys\n        switch key\n          when '-' then keys[index] = 189\n          when '=' then keys[index] = 187\n          when '0' then keys[index] = 48\n          when 'a' then keys[index] = 65\n          when 'x' then keys[index] = 88\n          when 'c' then keys[index] = 67\n          when 'v' then keys[index] = 86\n          when 'z' then keys[index] = 90\n          when 'r' then keys[index] = 82\n\n      ignoreInput = if input.hasData('ignoreinput') then input.getData('ignoreinput') else true\n\n      c.subscriber =\n        callback: (event) ->\n          return unless event.ctrlKey or event.metaKey\n          return if event.target.tagName is 'TEXTAREA' and ignoreInput\n          return if event.target.tagName is 'INPUT' and ignoreInput\n          return if String(event.target.contentEditable) is 'true' and ignoreInput\n          route = keys.indexOf event.keyCode\n          if route is -1\n            output.send\n              missed: event.keyCode\n            return\n          event.preventDefault()\n          event.stopPropagation()\n          output.send\n            shortcut: new noflo.IP 'data', event.keyCode,\n              index: route\n        ctx: context\n      document.addEventListener 'keydown', c.subscriber.callback, false\n      return\n    if input.hasData 'stop'\n      input.getData 'stop'\n      do unsubscribe\n      output.done()\n      return\n","noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.icon = 'mouse-pointer'\n  c.description = 'Listen to mouse events on a DOM element'\n  c.inPorts.add 'element',\n    datatype: 'object'\n  c.outPorts.add 'click',\n    datatype: 'object'\n  c.outPorts.add 'dblclick',\n    datatype: 'object'\n  c.elements = []\n  c.tearDown = (callback) ->\n    for element in c.elements\n      element.el.removeEventListener 'click', element.click, false\n      element.el.removeEventListener 'dblclick', element.dblclick, false\n      element.ctx.deactivate()\n    c.elements = []\n    do callback\n  c.forwardBrackets = {}\n  c.process (input, output, context) ->\n    return unless input.hasData 'element'\n    data =\n      el: input.getData 'element'\n      click: (event) ->\n        event.preventDefault()\n        event.stopPropagation()\n        output.send\n          click: event\n      dblclick: (event) ->\n        event.preventDefault()\n        event.stopPropagation()\n        output.send\n          dblclick: event\n      ctx: context\n    data.el.addEventListener 'click', data.click, false\n    data.el.addEventListener 'dblclick', data.dblclick, false\n    c.elements.push data\n    return\n","noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Listen to pointer events on a DOM element'\n  c.icon = 'pencil-square-o'\n  c.inPorts.add 'element',\n    datatype: 'object'\n  c.inPorts.add 'action',\n    datatype: 'string'\n    default: 'none'\n    control: true\n  events = [\n    'down'\n    'up'\n    'cancel'\n    'move'\n    'over'\n    'out'\n    'enter'\n    'leave'\n  ]\n  for event in events\n    c.outPorts.add event,\n      datatype: 'object'\n      description: \"Sends event on pointer#{event}\"\n  c.elements = []\n  c.tearDown = (callback) ->\n    for element in c.elements\n      if element.el.removeAttribute\n        element.el.removeAttribute 'touch-action'\n      for event in events\n        element.el.removeEventListener \"pointer#{event}\", element[\"pointer#{event}\"], false\n      element.ctx.deactivate()\n    c.elements = []\n    do callback\n  c.forwardBrackets = {}\n  c.process (input, output, context) ->\n    return unless input.hasData 'element'\n    action = if input.hasData('action') then input.getData('action') else 'none'\n    data =\n      el: input.getData 'element'\n      ctx: context\n    data.el.setAttribute 'touch-action', action\n    events.forEach (event) ->\n      data[\"pointer#{event}\"] = (ev) ->\n        ev.preventDefault()\n        ev.stopPropagation()\n        payload = {}\n        payload[event] = ev.target.value\n        output.send payload\n      data.el.addEventListener \"pointer#{event}\", data[\"pointer#{event}\"], false\n    c.elements.push data\n    return\n","noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Listen to window resize events'\n  c.icon = 'desktop'\n  c.inPorts.add 'start',\n    datatype: 'bang'\n    description: 'Start listening for screen resizes'\n  c.inPorts.add 'stop',\n    datatype: 'bang'\n    description: 'Stop listening for screen resizes'\n  c.outPorts.add 'width',\n    datatype: 'number'\n  c.outPorts.add 'height',\n    datatype: 'number'\n  c.subscriber = null\n  unsubscribe = ->\n    return unless c.subscriber\n    window.removeEventListener 'resize', c.subscriber.callback, false\n    c.subscriber.ctx.deactivate()\n    c.subscriber = null\n  c.tearDown = (callback) ->\n    do unsubscribe\n    do callback\n  c.forwardBrackets = {}\n  c.process (input, output, context) ->\n    if input.hasData 'start'\n      input.getData 'start'\n      # Ensure previous subscription is ended\n      do unsubscribe\n      c.subscriber =\n        callback: (event) ->\n          output.send\n            width: window.innerWidth\n            height: window.innerHeight\n        ctx: context\n      output.send\n        width: window.innerWidth\n        height: window.innerHeight\n      window.addEventListener 'resize', c.subscriber.callback, false\n      return\n    if input.hasData 'stop'\n      input.getData 'stop'\n      do unsubscribe\n      output.done()\n      return\n","noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Listen to scroll events on the browser window'\n  c.icon = 'arrows-v'\n  c.inPorts.add 'start',\n    datatype: 'bang'\n    description: 'Start listening for hash changes'\n  c.inPorts.add 'stop',\n    datatype: 'bang'\n    description: 'Stop listening for hash changes'\n  c.outPorts.add 'top',\n    datatype: 'number'\n  c.outPorts.add 'bottom',\n    datatype: 'number'\n  c.outPorts.add 'left',\n    datatype: 'number'\n  c.outPorts.add 'right',\n    datatype: 'number'\n  c.subscriber = null\n  unsubscribe = ->\n    return unless c.subscriber\n    window.removeEventListener 'scroll', c.subscriber.callback, false\n    c.subscriber.ctx.deactivate()\n    c.subscriber = null\n  c.tearDown = (callback) ->\n    do unsubscribe\n    do callback\n  c.forwardBrackets = {}\n  c.process (input, output, context) ->\n    if input.hasData 'start'\n      input.getData 'start'\n      # Ensure previous subscription is ended\n      do unsubscribe\n      c.subscriber =\n        callback: (event) ->\n          top = window.scrollY\n          left = window.scrollX\n          output.send\n            top: top\n            bottom: top + window.innerHeight\n            left: left\n            right: left.window.innerWidth\n        ctx: context\n      window.addEventListener 'scroll', c.subscriber.callback, false\n      return\n    if input.hasData 'stop'\n      input.getData 'stop'\n      do unsubscribe\n      output.done()\n      return\n","noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Listen for user\\'s microphone and recognize phrases'\n  c.icon = 'microphone'\n  c.inPorts.add 'start',\n    datatype: 'bang'\n    description: 'Start listening for hash changes'\n  c.inPorts.add 'stop',\n    datatype: 'bang'\n    description: 'Stop listening for hash changes'\n  c.outPorts.add 'result',\n    datatype: 'string'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.subscriber = null\n  unsubscribe = ->\n    return unless c.subscriber\n    do c.subscriber.recognition.stop\n    do c.subscriber.ctx.deactivate\n    c.subscriber = null\n  c.tearDown = (callback) ->\n    do unsubscribe\n    do callback\n  c.forwardBrackets = {}\n  c.process (input, output, context) ->\n    if input.hasData 'start'\n      input.getData 'start'\n      # Ensure previous subscription is ended\n      do unsubscribe\n      unless window.webkitSpeechRecognition\n        output.done new Error 'Speech recognition support not available'\n        return\n      c.subscriber =\n        sent: []\n        callback: (event) ->\n          for result, idx in event.results\n            continue unless result.isFinal\n            if c.subscriber.sent.indexOf(idx) isnt -1\n              continue\n            output.send\n              result: result[0].transcript\n            c.subscriber.sent.push idx\n        error: (err) ->\n          output.send\n            error: err\n        ctx: context\n      c.subscriber.recognition = new window.webkitSpeechRecognition\n      c.subscriber.recognition.continuous = true\n      c.subscriber.recognition.start()\n      c.subscriber.recognition.onresult = c.subscriber.callback\n      c.subscriber.recognition.onerror = c.subscriber.error\n      return\n    if input.hasData 'stop'\n      input.getData 'stop'\n      do unsubscribe\n      output.done()\n      return\n","noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Listen to touch events on a DOM element'\n  c.icon = 'hand-o-up'\n  c.inPorts.add 'element',\n    datatype: 'object'\n  c.outPorts.add 'start',\n    datatype: 'object'\n  c.outPorts.add 'movex',\n    datatype: 'number'\n  c.outPorts.add 'movey',\n    datatype: 'number'\n  c.outPorts.add 'end',\n    datatype: 'object'\n  c.elements = []\n  c.tearDown = (callback) ->\n    for element in c.elements\n      element.el.removeEventListener 'touchstart', element.touchstart, false\n      element.el.removeEventListener 'touchmove', element.touchmove, false\n      element.el.removeEventListener 'touchend', element.touchend, false\n      element.ctx.deactivate()\n    c.elements = []\n    do callback\n  c.forwardBrackets = {}\n  c.process (input, output, context) ->\n    return unless input.hasData 'element'\n    data =\n      el: input.getData 'element'\n      touchstart: (event) ->\n        event.preventDefault()\n        event.stopPropagation()\n        return unless event.changedTouches\n        return unless event.changedTouches.length\n        for touch, idx in event.changedTouches\n          output.send\n            start: new noflo.IP 'data', event,\n              touch: idx\n      touchmove: (event) ->\n        event.preventDefault()\n        event.stopPropagation()\n        return unless event.changedTouches\n        return unless event.changedTouches.length\n        for touch, idx in event.changedTouches\n          output.send\n            movex: new noflo.IP 'data', touch.pageX,\n              touch: idx\n            movey: new noflo.IP 'data', touch.pageY,\n              touch: idx\n      touchend: (event) ->\n        event.preventDefault()\n        event.stopPropagation()\n        return unless event.changedTouches\n        return unless event.changedTouches.length\n        for touch, idx in event.changedTouches\n          output.send\n            end: new noflo.IP 'data', event,\n              touch: idx\n      ctx: context\n    data.el.addEventListener 'touchstart', data.touchstart, false\n    data.el.addEventListener 'touchmove', data.touchmove, false\n    data.el.addEventListener 'touchend', data.touchend, false\n    c.elements.push data\n    return\n","noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Read the coordinates from a DOM event'\n  c.icon = 'map-marker'\n  c.inPorts.add 'event',\n    datatype: 'object'\n  c.outPorts.add 'screen',\n    datatype: 'object'\n  c.outPorts.add 'client',\n    datatype: 'object'\n  c.outPorts.add 'page',\n    datatype: 'object'\n  c.forwardBrackets =\n    event: ['screen', 'client', 'page']\n  c.process (input, output) ->\n    return unless input.hasData 'event'\n    event = input.getData 'event'\n    output.sendDone\n      screen:\n        x: event.screenX\n        y: event.screenY\n      client:\n        x: event.clientX\n        y: event.clientY\n      page:\n        x: event.pageX\n        y: event.pageY\n","noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Read the state of a gamepad'\n  c.icon = 'gamepad'\n  c.inPorts.add 'gamepad',\n    datatype: 'integer'\n  c.outPorts.add 'out',\n    datatype: 'object'\n  c.outPorts.add 'error',\n    datatype: 'object'\n  c.lastTimestamps = {}\n  c.tearDown = (callback) ->\n    c.lastTimestamps = {}\n    do callback\n  c.process (input, output) ->\n    return unless input.hasData 'gamepad'\n    gamepad = input.getData 'gamepad'\n    unless navigator.webkitGetGamepads\n      output.done new Error \"No WebKit Gamepad API available\"\n      return\n    gamepadState = navigator.webkitGetGamepads()[gamepad]\n    unless gamepadState\n      output.done new Error \"Gamepad '#{gamepad}' not available\"\n    if c.lastTimestamps[gamepad] = gamepadState.timestamp\n      # No change\n      output.done()\n      return\n    c.lastTimestamps[gamepad] = gamepadState.timestamp\n    output.sendDone\n      out: gamepadState\n","noflo = require 'noflo'\n\n# @runtime noflo-browser\n\nexports.getComponent = ->\n  c = new noflo.Component\n  c.description = 'Set the hash in browser\\'s URL bar'\n  c.icon = 'slack'\n  c.inPorts.add 'hash',\n    datatype: 'string'\n  c.outPorts.add 'out',\n    datatype: 'string'\n  c.process (input, output) ->\n    return unless input.hasData 'hash'\n    hash = input.getData 'hash'\n    window.location.hash = \"##{hash}\"\n    output.sendDone\n      out: hash\n","\"use strict\";\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\nfunction setup(env) {\n  createDebug.debug = createDebug;\n  createDebug.default = createDebug;\n  createDebug.coerce = coerce;\n  createDebug.disable = disable;\n  createDebug.enable = enable;\n  createDebug.enabled = enabled;\n  createDebug.humanize = require('ms');\n  Object.keys(env).forEach(function (key) {\n    createDebug[key] = env[key];\n  });\n  /**\n  * Active `debug` instances.\n  */\n\n  createDebug.instances = [];\n  /**\n  * The currently active debug mode names, and names to skip.\n  */\n\n  createDebug.names = [];\n  createDebug.skips = [];\n  /**\n  * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n  *\n  * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n  */\n\n  createDebug.formatters = {};\n  /**\n  * Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the for the debug instance to be colored\n  * @return {Number|String} An ANSI color code for the given namespace\n  * @api private\n  */\n\n  function selectColor(namespace) {\n    var hash = 0;\n\n    for (var i = 0; i < namespace.length; i++) {\n      hash = (hash << 5) - hash + namespace.charCodeAt(i);\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n  }\n\n  createDebug.selectColor = selectColor;\n  /**\n  * Create a debugger with the given `namespace`.\n  *\n  * @param {String} namespace\n  * @return {Function}\n  * @api public\n  */\n\n  function createDebug(namespace) {\n    var prevTime;\n\n    function debug() {\n      // Disabled?\n      if (!debug.enabled) {\n        return;\n      }\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var self = debug; // Set `diff` timestamp\n\n      var curr = Number(new Date());\n      var ms = curr - (prevTime || curr);\n      self.diff = ms;\n      self.prev = prevTime;\n      self.curr = curr;\n      prevTime = curr;\n      args[0] = createDebug.coerce(args[0]);\n\n      if (typeof args[0] !== 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O');\n      } // Apply any `formatters` transformations\n\n\n      var index = 0;\n      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n        // If we encounter an escaped % then don't increase the array index\n        if (match === '%%') {\n          return match;\n        }\n\n        index++;\n        var formatter = createDebug.formatters[format];\n\n        if (typeof formatter === 'function') {\n          var val = args[index];\n          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`\n\n          args.splice(index, 1);\n          index--;\n        }\n\n        return match;\n      }); // Apply env-specific formatting (colors, etc.)\n\n      createDebug.formatArgs.call(self, args);\n      var logFn = self.log || createDebug.log;\n      logFn.apply(self, args);\n    }\n\n    debug.namespace = namespace;\n    debug.enabled = createDebug.enabled(namespace);\n    debug.useColors = createDebug.useColors();\n    debug.color = selectColor(namespace);\n    debug.destroy = destroy;\n    debug.extend = extend; // Debug.formatArgs = formatArgs;\n    // debug.rawLog = rawLog;\n    // env-specific initialization logic for debug instances\n\n    if (typeof createDebug.init === 'function') {\n      createDebug.init(debug);\n    }\n\n    createDebug.instances.push(debug);\n    return debug;\n  }\n\n  function destroy() {\n    var index = createDebug.instances.indexOf(this);\n\n    if (index !== -1) {\n      createDebug.instances.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  function extend(namespace, delimiter) {\n    return createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n  }\n  /**\n  * Enables a debug mode by namespaces. This can include modes\n  * separated by a colon and wildcards.\n  *\n  * @param {String} namespaces\n  * @api public\n  */\n\n\n  function enable(namespaces) {\n    createDebug.save(namespaces);\n    createDebug.names = [];\n    createDebug.skips = [];\n    var i;\n    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n    var len = split.length;\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue;\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?');\n\n      if (namespaces[0] === '-') {\n        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n      } else {\n        createDebug.names.push(new RegExp('^' + namespaces + '$'));\n      }\n    }\n\n    for (i = 0; i < createDebug.instances.length; i++) {\n      var instance = createDebug.instances[i];\n      instance.enabled = createDebug.enabled(instance.namespace);\n    }\n  }\n  /**\n  * Disable debug output.\n  *\n  * @api public\n  */\n\n\n  function disable() {\n    createDebug.enable('');\n  }\n  /**\n  * Returns true if the given mode name is enabled, false otherwise.\n  *\n  * @param {String} name\n  * @return {Boolean}\n  * @api public\n  */\n\n\n  function enabled(name) {\n    if (name[name.length - 1] === '*') {\n      return true;\n    }\n\n    var i;\n    var len;\n\n    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n      if (createDebug.skips[i].test(name)) {\n        return false;\n      }\n    }\n\n    for (i = 0, len = createDebug.names.length; i < len; i++) {\n      if (createDebug.names[i].test(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n  * Coerce `val`.\n  *\n  * @param {Mixed} val\n  * @return {Mixed}\n  * @api private\n  */\n\n\n  function coerce(val) {\n    if (val instanceof Error) {\n      return val.stack || val.message;\n    }\n\n    return val;\n  }\n\n  createDebug.enable(createDebug.load());\n  return createDebug;\n}\n\nmodule.exports = setup;\n\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\-?\\d?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","  //     NoFlo - Flow-Based Programming for JavaScript\n  //     (c) 2014-2017 Flowhub UG\n  //     NoFlo may be freely distributed under the MIT license\nvar IP, InternalSocket, checkDeprecation, checkWirePatternPreconditions, checkWirePatternPreconditionsInput, checkWirePatternPreconditionsParams, debug, getGroupContext, getInputData, getOutputProxy, handleInputCollation, platform, populateParams, processApiWirePattern, reorderBuffer, setupBracketForwarding, setupControlPorts, setupErrorHandler, setupSendDefaults, utils,\n  hasProp = {}.hasOwnProperty;\n\nInternalSocket = require('./InternalSocket');\n\nIP = require('./IP');\n\nplatform = require('./Platform');\n\nutils = require('./Utils');\n\ndebug = require('debug')('noflo:helpers');\n\n// ## NoFlo WirePattern helper\n\n// **Note:** WirePattern is no longer the recommended way to build\n// NoFlo components. Please use [Process API](https://noflojs.org/documentation/components/) instead.\n\n// WirePattern makes your component collect data from several inports\n// and activates a handler `proc` only when a tuple from all of these\n// ports is complete. The signature of handler function is:\n// ```\n// proc = (combinedInputData, inputGroups, outputPorts, asyncCallback) ->\n// ```\n\n// With `config.forwardGroups = true` it would forward group IPs from\n// inputs to the output sending them along with the data. This option also\n// accepts string or array values, if you want to forward groups from specific\n// port(s) only. By default group forwarding is `false`.\n\n// substream cannot be interrupted by other packets, which is important when\n// doing asynchronous processing. In fact, `sendStreams` is enabled by default\n// on all outports when `config.async` is `true`.\n\n// WirePattern supports async `proc` handlers. Set `config.async = true` and\n// make sure that `proc` accepts callback as 4th parameter and calls it when\n// async operation completes or fails.\nexports.WirePattern = function(component, config, proc) {\n  var inPorts, outPorts, ref;\n  // In ports\n  inPorts = 'in' in config ? config.in : 'in';\n  if (!utils.isArray(inPorts)) {\n    inPorts = [inPorts];\n  }\n  // Out ports\n  outPorts = 'out' in config ? config.out : 'out';\n  if (!utils.isArray(outPorts)) {\n    outPorts = [outPorts];\n  }\n  if (!('error' in config)) {\n    // Error port\n    config.error = 'error';\n  }\n  if (!('async' in config)) {\n    // For async process\n    config.async = false;\n  }\n  if (!('ordered' in config)) {\n    // Keep correct output order for async mode\n    config.ordered = true;\n  }\n  if (!('group' in config)) {\n    // Group requests by group ID\n    config.group = false;\n  }\n  if (!('field' in config)) {\n    // Group requests by object field\n    config.field = null;\n  }\n  if (!('forwardGroups' in config)) {\n    // Forward group events from specific inputs to the output:\n    // - false: don't forward anything\n    // - true: forward unique groups of all inputs\n    // - string: forward groups of a specific port only\n    // - array: forward unique groups of inports in the list\n    config.forwardGroups = false;\n  }\n  if (config.forwardGroups) {\n    if (typeof config.forwardGroups === 'string') {\n      // Collect groups from one and only port?\n      config.forwardGroups = [config.forwardGroups];\n    }\n    if (typeof config.forwardGroups === 'boolean') {\n      // Forward groups from each port?\n      config.forwardGroups = inPorts;\n    }\n  }\n  if (!('receiveStreams' in config)) {\n    // Receive streams feature\n    config.receiveStreams = false;\n  }\n  if (config.receiveStreams) {\n    throw new Error('WirePattern receiveStreams is deprecated');\n  }\n  if (!('sendStreams' in config)) {\n    // if typeof config.receiveStreams is 'string'\n    //   config.receiveStreams = [ config.receiveStreams ]\n    // Send streams feature\n    config.sendStreams = false;\n  }\n  if (config.sendStreams) {\n    throw new Error('WirePattern sendStreams is deprecated');\n  }\n  if (config.async) {\n    // if typeof config.sendStreams is 'string'\n    //   config.sendStreams = [ config.sendStreams ]\n    config.sendStreams = outPorts;\n  }\n  if (!('params' in config)) {\n    // Parameter ports\n    config.params = [];\n  }\n  if (typeof config.params === 'string') {\n    config.params = [config.params];\n  }\n  if (!('name' in config)) {\n    // Node name\n    config.name = '';\n  }\n  if (!('dropInput' in config)) {\n    // Drop premature input before all params are received\n    config.dropInput = false;\n  }\n  // Firing policy for addressable ports\n  if (!('arrayPolicy' in config)) {\n    config.arrayPolicy = {\n      in: 'any',\n      params: 'all'\n    };\n  }\n  config.inPorts = inPorts;\n  config.outPorts = outPorts;\n  // Warn user of deprecated features\n  checkDeprecation(config, proc);\n  // Allow users to selectively fall back to legacy WirePattern implementation\n  if (config.legacy || (typeof process !== \"undefined\" && process !== null ? (ref = process.env) != null ? ref.NOFLO_WIREPATTERN_LEGACY : void 0 : void 0)) {\n    platform.deprecated('noflo.helpers.WirePattern legacy mode is deprecated');\n  }\n  return processApiWirePattern(component, config, proc);\n};\n\n// Takes WirePattern configuration of a component and sets up\n// Process API to handle it.\nprocessApiWirePattern = function(component, config, func) {\n  // Make param ports control ports\n  setupControlPorts(component, config);\n  // Set up sendDefaults function\n  setupSendDefaults(component);\n  // Set up bracket forwarding rules\n  setupBracketForwarding(component, config);\n  component.ordered = config.ordered;\n  // Create the processing function\n  return component.process(function(input, output, context) {\n    var data, errorHandler, groups, outProxy, postpone, resume;\n    // Abort unless WirePattern-style preconditions don't match\n    if (!checkWirePatternPreconditions(config, input, output)) {\n      return;\n    }\n    // Populate component.params from control ports\n    component.params = populateParams(config, input);\n    // Read input data\n    data = getInputData(config, input);\n    // Read bracket context of first inport\n    groups = getGroupContext(component, config.inPorts[0], input);\n    // Produce proxy object wrapping output in legacy-style port API\n    outProxy = getOutputProxy(config.outPorts, output);\n    debug(\"WirePattern Process API call with\", data, groups, component.params, context.scope);\n    postpone = function() {\n      throw new Error('noflo.helpers.WirePattern postpone is deprecated');\n    };\n    resume = function() {\n      throw new Error('noflo.helpers.WirePattern resume is deprecated');\n    };\n    // Async WirePattern will call the output.done callback itself\n    errorHandler = setupErrorHandler(component, config, output);\n    return func.call(component, data, groups, outProxy, function(err) {\n      errorHandler();\n      return output.done(err);\n    }, postpone, resume, input.scope);\n  });\n};\n\n// Provide deprecation warnings on certain more esoteric WirePattern features\ncheckDeprecation = function(config, func) {\n  // First check the conditions that force us to fall back on legacy WirePattern\n  if (config.group) {\n    platform.deprecated('noflo.helpers.WirePattern group option is deprecated. Please port to Process API');\n  }\n  if (config.field) {\n    platform.deprecated('noflo.helpers.WirePattern field option is deprecated. Please port to Process API');\n  }\n  // Then add deprecation warnings for other unwanted behaviors\n  if (func.length > 4) {\n    platform.deprecated('noflo.helpers.WirePattern postpone and resume are deprecated. Please port to Process API');\n  }\n  if (!config.async) {\n    throw new Error('noflo.helpers.WirePattern synchronous is deprecated. Please use async: true');\n  }\n  if (func.length < 4) {\n    throw new Error('noflo.helpers.WirePattern callback doesn\\'t use callback argument');\n  }\n  if (config.error !== 'error') {\n    platform.deprecated('noflo.helpers.WirePattern custom error port name is deprecated. Please switch to \"error\" or port to WirePattern');\n  }\n};\n\n// Updates component port definitions to control prots for WirePattern\n// -style params array\nsetupControlPorts = function(component, config) {\n  var i, len, param, ref, results;\n  ref = config.params;\n  results = [];\n  for (i = 0, len = ref.length; i < len; i++) {\n    param = ref[i];\n    results.push(component.inPorts[param].options.control = true);\n  }\n  return results;\n};\n\n// Sets up Process API bracket forwarding rules for WirePattern configuration\nsetupBracketForwarding = function(component, config) {\n  var i, inPort, inPorts, j, len, len1, outPort, ref;\n  // Start with empty bracket forwarding config\n  component.forwardBrackets = {};\n  if (!config.forwardGroups) {\n    return;\n  }\n  // By default we forward from all inports\n  inPorts = config.inPorts;\n  if (utils.isArray(config.forwardGroups)) {\n    // Selective forwarding enabled\n    inPorts = config.forwardGroups;\n  }\n  for (i = 0, len = inPorts.length; i < len; i++) {\n    inPort = inPorts[i];\n    component.forwardBrackets[inPort] = [];\n    ref = config.outPorts;\n    // Forward to all declared outports\n    for (j = 0, len1 = ref.length; j < len1; j++) {\n      outPort = ref[j];\n      component.forwardBrackets[inPort].push(outPort);\n    }\n    // If component has an error outport, forward there too\n    if (component.outPorts.error) {\n      component.forwardBrackets[inPort].push('error');\n    }\n  }\n};\n\nsetupErrorHandler = function(component, config, output) {\n  var errorHandler, errors, failHandler, sendErrors;\n  errors = [];\n  errorHandler = function(e, groups = []) {\n    platform.deprecated('noflo.helpers.WirePattern error method is deprecated. Please send error to callback instead');\n    errors.push({\n      err: e,\n      groups: groups\n    });\n    return component.hasErrors = true;\n  };\n  failHandler = function(e = null, groups = []) {\n    platform.deprecated('noflo.helpers.WirePattern fail method is deprecated. Please send error to callback instead');\n    if (e) {\n      errorHandler(e, groups);\n    }\n    sendErrors();\n    return output.done();\n  };\n  sendErrors = function() {\n    if (!errors.length) {\n      return;\n    }\n    if (config.name) {\n      output.sendIP('error', new IP('openBracket', config.name));\n    }\n    errors.forEach(function(e) {\n      var grp, i, j, len, len1, ref, ref1, results;\n      ref = e.groups;\n      for (i = 0, len = ref.length; i < len; i++) {\n        grp = ref[i];\n        output.sendIP('error', new IP('openBracket', grp));\n      }\n      output.sendIP('error', new IP('data', e.err));\n      ref1 = e.groups;\n      results = [];\n      for (j = 0, len1 = ref1.length; j < len1; j++) {\n        grp = ref1[j];\n        results.push(output.sendIP('error', new IP('closeBracket', grp)));\n      }\n      return results;\n    });\n    if (config.name) {\n      output.sendIP('error', new IP('closeBracket', config.name));\n    }\n    component.hasErrors = false;\n    return errors = [];\n  };\n  component.hasErrors = false;\n  component.error = errorHandler;\n  component.fail = failHandler;\n  return sendErrors;\n};\n\nsetupSendDefaults = function(component) {\n  var portsWithDefaults;\n  portsWithDefaults = Object.keys(component.inPorts.ports).filter(function(p) {\n    if (!component.inPorts[p].options.control) {\n      return false;\n    }\n    if (!component.inPorts[p].hasDefault()) {\n      return false;\n    }\n    return true;\n  });\n  return component.sendDefaults = function() {\n    platform.deprecated('noflo.helpers.WirePattern sendDefaults method is deprecated. Please start with a Network');\n    return portsWithDefaults.forEach(function(port) {\n      var tempSocket;\n      tempSocket = InternalSocket.createSocket();\n      component.inPorts[port].attach(tempSocket);\n      tempSocket.send();\n      tempSocket.disconnect();\n      return component.inPorts[port].detach(tempSocket);\n    });\n  };\n};\n\npopulateParams = function(config, input) {\n  var i, idx, j, len, len1, paramPort, params, ref, ref1;\n  if (!config.params.length) {\n    return {};\n  }\n  params = {};\n  ref = config.params;\n  for (i = 0, len = ref.length; i < len; i++) {\n    paramPort = ref[i];\n    if (input.ports[paramPort].isAddressable()) {\n      params[paramPort] = {};\n      ref1 = input.attached(paramPort);\n      for (j = 0, len1 = ref1.length; j < len1; j++) {\n        idx = ref1[j];\n        if (!input.hasData([paramPort, idx])) {\n          continue;\n        }\n        params[paramPort][idx] = input.getData([paramPort, idx]);\n      }\n      continue;\n    }\n    params[paramPort] = input.getData(paramPort);\n  }\n  return params;\n};\n\nreorderBuffer = function(buffer, matcher) {\n  var brackets, i, idx, ip, j, len, len1, results, substream, substreamBrackets, substreamIdx;\n  // Move matching IP packet to be first in buffer\n\n  // Note: the collation mechanism as shown below is not a\n  // very nice way to deal with inputs as it messes with\n  // input buffer order. Much better to handle collation\n  // in a specialized component or to separate flows by\n  // scope.\n\n  // The trick here is to order the input in a way that\n  // still allows bracket forwarding to work. So if we\n  // want to first process packet B in stream like:\n\n  //     < 1\n  //     < 2\n  //     A\n  //     > 2\n  //     < 3\n  //     B\n  //     > 3\n  //     > 1\n\n  // We need to change the stream to be like:\n\n  //     < 1\n  //     < 3\n  //     B\n  //     > 3\n  //     < 2\n  //     A\n  //     > 2\n  //     > 1\n  substream = null;\n  brackets = [];\n  substreamBrackets = [];\n  for (idx = i = 0, len = buffer.length; i < len; idx = ++i) {\n    ip = buffer[idx];\n    if (ip.type === 'openBracket') {\n      brackets.push(ip.data);\n      substreamBrackets.push(ip);\n      continue;\n    }\n    if (ip.type === 'closeBracket') {\n      brackets.pop();\n      if (substream) {\n        substream.push(ip);\n      }\n      if (substreamBrackets.length) {\n        substreamBrackets.pop();\n      }\n      if (substream && !substreamBrackets.length) {\n        break;\n      }\n      continue;\n    }\n    if (!matcher(ip, brackets)) {\n      // Reset substream bracket tracking when we hit data\n      substreamBrackets = [];\n      continue;\n    }\n    // Match found, start tracking the actual substream\n    substream = substreamBrackets.slice(0);\n    substream.push(ip);\n  }\n  // See where in the buffer the matching substream begins\n  substreamIdx = buffer.indexOf(substream[0]);\n  // No need to reorder if matching packet is already first\n  if (substreamIdx === 0) {\n    return;\n  }\n  // Remove substream from its natural position\n  buffer.splice(substreamIdx, substream.length);\n  // Place the substream in the beginning\n  substream.reverse();\n  results = [];\n  for (j = 0, len1 = substream.length; j < len1; j++) {\n    ip = substream[j];\n    results.push(buffer.unshift(ip));\n  }\n  return results;\n};\n\nhandleInputCollation = function(data, config, input, port, idx) {\n  var buf;\n  if (!config.group && !config.field) {\n    return;\n  }\n  if (config.group) {\n    buf = input.ports[port].getBuffer(input.scope, idx);\n    reorderBuffer(buf, function(ip, brackets) {\n      var grp, i, len, ref;\n      ref = input.collatedBy.brackets;\n      for (idx = i = 0, len = ref.length; i < len; idx = ++i) {\n        grp = ref[idx];\n        if (brackets[idx] !== grp) {\n          return false;\n        }\n      }\n      return true;\n    });\n  }\n  if (config.field) {\n    data[config.field] = input.collatedBy.field;\n    buf = input.ports[port].getBuffer(input.scope, idx);\n    return reorderBuffer(buf, function(ip) {\n      return ip.data[config.field] === data[config.field];\n    });\n  }\n};\n\ngetInputData = function(config, input) {\n  var data, i, idx, j, len, len1, port, ref, ref1;\n  data = {};\n  ref = config.inPorts;\n  for (i = 0, len = ref.length; i < len; i++) {\n    port = ref[i];\n    if (input.ports[port].isAddressable()) {\n      data[port] = {};\n      ref1 = input.attached(port);\n      for (j = 0, len1 = ref1.length; j < len1; j++) {\n        idx = ref1[j];\n        if (!input.hasData([port, idx])) {\n          continue;\n        }\n        handleInputCollation(data, config, input, port, idx);\n        data[port][idx] = input.getData([port, idx]);\n      }\n      continue;\n    }\n    if (!input.hasData(port)) {\n      continue;\n    }\n    handleInputCollation(data, config, input, port);\n    data[port] = input.getData(port);\n  }\n  if (config.inPorts.length === 1) {\n    return data[config.inPorts[0]];\n  }\n  return data;\n};\n\ngetGroupContext = function(component, port, input) {\n  var ref, ref1;\n  if (((ref = input.result.__bracketContext) != null ? ref[port] : void 0) == null) {\n    return [];\n  }\n  if ((ref1 = input.collatedBy) != null ? ref1.brackets : void 0) {\n    return input.collatedBy.brackets;\n  }\n  return input.result.__bracketContext[port].filter(function(c) {\n    return c.source === port;\n  }).map(function(c) {\n    return c.ip.data;\n  });\n};\n\ngetOutputProxy = function(ports, output) {\n  var outProxy;\n  outProxy = {};\n  ports.forEach(function(port) {\n    return outProxy[port] = {\n      connect: function() {},\n      beginGroup: function(group, idx) {\n        var ip;\n        ip = new IP('openBracket', group);\n        ip.index = idx;\n        return output.sendIP(port, ip);\n      },\n      send: function(data, idx) {\n        var ip;\n        ip = new IP('data', data);\n        ip.index = idx;\n        return output.sendIP(port, ip);\n      },\n      endGroup: function(group, idx) {\n        var ip;\n        ip = new IP('closeBracket', group);\n        ip.index = idx;\n        return output.sendIP(port, ip);\n      },\n      disconnect: function() {}\n    };\n  });\n  if (ports.length === 1) {\n    return outProxy[ports[0]];\n  }\n  return outProxy;\n};\n\ncheckWirePatternPreconditions = function(config, input, output) {\n  var attached, i, idx, inputsOk, j, len, len1, packetsDropped, paramsOk, port, ref;\n  // First check for required params\n  paramsOk = checkWirePatternPreconditionsParams(config, input);\n  // Then check actual input ports\n  inputsOk = checkWirePatternPreconditionsInput(config, input);\n  // If input port has data but param requirements are not met, and we're in dropInput\n  // mode, read the data and call done\n  if (config.dropInput && !paramsOk) {\n    // Drop all received input packets since params are not available\n    packetsDropped = false;\n    ref = config.inPorts;\n    for (i = 0, len = ref.length; i < len; i++) {\n      port = ref[i];\n      if (input.ports[port].isAddressable()) {\n        attached = input.attached(port);\n        if (!attached.length) {\n          continue;\n        }\n        for (j = 0, len1 = attached.length; j < len1; j++) {\n          idx = attached[j];\n          while (input.has([port, idx])) {\n            packetsDropped = true;\n            input.get([port, idx]).drop();\n          }\n        }\n        continue;\n      }\n      while (input.has(port)) {\n        packetsDropped = true;\n        input.get(port).drop();\n      }\n    }\n    if (packetsDropped) {\n      // If we ended up dropping inputs because of missing params, we need to\n      // deactivate here\n      output.done();\n    }\n  }\n  // Pass precondition check only if both params and inputs are OK\n  return inputsOk && paramsOk;\n};\n\ncheckWirePatternPreconditionsParams = function(config, input) {\n  var attached, i, len, param, ref, withData;\n  ref = config.params;\n  for (i = 0, len = ref.length; i < len; i++) {\n    param = ref[i];\n    if (!input.ports[param].isRequired()) {\n      continue;\n    }\n    if (input.ports[param].isAddressable()) {\n      attached = input.attached(param);\n      if (!attached.length) {\n        return false;\n      }\n      withData = attached.filter(function(idx) {\n        return input.hasData([param, idx]);\n      });\n      if (config.arrayPolicy.params === 'all') {\n        if (withData.length !== attached.length) {\n          return false;\n        }\n        continue;\n      }\n      if (!withData.length) {\n        return false;\n      }\n      continue;\n    }\n    if (!input.hasData(param)) {\n      return false;\n    }\n  }\n  return true;\n};\n\ncheckWirePatternPreconditionsInput = function(config, input) {\n  var attached, bracketsAtPorts, checkBrackets, checkPacket, checkPort, i, len, port, ref, withData;\n  if (config.group) {\n    bracketsAtPorts = {};\n    input.collatedBy = {\n      brackets: [],\n      ready: false\n    };\n    checkBrackets = function(left, right) {\n      var bracket, i, idx, len;\n      for (idx = i = 0, len = left.length; i < len; idx = ++i) {\n        bracket = left[idx];\n        if (right[idx] !== bracket) {\n          return false;\n        }\n      }\n      return true;\n    };\n    checkPacket = function(ip, brackets) {\n      var bracketId, bracketsToCheck;\n      // With data packets we validate bracket matching\n      bracketsToCheck = brackets.slice(0);\n      if (config.group instanceof RegExp) {\n        // Basic regexp validation for the brackets\n        bracketsToCheck = bracketsToCheck.slice(0, 1);\n        if (!bracketsToCheck.length) {\n          return false;\n        }\n        if (!config.group.test(bracketsToCheck[0])) {\n          return false;\n        }\n      }\n      if (input.collatedBy.ready) {\n        // We already know what brackets we're looking for, match\n        return checkBrackets(input.collatedBy.brackets, bracketsToCheck);\n      }\n      bracketId = bracketsToCheck.join(':');\n      if (!bracketsAtPorts[bracketId]) {\n        bracketsAtPorts[bracketId] = [];\n      }\n      if (bracketsAtPorts[bracketId].indexOf(port) === -1) {\n        // Register that this port had these brackets\n        bracketsAtPorts[bracketId].push(port);\n      }\n      if (config.inPorts.indexOf(port) !== config.inPorts.length - 1) {\n        // To prevent deadlocks we see all bracket sets, and validate if at least\n        // one of them matches. This means we return true until the last inport\n        // where we actually check.\n        return true;\n      }\n      if (bracketsAtPorts[bracketId].length !== config.inPorts.length) {\n        // Brackets that are not in every port are invalid\n        return false;\n      }\n      if (input.collatedBy.ready) {\n        return false;\n      }\n      input.collatedBy.ready = true;\n      input.collatedBy.brackets = bracketsToCheck;\n      return true;\n    };\n  }\n  if (config.field) {\n    input.collatedBy = {\n      field: void 0,\n      ready: false\n    };\n  }\n  checkPort = function(port) {\n    var buf, dataBrackets, hasData, hasMatching, i, ip, len, portBrackets;\n    if (!config.group && !config.field) {\n      // Without collation rules any data packet is OK\n      return input.hasData(port);\n    }\n    // With collation rules set we need can only work when we have full\n    // streams\n    if (config.group) {\n      portBrackets = [];\n      dataBrackets = [];\n      hasMatching = false;\n      buf = input.ports[port].getBuffer(input.scope);\n      for (i = 0, len = buf.length; i < len; i++) {\n        ip = buf[i];\n        if (ip.type === 'openBracket') {\n          portBrackets.push(ip.data);\n          continue;\n        }\n        if (ip.type === 'closeBracket') {\n          portBrackets.pop();\n          if (portBrackets.length) {\n            continue;\n          }\n          if (!hasData) {\n            continue;\n          }\n          hasMatching = true;\n          continue;\n        }\n        hasData = checkPacket(ip, portBrackets);\n        continue;\n      }\n      return hasMatching;\n    }\n    if (config.field) {\n      return input.hasStream(port, function(ip) {\n        // Use first data packet to define what to collate by\n        if (!input.collatedBy.ready) {\n          input.collatedBy.field = ip.data[config.field];\n          input.collatedBy.ready = true;\n          return true;\n        }\n        return ip.data[config.field] === input.collatedBy.field;\n      });\n    }\n  };\n  ref = config.inPorts;\n  for (i = 0, len = ref.length; i < len; i++) {\n    port = ref[i];\n    if (input.ports[port].isAddressable()) {\n      attached = input.attached(port);\n      if (!attached.length) {\n        return false;\n      }\n      withData = attached.filter(function(idx) {\n        return checkPort([port, idx]);\n      });\n      if (config.arrayPolicy['in'] === 'all') {\n        if (withData.length !== attached.length) {\n          return false;\n        }\n        continue;\n      }\n      if (!withData.length) {\n        return false;\n      }\n      continue;\n    }\n    if (!checkPort(port)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n// `CustomError` returns an `Error` object carrying additional properties.\nexports.CustomError = function(message, options) {\n  var err;\n  err = new Error(message);\n  return exports.CustomizeError(err, options);\n};\n\n// `CustomizeError` sets additional options for an `Error` object.\nexports.CustomizeError = function(err, options) {\n  var key, val;\n  for (key in options) {\n    if (!hasProp.call(options, key)) continue;\n    val = options[key];\n    err[key] = val;\n  }\n  return err;\n};\n","//     NoFlo - Flow-Based Programming for JavaScript\n//     (c) 2017-2018 Flowhub UG\n//     NoFlo may be freely distributed under the MIT license\nvar ComponentLoader, Graph, IP, Network, getType, internalSocket, normalizeOptions, normalizeOutput, prepareInputMap, prepareNetwork, runNetwork, sendOutputMap;\n\nComponentLoader = require('./ComponentLoader').ComponentLoader;\n\nNetwork = require('./Network').Network;\n\nIP = require('./IP');\n\ninternalSocket = require('./InternalSocket');\n\nGraph = require('fbp-graph').Graph;\n\n// ## asCallback embedding API\n\n// asCallback is a helper for embedding NoFlo components or\n// graphs in other JavaScript programs.\n\n// By using the `noflo.asCallback` function, you can turn any\n// NoFlo component or NoFlo Graph instance into a regular,\n// Node.js-style JavaScript function.\n\n// Each call to that function starts a new NoFlo network where\n// the given input arguments are sent as IP objects to matching\n// inports. Once the network finishes, the IP objects received\n// from the network will be sent to the callback function.\n\n// If there was anything sent to an `error` outport, this will\n// be provided as the error argument to the callback.\n\n// ### Option normalization\n\n// Here we handle the input valus given to the `asCallback`\n// function. This allows passing things like a pre-initialized\n// NoFlo ComponentLoader, or giving the component loading\n// baseDir context.\nnormalizeOptions = function(options, component) {\n  if (!options) {\n    options = {};\n  }\n  if (!options.name) {\n    options.name = component;\n  }\n  if (options.loader) {\n    options.baseDir = options.loader.baseDir;\n  }\n  if (!options.baseDir && process && process.cwd) {\n    options.baseDir = process.cwd();\n  }\n  if (!options.loader) {\n    options.loader = new ComponentLoader(options.baseDir);\n  }\n  if (!options.raw) {\n    options.raw = false;\n  }\n  return options;\n};\n\n// ### Network preparation\n\n// Each invocation of the asCallback-wrapped NoFlo graph\n// creates a new network. This way we can isolate multiple\n// executions of the function in their own contexts.\nprepareNetwork = function(component, options, callback) {\n  var network;\n  // If we were given a graph instance, then just create a network\n  if (typeof component === 'object') {\n    component.componentLoader = options.loader;\n    network = new Network(component, options);\n    // Wire the network up\n    network.connect(function(err) {\n      if (err) {\n        return callback(err);\n      }\n      return callback(null, network);\n    });\n    return;\n  }\n  // Start by loading the component\n  return options.loader.load(component, function(err, instance) {\n    var def, graph, inPorts, nodeName, outPorts, port;\n    if (err) {\n      return callback(err);\n    }\n    // Prepare a graph wrapping the component\n    graph = new Graph(options.name);\n    nodeName = options.name;\n    graph.addNode(nodeName, component);\n    // Expose ports\n    inPorts = instance.inPorts.ports;\n    outPorts = instance.outPorts.ports;\n    for (port in inPorts) {\n      def = inPorts[port];\n      graph.addInport(port, nodeName, port);\n    }\n    for (port in outPorts) {\n      def = outPorts[port];\n      graph.addOutport(port, nodeName, port);\n    }\n    // Prepare network\n    graph.componentLoader = options.loader;\n    network = new Network(graph, options);\n    // Wire the network up and start execution\n    return network.connect(function(err) {\n      if (err) {\n        return callback(err);\n      }\n      return callback(null, network);\n    });\n  });\n};\n\n// ### Network execution\n\n// Once network is ready, we connect to all of its exported\n// in and outports and start the network.\n\n// Input data is sent to the inports, and we collect IP\n// packets received on the outports.\n\n// Once the network finishes, we send the resulting IP\n// objects to the callback.\nrunNetwork = function(network, inputs, options, callback) {\n  var inPorts, inSockets, outPorts, outSockets, received;\n  // Prepare inports\n  inPorts = Object.keys(network.graph.inports);\n  inSockets = {};\n  // Subscribe outports\n  received = [];\n  outPorts = Object.keys(network.graph.outports);\n  outSockets = {};\n  outPorts.forEach(function(outport) {\n    var portDef, process;\n    portDef = network.graph.outports[outport];\n    process = network.getNode(portDef.process);\n    outSockets[outport] = internalSocket.createSocket();\n    process.component.outPorts[portDef.port].attach(outSockets[outport]);\n    outSockets[outport].from = {\n      process: process,\n      port: portDef.port\n    };\n    return outSockets[outport].on('ip', function(ip) {\n      var res;\n      res = {};\n      res[outport] = ip;\n      return received.push(res);\n    });\n  });\n  // Subscribe network finish\n  network.once('end', function() {\n    var port, socket;\n// Clear listeners\n    for (port in outSockets) {\n      socket = outSockets[port];\n      socket.from.process.component.outPorts[socket.from.port].detach(socket);\n    }\n    outSockets = {};\n    inSockets = {};\n    return callback(null, received);\n  });\n  // Start network\n  return network.start(function(err) {\n    var i, inputMap, len, port, portDef, process, results, value;\n    if (err) {\n      return callback(err);\n    }\n// Send inputs\n    results = [];\n    for (i = 0, len = inputs.length; i < len; i++) {\n      inputMap = inputs[i];\n      results.push((function() {\n        var results1;\n        results1 = [];\n        for (port in inputMap) {\n          value = inputMap[port];\n          if (!inSockets[port]) {\n            portDef = network.graph.inports[port];\n            process = network.getNode(portDef.process);\n            inSockets[port] = internalSocket.createSocket();\n            process.component.inPorts[portDef.port].attach(inSockets[port]);\n          }\n          if (IP.isIP(value)) {\n            inSockets[port].post(value);\n            continue;\n          }\n          results1.push(inSockets[port].post(new IP('data', value)));\n        }\n        return results1;\n      })());\n    }\n    return results;\n  });\n};\n\ngetType = function(inputs, network) {\n  var key, maps, value;\n  if (typeof inputs !== 'object') {\n    // Scalar values are always simple inputs\n    return 'simple';\n  }\n  if (Array.isArray(inputs)) {\n    maps = inputs.filter(function(entry) {\n      return getType(entry, network) === 'map';\n    });\n    if (maps.length === inputs.length) {\n      // If each member if the array is an input map, this is a sequence\n      return 'sequence';\n    }\n    // Otherwise arrays must be simple inputs\n    return 'simple';\n  }\n  if (!Object.keys(inputs).length) {\n    // Empty objects can't be maps\n    return 'simple';\n  }\n  for (key in inputs) {\n    value = inputs[key];\n    if (!network.graph.inports[key]) {\n      return 'simple';\n    }\n  }\n  return 'map';\n};\n\nprepareInputMap = function(inputs, inputType, network) {\n  var inPort, map;\n  if (inputType === 'sequence') {\n    // Sequence we can use as-is\n    return inputs;\n  }\n  if (inputType === 'map') {\n    // We can turn a map to a sequence by wrapping it in an array\n    return [inputs];\n  }\n  // Simple inputs need to be converted to a sequence\n  inPort = Object.keys(network.graph.inports)[0];\n  if (network.graph.inports.in) {\n    // If we have a port named \"IN\", send to that\n    inPort = 'in';\n  }\n  map = {};\n  map[inPort] = inputs;\n  return [map];\n};\n\nnormalizeOutput = function(values, options) {\n  var current, i, len, packet, previous, result;\n  if (options.raw) {\n    return values;\n  }\n  result = [];\n  previous = null;\n  current = result;\n  for (i = 0, len = values.length; i < len; i++) {\n    packet = values[i];\n    if (packet.type === 'openBracket') {\n      previous = current;\n      current = [];\n      previous.push(current);\n    }\n    if (packet.type === 'data') {\n      current.push(packet.data);\n    }\n    if (packet.type === 'closeBracket') {\n      current = previous;\n    }\n  }\n  if (result.length === 1) {\n    return result[0];\n  }\n  return result;\n};\n\nsendOutputMap = function(outputs, resultType, options, callback) {\n  var errors, i, key, len, map, mappedOutputs, outputKeys, packets, port, result, val, withValue;\n  // First check if the output sequence contains errors\n  errors = outputs.filter(function(map) {\n    return map.error != null;\n  }).map(function(map) {\n    return map.error;\n  });\n  if (errors.length) {\n    return callback(normalizeOutput(errors, options));\n  }\n  if (resultType === 'sequence') {\n    return callback(null, outputs.map(function(map) {\n      var key, res, val;\n      res = {};\n      for (key in map) {\n        val = map[key];\n        if (options.raw) {\n          res[key] = val;\n          continue;\n        }\n        res[key] = normalizeOutput([val], options);\n      }\n      return res;\n    }));\n  }\n  // Flatten the sequence\n  mappedOutputs = {};\n  for (i = 0, len = outputs.length; i < len; i++) {\n    map = outputs[i];\n    for (key in map) {\n      val = map[key];\n      if (!mappedOutputs[key]) {\n        mappedOutputs[key] = [];\n      }\n      mappedOutputs[key].push(val);\n    }\n  }\n  outputKeys = Object.keys(mappedOutputs);\n  withValue = outputKeys.filter(function(outport) {\n    return mappedOutputs[outport].length > 0;\n  });\n  if (withValue.length === 0) {\n    // No output\n    return callback(null);\n  }\n  if (withValue.length === 1 && resultType === 'simple') {\n    // Single outport\n    return callback(null, normalizeOutput(mappedOutputs[withValue[0]], options));\n  }\n  result = {};\n  for (port in mappedOutputs) {\n    packets = mappedOutputs[port];\n    result[port] = normalizeOutput(packets, options);\n  }\n  return callback(null, result);\n};\n\nexports.asCallback = function(component, options) {\n  options = normalizeOptions(options, component);\n  return function(inputs, callback) {\n    return prepareNetwork(component, options, function(err, network) {\n      var inputMap, resultType;\n      if (err) {\n        return callback(err);\n      }\n      resultType = getType(inputs, network);\n      inputMap = prepareInputMap(inputs, resultType, network);\n      return runNetwork(network, inputMap, options, function(err, outputMap) {\n        if (err) {\n          return callback(err);\n        }\n        return sendOutputMap(outputMap, resultType, options, callback);\n      });\n    });\n  };\n};\n","//     NoFlo - Flow-Based Programming for JavaScript\n//     (c) 2018 Flowhub UG\n//     NoFlo may be freely distributed under the MIT license\nvar Component, getParams;\n\ngetParams = require('get-function-params');\n\n({Component} = require('./Component'));\n\n// ## asComponent generator API\n\n// asComponent is a helper for turning JavaScript functions into\n// NoFlo components.\n\n// Each call to this function returns a component instance where\n// the input parameters of the given function are converted into\n// NoFlo inports, and there are `out` and `error` ports for the\n// results of the function execution.\n\n// Variants supported:\n\n// * Regular synchronous functions: return value gets sent to `out`. Thrown errors get sent to `error`\n// * Functions returning a Promise: resolved promises get sent to `out`, rejected promises to `error`\n// * Functions taking a Node.js style asynchronous callback: `err` argument to callback gets sent to `error`, result gets sent to `out`\n\n// Usage example:\n\n//     exports.getComponent = function () {\n//       return noflo.asComponent(Math.random, {\n//         description: 'Generate a random number',\n//       });\n//     };\n\n// ### Wrapping built-in functions\n\n// Built-in JavaScript functions don't make their arguments introspectable. Because of this, these\n// cannot be directly converted to components. You'll have to provide a wrapper JavaScript function to make\n// the arguments appear as ports.\n\n// Example:\n\n//     exports.getComponent = function () {\n//       return noflo.asComponent(function (selector) {\n//         return document.querySelector(selector);\n//       }, {\n//         description: 'Return an element matching the CSS selector',\n//         icon: 'html5',\n//       });\n//     };\n\n// ### Default values\n\n// Function arguments with a default value are supported in ES6 environments. The default arguments are visible via the component's\n// port interface.\n\n// However, ES5 transpilation doesn't work with default values. In these cases the port with a default won't be visible. It is\n// recommended to use default values only with components that don't need to run in legacy browsers.\nexports.asComponent = function(func, options) {\n  var c, hasCallback, i, len, p, params, portOptions;\n  hasCallback = false;\n  params = getParams(func).filter(function(p) {\n    if (p.param !== 'callback') {\n      return true;\n    }\n    hasCallback = true;\n    return false;\n  });\n  c = new Component(options);\n  for (i = 0, len = params.length; i < len; i++) {\n    p = params[i];\n    portOptions = {\n      required: true\n    };\n    if (typeof p.default !== 'undefined') {\n      portOptions.default = p.default;\n      portOptions.required = false;\n    }\n    c.inPorts.add(p.param, portOptions);\n    c.forwardBrackets[p.param] = ['out', 'error'];\n  }\n  if (!params.length) {\n    c.inPorts.add('in', {\n      datatype: 'bang'\n    });\n  }\n  c.outPorts.add('out');\n  c.outPorts.add('error');\n  c.process(function(input, output) {\n    var j, len1, res, values;\n    if (params.length) {\n      for (j = 0, len1 = params.length; j < len1; j++) {\n        p = params[j];\n        if (!input.hasData(p.param)) {\n          return;\n        }\n      }\n      values = params.map(function(p) {\n        return input.getData(p.param);\n      });\n    } else {\n      if (!input.hasData('in')) {\n        return;\n      }\n      input.getData('in');\n      values = [];\n    }\n    if (hasCallback) {\n      // Handle Node.js style async functions\n      values.push(function(err, res) {\n        if (err) {\n          return output.done(err);\n        }\n        return output.sendDone(res);\n      });\n      res = func.apply(null, values);\n      return;\n    }\n    res = func.apply(null, values);\n    if (res && typeof res === 'object' && typeof res.then === 'function') {\n      // Result is a Promise, resolve and handle\n      res.then(function(val) {\n        return output.sendDone(val);\n      }, function(err) {\n        return output.done(err);\n      });\n      return;\n    }\n    return output.sendDone(res);\n  });\n  return c;\n};\n","var patterns = require('./src/patterns')\nvar encodeStrings = require('./src/encodeStrings')\nvar encode = require('./src/encode')\nvar decode = require('./src/decode')\n\nmodule.exports = function (fn) {\n  var cache = []\n\n  var fnString = fn.toString().replace(/\\/\\*.*?\\*\\//g, '')\n  fnString = encodeStrings(cache, fnString)\n\n  var params = encode(cache, fnString, patterns.prePatterns)\n    .replace(/\\n/g, '')\n    .replace(/\\s*async\\s*/, '')\n    .match(/(?:function\\s*\\((.*?)\\)|\\((.*?)\\))|(.*?)\\s*=>/)\n\n  params = params[1] || params[2] || params[3] || ''\n\n  return encode(cache, params, patterns.postPatterns)\n    .split(',')\n    .filter(function (i) { return i }) // filter empty results\n    .map(function (i) {\n      i = decode(cache, i, true)\n      var data = i.split('=')\n      var obj = {\n        param: data[0].trim()\n      }\n      if (data[1]) obj.default = decode(cache, data.slice(1).join('='))\n      return obj\n    })\n}\n","var stringPatterns = require('./patterns').stringPatterns\nvar delim = require('./delim')\n\nmodule.exports = function (cache, string) {\n  while (true) {\n    var shortestString = stringPatterns\n      .reduce(function (arr, pattern) {\n        return arr.concat(string.match(pattern) || [])\n      }, [])\n      .sort(function (a, b) { return a.length - b.length })\n      [0]\n\n    if (!shortestString) return string\n    string = string.replace(shortestString, delim(cache.push(shortestString)))\n  }\n}","var delim = require('./delim')\n\nmodule.exports = function (cache, string, patterns) {\n  patterns.forEach(function (pattern) {\n    while (pattern.test(string)) {\n      var match = pattern.exec(string)[0]\n      string = string.replace(match, delim(cache.push(match)))\n    }\n  })\n  return string\n}\n","var delim = require('./delim')\n\nmodule.exports = function (cache, string, skipEval) {\n  var pattern = /:~:(\\d+?):~:/\n  while (pattern.test(string)) {\n    var id = pattern.exec(string)[1]\n    string = string.replace(delim(id), cache[id-1])\n  }\n  return skipEval ? string : eval('('+string+')')\n}\n","module.exports = {\n  postMessage: require('./runtime/postmessage'),\n  iframe: require('./runtime/iframe'),\n  opener: require('./runtime/opener')\n};\n","var EventEmitter, RuntimeProtocol, findPort, noflo, portToPayload, portsPayload, sendToInport;\n\nnoflo = require('noflo');\n\nEventEmitter = require('events').EventEmitter;\n\nsendToInport = function(port, event, payload) {\n  var socket;\n  socket = noflo.internalSocket.createSocket();\n  port.attach(socket);\n  switch (event) {\n    case 'begingroup':\n      socket.beginGroup(payload);\n      break;\n    case 'endgroup':\n      socket.endGroup(payload);\n      break;\n    case 'data':\n      socket.send(payload);\n  }\n  return port.detach(socket);\n};\n\nfindPort = function(network, name, inPort) {\n  var component, internal, ref;\n  if (!network.graph) {\n    return;\n  }\n  if (inPort) {\n    internal = network.graph.inports[name];\n  } else {\n    internal = network.graph.outports[name];\n  }\n  if (!(internal != null ? internal.process : void 0)) {\n    return;\n  }\n  component = (ref = network.getNode(internal.process)) != null ? ref.component : void 0;\n  if (!component) {\n    return;\n  }\n  if (inPort) {\n    return component.inPorts[internal.port];\n  }\n  return component.outPorts[internal.port];\n};\n\nportToPayload = function(pub, internal, network, inPort) {\n  var def, port, ref, ref1;\n  def = {\n    id: pub,\n    type: 'all',\n    description: (ref = internal.metadata) != null ? ref.description : void 0,\n    addressable: false,\n    required: false\n  };\n  port = findPort(network, pub, inPort);\n  if (!port) {\n    // Network has been prepared but isn't running yet so\n    // we don't have full component info\n    return def;\n  }\n  def.type = port.getDataType() || 'all';\n  if (typeof port.getSchema === \"function\" ? port.getSchema() : void 0) {\n    def.schema = port.getSchema();\n  }\n  def.description = ((ref1 = internal.metadata) != null ? ref1.description : void 0) || port.getDescription() || '';\n  def.addressable = port.isAddressable();\n  def.required = port.isRequired();\n  return def;\n};\n\nportsPayload = function(name, network) {\n  var internal, payload, pub, ref, ref1;\n  payload = {\n    graph: name,\n    inPorts: [],\n    outPorts: []\n  };\n  if (!(network != null ? network.graph : void 0)) {\n    return payload;\n  }\n  ref = network.graph.inports;\n  for (pub in ref) {\n    internal = ref[pub];\n    payload.inPorts.push(portToPayload(pub, internal, network, true));\n  }\n  ref1 = network.graph.outports;\n  for (pub in ref1) {\n    internal = ref1[pub];\n    payload.outPorts.push(portToPayload(pub, internal, network, false));\n  }\n  return payload;\n};\n\nRuntimeProtocol = class RuntimeProtocol extends EventEmitter {\n  constructor(transport) {\n    super();\n    this.transport = transport;\n    this.outputSockets = {}; // graphName -> publicPort -> noflo.Socket\n    this.mainGraph = null;\n    this.transport.network.on('addnetwork', (network, name) => {\n      this.subscribeExportedPorts(name, network, true);\n      this.subscribeOutPorts(name, network);\n      this.sendPorts(name, network);\n      if (network.isStarted()) {\n        // processes don't exist until started\n        this.subscribeOutdata(name, network, true);\n      }\n      return network.on('start', () => {\n        // processes don't exist until started\n        return this.subscribeOutdata(name, network, true);\n      });\n    });\n    this.transport.network.on('removenetwork', (network, name) => {\n      this.subscribeOutdata(name, network, false);\n      this.subscribeOutPorts(name, network);\n      this.subscribeExportedPorts(name, network.graph, false);\n      return this.sendPorts(name, null);\n    });\n  }\n\n  send(topic, payload, context) {\n    return this.transport.send('runtime', topic, payload, context);\n  }\n\n  sendAll(topic, payload) {\n    return this.transport.sendAll('runtime', topic, payload);\n  }\n\n  sendError(message, context) {\n    return this.send('error', new Error(message), context);\n  }\n\n  receive(topic, payload, context) {\n    switch (topic) {\n      case 'getruntime':\n        return this.getRuntime(payload, context);\n      case 'packet':\n        return this.sendPacket(payload, (err) => {\n          if (err) {\n            this.sendError(err.message, context);\n            return;\n          }\n          this.send('packetsent', {\n            port: payload.port,\n            event: payload.event,\n            graph: payload.graph,\n            payload: payload.payload\n          }, context);\n        });\n      default:\n        return this.send('error', new Error(`runtime:${topic} not supported`), context);\n    }\n  }\n\n  getRuntime(payload, context) {\n    var capabilities, name, network, permittedCapabilities, ref, results, type;\n    type = this.transport.options.type;\n    if (!type) {\n      if (noflo.isBrowser()) {\n        type = 'noflo-browser';\n      } else {\n        type = 'noflo-nodejs';\n      }\n    }\n    capabilities = this.transport.options.capabilities;\n    permittedCapabilities = capabilities.filter((capability) => {\n      return this.transport.canDo(capability, payload.secret);\n    });\n    payload = {\n      type: type,\n      version: this.transport.version,\n      capabilities: permittedCapabilities,\n      allCapabilities: capabilities\n    };\n    if (this.mainGraph) {\n      payload.graph = this.mainGraph;\n    }\n    if (this.transport.options.id) {\n      // Add project metadata if available\n      payload.id = this.transport.options.id;\n    }\n    if (this.transport.options.label) {\n      payload.label = this.transport.options.label;\n    }\n    if (this.transport.options.namespace) {\n      payload.namespace = this.transport.options.namespace;\n    }\n    if (this.transport.options.repository) {\n      payload.repository = this.transport.options.repository;\n    }\n    if (this.transport.options.repositoryVersion) {\n      payload.repositoryVersion = this.transport.options.repositoryVersion;\n    }\n    this.send('runtime', payload, context);\n    ref = this.transport.network.networks;\n    // send port info about currently set up networks\n    results = [];\n    for (name in ref) {\n      network = ref[name];\n      results.push(this.sendPorts(name, network, context));\n    }\n    return results;\n  }\n\n  sendPorts(name, network, context) {\n    var payload;\n    payload = portsPayload(name, network);\n    this.emit('ports', payload);\n    if (!context) {\n      return this.sendAll('ports', payload);\n    } else {\n      return this.send('ports', payload, context);\n    }\n  }\n\n  setMainGraph(id) {\n    return this.mainGraph = id;\n  }\n\n  // XXX: should send updated runtime info?\n  subscribeExportedPorts(name, network, add) {\n    var d, dependencies, i, j, len, len1, results, sendExportedPorts;\n    sendExportedPorts = () => {\n      return this.sendPorts(name, network);\n    };\n    dependencies = ['addInport', 'addOutport', 'removeInport', 'removeOutport'];\n    for (i = 0, len = dependencies.length; i < len; i++) {\n      d = dependencies[i];\n      network.graph.removeListener(d, sendExportedPorts);\n    }\n    if (add) {\n      results = [];\n      for (j = 0, len1 = dependencies.length; j < len1; j++) {\n        d = dependencies[j];\n        results.push(network.graph.on(d, sendExportedPorts));\n      }\n      return results;\n    }\n  }\n\n  subscribeOutPorts(name, network, add) {\n    var graph, portAdded, portRemoved;\n    portRemoved = () => {\n      return this.subscribeOutdata(name, network, false);\n    };\n    portAdded = () => {\n      return this.subscribeOutdata(name, network, true);\n    };\n    graph = network.graph;\n    graph.removeListener('addOutport', portAdded);\n    graph.removeListener('removeOutport', portRemoved);\n    if (add) {\n      graph.on('addOutport', portAdded);\n      return graph.on('removeOutport', portRemoved);\n    }\n  }\n\n  subscribeOutdata(graphName, network, add) {\n    var event, graphSockets, i, len, pub, socket;\n    if (!this.outputSockets[graphName]) {\n      // Unsubscribe all\n      this.outputSockets[graphName] = {};\n    }\n    graphSockets = this.outputSockets[graphName];\n    for (pub in graphSockets) {\n      socket = graphSockets[pub];\n      for (i = 0, len = events.length; i < len; i++) {\n        event = events[i];\n        socket.removeAllListeners(event);\n      }\n    }\n    graphSockets = {};\n    if (!add) {\n      return;\n    }\n    // Subscribe new\n    return Object.keys(network.graph.outports).forEach((pub) => {\n      var component, internal;\n      internal = network.graph.outports[pub];\n      socket = noflo.internalSocket.createSocket();\n      graphSockets[pub] = socket;\n      component = network.processes[internal.process].component;\n      if (!(component != null ? component.outPorts[internal.port] : void 0)) {\n        throw new Error(`Exported outport ${internal.port} in node ${internal.process} not found`);\n      }\n      component.outPorts[internal.port].attach(socket);\n      return socket.on('ip', (ip) => {\n        switch (ip.type) {\n          case 'openBracket':\n            event = 'begingroup';\n            break;\n          case 'closeBracket':\n            event = 'endgroup';\n            break;\n          default:\n            event = ip.type;\n        }\n        this.emit('packet', {\n          port: pub,\n          event: event,\n          graph: graphName,\n          payload: ip.data\n        });\n        return this.sendAll('packet', {\n          port: pub,\n          event: event,\n          graph: graphName,\n          payload: ip.data\n        });\n      });\n    });\n  }\n\n  sendPacket(payload, callback) {\n    var network, port;\n    network = this.transport.network.networks[payload.graph];\n    if (!network) {\n      return callback(new Error(`Cannot find network for graph ${payload.graph}`));\n    }\n    port = findPort(network.network, payload.port, true);\n    if (!port) {\n      return callback(new Error(`Cannot find internal port for ${payload.port}`));\n    }\n    sendToInport(port, payload.event, payload.payload);\n    return callback();\n  }\n\n};\n\nmodule.exports = RuntimeProtocol;\n","var GraphProtocol, noflo;\n\nnoflo = require('noflo');\n\nGraphProtocol = class GraphProtocol {\n  constructor(transport) {\n    this.transport = transport;\n    this.graphs = {};\n  }\n\n  send(topic, payload, context) {\n    return this.transport.send('graph', topic, payload, context);\n  }\n\n  sendAll(topic, payload) {\n    return this.transport.sendAll('graph', topic, payload);\n  }\n\n  receive(topic, payload, context) {\n    var graph;\n    // Find locally stored graph by ID\n    if (topic !== 'clear') {\n      graph = this.resolveGraph(payload, context);\n      if (!graph) {\n        return;\n      }\n    }\n    switch (topic) {\n      case 'clear':\n        return this.initGraph(payload, context);\n      case 'addnode':\n        return this.addNode(graph, payload, context);\n      case 'removenode':\n        return this.removeNode(graph, payload, context);\n      case 'renamenode':\n        return this.renameNode(graph, payload, context);\n      case 'changenode':\n        return this.changeNode(graph, payload, context);\n      case 'addedge':\n        return this.addEdge(graph, payload, context);\n      case 'removeedge':\n        return this.removeEdge(graph, payload, context);\n      case 'changeedge':\n        return this.changeEdge(graph, payload, context);\n      case 'addinitial':\n        return this.addInitial(graph, payload, context);\n      case 'removeinitial':\n        return this.removeInitial(graph, payload, context);\n      case 'addinport':\n        return this.addInport(graph, payload, context);\n      case 'removeinport':\n        return this.removeInport(graph, payload, context);\n      case 'renameinport':\n        return this.renameInport(graph, payload, context);\n      case 'addoutport':\n        return this.addOutport(graph, payload, context);\n      case 'removeoutport':\n        return this.removeOutport(graph, payload, context);\n      case 'renameoutport':\n        return this.renameOutport(graph, payload, context);\n      case 'addgroup':\n        return this.addGroup(graph, payload, context);\n      case 'removegroup':\n        return this.removeGroup(graph, payload, context);\n      case 'renamegroup':\n        return this.renameGroup(graph, payload, context);\n      case 'changegroup':\n        return this.changeGroup(graph, payload, context);\n      default:\n        return this.send('error', new Error(`graph:${topic} not supported`), context);\n    }\n  }\n\n  resolveGraph(payload, context) {\n    if (!payload.graph) {\n      this.send('error', new Error('No graph specified'), context);\n      return;\n    }\n    if (!this.graphs[payload.graph]) {\n      this.send('error', new Error('Requested graph not found'), context);\n      return;\n    }\n    return this.graphs[payload.graph];\n  }\n\n  getLoader(baseDir) {\n    return this.transport.component.getLoader(baseDir, this.transport.options);\n  }\n\n  sendGraph(id, graph, context) {\n    var payload;\n    payload = {\n      graph: id,\n      description: graph.toJSON()\n    };\n    return this.send('graph', payload, context);\n  }\n\n  initGraph(payload, context) {\n    var fullName, graph;\n    if (!payload.id) {\n      this.send('error', new Error('No graph ID provided'), context);\n      return;\n    }\n    if (!payload.name) {\n      payload.name = 'NoFlo runtime';\n    }\n    graph = new noflo.Graph(payload.name);\n    fullName = payload.id;\n    if (payload.library) {\n      payload.library = payload.library.replace('noflo-', '');\n      graph.properties.library = payload.library;\n      fullName = `${payload.library}/${fullName}`;\n    }\n    if (payload.icon) {\n      graph.properties.icon = payload.icon;\n    }\n    if (payload.description) {\n      graph.properties.description = payload.description;\n    }\n    // Pass the project baseDir\n    graph.baseDir = this.transport.options.baseDir;\n    this.subscribeGraph(payload.id, graph, context);\n    if (payload.main) {\n      // Register for runtime exported ports\n      this.transport.runtime.setMainGraph(fullName, graph, context);\n    } else {\n      // Register to component loading\n      this.transport.component.registerGraph(fullName, graph, context);\n    }\n    this.graphs[payload.id] = graph;\n    return this.sendAll('clear', {\n      id: payload.id,\n      name: payload.name,\n      library: payload.library,\n      main: payload.main,\n      icon: payload.icon,\n      description: payload.description\n    }, context);\n  }\n\n  registerGraph(id, graph) {\n    if (id === 'default/main') {\n      this.transport.runtime.setMainGraph(id, graph);\n    }\n    this.subscribeGraph(id, graph, '');\n    return this.graphs[id] = graph;\n  }\n\n  subscribeGraph(id, graph, context) {\n    graph.on('addNode', (node) => {\n      node.graph = id;\n      return this.sendAll('addnode', node, context);\n    });\n    graph.on('removeNode', (node) => {\n      var nodeData;\n      nodeData = {\n        id: node.id,\n        graph: id\n      };\n      return this.sendAll('removenode', nodeData, context);\n    });\n    graph.on('renameNode', (oldId, newId) => {\n      return this.sendAll('renamenode', {\n        from: oldId,\n        to: newId,\n        graph: id\n      }, context);\n    });\n    graph.on('changeNode', (node, before) => {\n      return this.sendAll('changenode', {\n        id: node.id,\n        metadata: node.metadata,\n        graph: id\n      }, context);\n    });\n    graph.on('addEdge', (edge) => {\n      var edgeData;\n      if (typeof edge.from.index !== 'number') {\n        delete edge.from.index;\n      }\n      if (typeof edge.to.index !== 'number') {\n        delete edge.to.index;\n      }\n      edgeData = {\n        src: edge.from,\n        tgt: edge.to,\n        metadata: edge.metadata,\n        graph: id\n      };\n      return this.sendAll('addedge', edgeData, context);\n    });\n    graph.on('removeEdge', (edge) => {\n      var edgeData;\n      edgeData = {\n        src: edge.from,\n        tgt: edge.to,\n        graph: id\n      };\n      return this.sendAll('removeedge', edgeData, context);\n    });\n    graph.on('changeEdge', (edge) => {\n      var edgeData;\n      edgeData = {\n        src: edge.from,\n        tgt: edge.to,\n        metadata: edge.metadata,\n        graph: id\n      };\n      return this.sendAll('changeedge', edgeData, context);\n    });\n    graph.on('addInitial', (iip) => {\n      var iipData;\n      iipData = {\n        src: iip.from,\n        tgt: iip.to,\n        metadata: iip.metadata,\n        graph: id\n      };\n      return this.sendAll('addinitial', iipData, context);\n    });\n    graph.on('removeInitial', (iip) => {\n      var iipData;\n      iipData = {\n        src: iip.from,\n        tgt: iip.to,\n        graph: id\n      };\n      return this.sendAll('removeinitial', iipData, context);\n    });\n    graph.on('addGroup', (group) => {\n      var groupData;\n      groupData = {\n        name: group.name,\n        nodes: group.nodes,\n        metadata: group.metadata,\n        graph: id\n      };\n      return this.sendAll('addgroup', groupData, context);\n    });\n    graph.on('removeGroup', (group) => {\n      var groupData;\n      groupData = {\n        name: group.name,\n        graph: id\n      };\n      return this.sendAll('removegroup', groupData, context);\n    });\n    graph.on('renameGroup', (oldName, newName) => {\n      var groupData;\n      groupData = {\n        from: oldName,\n        to: newName,\n        graph: id\n      };\n      return this.sendAll('renamegroup', groupData, context);\n    });\n    graph.on('changeGroup', (group) => {\n      var groupData;\n      groupData = {\n        name: group.name,\n        metadata: group.metadata,\n        graph: id\n      };\n      return this.sendAll('changegroup', groupData, context);\n    });\n    graph.on('addInport', (publicName, port) => {\n      var data;\n      data = {\n        public: publicName,\n        node: port.process,\n        port: port.port,\n        metadata: port.metadata,\n        graph: id\n      };\n      return this.sendAll('addinport', data, context);\n    });\n    graph.on('addOutport', (publicName, port) => {\n      var data;\n      data = {\n        public: publicName,\n        node: port.process,\n        port: port.port,\n        metadata: port.metadata,\n        graph: id\n      };\n      return this.sendAll('addoutport', data, context);\n    });\n    graph.on('removeInport', (publicName, port) => {\n      var data;\n      data = {\n        public: publicName,\n        graph: id\n      };\n      return this.sendAll('removeinport', data, context);\n    });\n    graph.on('removeOutport', (publicName, port) => {\n      var data;\n      data = {\n        public: publicName,\n        graph: id\n      };\n      return this.sendAll('removeoutport', data, context);\n    });\n    graph.on('renameInport', (oldName, newName) => {\n      var data;\n      data = {\n        from: oldName,\n        to: newName,\n        graph: id\n      };\n      return this.sendAll('renameinport', data, context);\n    });\n    return graph.on('renameOutport', (oldName, newName) => {\n      var data;\n      data = {\n        from: oldName,\n        to: newName,\n        graph: id\n      };\n      return this.sendAll('renameoutport', data, context);\n    });\n  }\n\n  addNode(graph, node, context) {\n    if (!(node.id || node.component)) {\n      this.send('error', new Error('No ID or component supplied'), context);\n      return;\n    }\n    return graph.addNode(node.id, node.component, node.metadata);\n  }\n\n  removeNode(graph, payload, context) {\n    if (!payload.id) {\n      this.send('error', new Error('No ID supplied'), context);\n      return;\n    }\n    return graph.removeNode(payload.id);\n  }\n\n  renameNode(graph, payload, context) {\n    if (!(payload.from || payload.to)) {\n      this.send('error', new Error('No from or to supplied'), context);\n      return;\n    }\n    return graph.renameNode(payload.from, payload.to);\n  }\n\n  changeNode(graph, payload, context) {\n    if (!(payload.id || payload.metadata)) {\n      this.send('error', new Error('No id or metadata supplied'), context);\n      return;\n    }\n    return graph.setNodeMetadata(payload.id, payload.metadata);\n  }\n\n  addEdge(graph, edge, context) {\n    if (!(edge.src || edge.tgt)) {\n      this.send('error', new Error('No src or tgt supplied'), context);\n      return;\n    }\n    if (typeof edge.src.index === 'number' || typeof edge.tgt.index === 'number') {\n      if (graph.addEdgeIndex) {\n        graph.addEdgeIndex(edge.src.node, edge.src.port, edge.src.index, edge.tgt.node, edge.tgt.port, edge.tgt.index, edge.metadata);\n        return;\n      }\n    }\n    return graph.addEdge(edge.src.node, edge.src.port, edge.tgt.node, edge.tgt.port, edge.metadata);\n  }\n\n  removeEdge(graph, edge, context) {\n    if (!(edge.src || edge.tgt)) {\n      this.send('error', new Error('No src or tgt supplied'), context);\n      return;\n    }\n    return graph.removeEdge(edge.src.node, edge.src.port, edge.tgt.node, edge.tgt.port);\n  }\n\n  changeEdge(graph, edge, context) {\n    if (!(edge.src || edge.tgt)) {\n      this.send('error', new Error('No src or tgt supplied'), context);\n      return;\n    }\n    return graph.setEdgeMetadata(edge.src.node, edge.src.port, edge.tgt.node, edge.tgt.port, edge.metadata);\n  }\n\n  addInitial(graph, payload, context) {\n    if (!(payload.src || payload.tgt)) {\n      this.send('error', new Error('No src or tgt supplied'), context);\n      return;\n    }\n    if (graph.addInitialIndex && typeof payload.tgt.index === 'number') {\n      graph.addInitialIndex(payload.src.data, payload.tgt.node, payload.tgt.port, payload.tgt.index, payload.metadata);\n      return;\n    }\n    return graph.addInitial(payload.src.data, payload.tgt.node, payload.tgt.port, payload.metadata);\n  }\n\n  removeInitial(graph, payload, context) {\n    if (!payload.tgt) {\n      this.send('error', new Error('No tgt supplied'), context);\n      return;\n    }\n    return graph.removeInitial(payload.tgt.node, payload.tgt.port);\n  }\n\n  addInport(graph, payload, context) {\n    if (!(payload.public || payload.node || payload.port)) {\n      this.send('error', new Error('Missing exported inport information'), context);\n      return;\n    }\n    return graph.addInport(payload.public, payload.node, payload.port, payload.metadata);\n  }\n\n  removeInport(graph, payload, context) {\n    if (!payload.public) {\n      this.send('error', new Error('Missing exported inport name'), context);\n      return;\n    }\n    return graph.removeInport(payload.public);\n  }\n\n  renameInport(graph, payload, context) {\n    if (!(payload.from || payload.to)) {\n      this.send('error', new Error('No from or to supplied'), context);\n      return;\n    }\n    return graph.renameInport(payload.from, payload.to);\n  }\n\n  addOutport(graph, payload, context) {\n    if (!(payload.public || payload.node || payload.port)) {\n      this.send('error', new Error('Missing exported outport information'), context);\n      return;\n    }\n    return graph.addOutport(payload.public, payload.node, payload.port, payload.metadata);\n  }\n\n  removeOutport(graph, payload, context) {\n    if (!payload.public) {\n      this.send('error', new Error('Missing exported outport name'), context);\n      return;\n    }\n    return graph.removeOutport(payload.public);\n  }\n\n  renameOutport(graph, payload, context) {\n    if (!(payload.from || payload.to)) {\n      this.send('error', new Error('No from or to supplied'), context);\n      return;\n    }\n    return graph.renameOutport(payload.from, payload.to);\n  }\n\n  addGroup(graph, payload, context) {\n    if (!(payload.name || payload.nodes || payload.metadata)) {\n      this.send('error', new Error('No name or nodes or metadata supplied'), context);\n      return;\n    }\n    return graph.addGroup(payload.name, payload.nodes, payload.metadata);\n  }\n\n  removeGroup(graph, payload, context) {\n    if (!payload.name) {\n      this.send('error', new Error('No name supplied'), context);\n      return;\n    }\n    return graph.removeGroup(payload.name);\n  }\n\n  renameGroup(graph, payload, context) {\n    if (!(payload.from || payload.to)) {\n      this.send('error', new Error('No from or to supplied'), context);\n      return;\n    }\n    return graph.renameGroup(payload.from, payload.to);\n  }\n\n  changeGroup(graph, payload, context) {\n    if (!(payload.name || payload.metadata)) {\n      this.send('error', new Error('No name or metadata supplied'), context);\n      return;\n    }\n    return graph.setEdgeMetadata(payload.name, payload.metadata);\n  }\n\n};\n\nmodule.exports = GraphProtocol;\n","var EventEmitter, NetworkProtocol, getConnectionSignature, getEdgeSignature, getPortSignature, getSocketSignature, noflo, prepareSocketEvent;\n\nnoflo = require('noflo');\n\nEventEmitter = require('events').EventEmitter;\n\nprepareSocketEvent = function(event, graphName) {\n  var payload, ref, ref1, ref2;\n  payload = {\n    id: event.id,\n    graph: graphName\n  };\n  if (event.socket.from) {\n    payload.src = {\n      node: event.socket.from.process.id,\n      port: event.socket.from.port\n    };\n  }\n  if (event.socket.to) {\n    payload.tgt = {\n      node: event.socket.to.process.id,\n      port: event.socket.to.port\n    };\n  }\n  if (event.subgraph) {\n    payload.subgraph = event.subgraph;\n  }\n  if (typeof event.group !== 'undefined') {\n    payload.group = event.group;\n  }\n  if (event.datatype) {\n    payload.type = event.datatype;\n  }\n  if (event.schema) {\n    payload.schema = event.schema;\n  }\n  if (typeof event.data !== 'undefined') {\n    if (!noflo.isBrowser()) {\n      if (Buffer.isBuffer(event.data)) {\n        // Make sure we're not trying to serialize the whole buffer to JSON\n        event.data = event.data.slice(0, 20);\n      }\n    }\n    if ((ref = event.data) != null ? ref.toJSON : void 0) {\n      payload.data = event.data.toJSON();\n    }\n    if ((ref1 = event.data) != null ? ref1.toString : void 0) {\n      payload.data = event.data.toString();\n      if (payload.data === '[object Object]') {\n        try {\n          payload.data = JSON.parse(JSON.stringify(event.data));\n        } catch (error1) {}\n      }\n    } else {\n      payload.data = event.data;\n    }\n    if ((ref2 = event.metadata) != null ? ref2.secure : void 0) {\n      // Don't send actual payload for private connections\n      payload.data = 'DATA';\n    }\n  }\n  return payload;\n};\n\ngetPortSignature = function(item) {\n  if (!item) {\n    return '';\n  }\n  return item.process + '(' + item.port + ')';\n};\n\ngetEdgeSignature = function(edge) {\n  return getPortSignature(edge.src) + ' -> ' + getPortSignature(edge.tgt);\n};\n\ngetConnectionSignature = function(connection) {\n  if (!connection) {\n    return '';\n  }\n  return connection.process.id + '(' + connection.port + ')';\n};\n\ngetSocketSignature = function(socket) {\n  return getConnectionSignature(socket.from) + ' -> ' + getConnectionSignature(socket.to);\n};\n\nNetworkProtocol = class NetworkProtocol extends EventEmitter {\n  constructor(transport) {\n    super();\n    this.transport = transport;\n    this.networks = {};\n  }\n\n  send(topic, payload, context) {\n    return this.transport.send('network', topic, payload, context);\n  }\n\n  sendAll(topic, payload) {\n    return this.transport.sendAll('network', topic, payload);\n  }\n\n  receive(topic, payload, context) {\n    var graph;\n    graph = this.resolveGraph(payload, context);\n    if (!graph) {\n      return;\n    }\n    switch (topic) {\n      case 'start':\n        return this.startNetwork(graph, payload, context);\n      case 'stop':\n        return this.stopNetwork(graph, payload, context);\n      case 'edges':\n        return this.updateEdgesFilter(graph, payload, context);\n      case 'debug':\n        return this.debugNetwork(graph, payload, context);\n      case 'getstatus':\n        return this.getStatus(graph, payload, context);\n      default:\n        return this.send('error', new Error(`network:${topic} not supported`), context);\n    }\n  }\n\n  resolveGraph(payload, context) {\n    if (!payload.graph) {\n      this.send('error', new Error('No graph specified'), context);\n      return;\n    }\n    if (!this.transport.graph.graphs[payload.graph]) {\n      this.send('error', new Error('Requested graph not found'), context);\n      return;\n    }\n    return this.transport.graph.graphs[payload.graph];\n  }\n\n  updateEdgesFilter(graph, payload, context) {\n    var edge, j, len, network, ref, signature;\n    network = this.networks[payload.graph];\n    if (network) {\n      network.filters = {};\n    } else {\n      network = {\n        network: null,\n        filters: {}\n      };\n      this.networks[payload.graph] = network;\n    }\n    ref = payload.edges;\n    for (j = 0, len = ref.length; j < len; j++) {\n      edge = ref[j];\n      signature = getEdgeSignature(edge);\n      network.filters[signature] = true;\n    }\n    return this.send('edges', {\n      graph: payload.graph,\n      edges: payload.edges\n    }, context);\n  }\n\n  eventFiltered(graph, event) {\n    var sign;\n    if (!this.transport.options.filterData) {\n      return true;\n    }\n    sign = getSocketSignature(event.socket);\n    return this.networks[graph].filters[sign];\n  }\n\n  initNetwork(graph, graphName, context, callback) {\n    var network, opts;\n    // Ensure we stop previous network\n    if (this.networks[graphName] && this.networks[graphName].network) {\n      network = this.networks[graphName].network;\n      network.stop((err) => {\n        if (err) {\n          return callback(err);\n        }\n        delete this.networks[graphName];\n        this.emit('removenetwork', network, graphName, this.networks);\n        return this.initNetwork(graph, graphName, context, callback);\n      });\n      return;\n    }\n    graph.componentLoader = this.transport.component.getLoader(graph.baseDir, this.transport.options);\n    opts = JSON.parse(JSON.stringify(this.transport.options));\n    opts.delay = true;\n    return noflo.createNetwork(graph, (err, network) => {\n      if (err) {\n        return callback(err);\n      }\n      if (this.networks[graphName] && this.networks[graphName].network) {\n        this.networks[graphName].network = network;\n      } else {\n        this.networks[graphName] = {\n          network: network,\n          filters: {}\n        };\n      }\n      this.emit('addnetwork', network, graphName, this.networks);\n      this.subscribeNetwork(network, graphName, context);\n      // Run the network\n      return network.connect(callback);\n    }, opts);\n  }\n\n  subscribeNetwork(network, graphName, context) {\n    network.on('start', (event) => {\n      return this.sendAll('started', {\n        time: event.start,\n        graph: graphName,\n        running: network.isRunning(),\n        started: network.isStarted()\n      }, context);\n    });\n    network.on('end', (event) => {\n      return this.sendAll('stopped', {\n        time: new Date,\n        uptime: event.uptime,\n        graph: graphName,\n        running: network.isRunning(),\n        started: network.isStarted()\n      }, context);\n    });\n    network.on('icon', (event) => {\n      event.graph = graphName;\n      return this.sendAll('icon', event, context);\n    });\n    network.on('ip', (event) => {\n      var protocolEvent;\n      if (!this.eventFiltered(graphName, event)) {\n        return;\n      }\n      protocolEvent = {\n        id: event.id,\n        socket: event.socket,\n        subgraph: event.subgraph,\n        metadata: event.metadata\n      };\n      switch (event.type) {\n        case 'openBracket':\n          protocolEvent.type = 'begingroup';\n          protocolEvent.group = event.data || '';\n          break;\n        case 'data':\n          protocolEvent.type = 'data';\n          protocolEvent.data = event.data;\n          protocolEvent.datatype = event.datatype;\n          protocolEvent.schema = event.schema;\n          break;\n        case 'closeBracket':\n          protocolEvent.type = 'endgroup';\n          protocolEvent.group = event.data || '';\n      }\n      return this.sendAll(protocolEvent.type, prepareSocketEvent(protocolEvent, graphName), context);\n    });\n    return network.on('process-error', (event) => {\n      var bt, error, i, j, ref;\n      error = event.error.message;\n      // If we can get a backtrace, send 3 levels\n      if (event.error.stack) {\n        bt = event.error.stack.split('\\n');\n        for (i = j = 0, ref = Math.min(bt.length, 3); (0 <= ref ? j <= ref : j >= ref); i = 0 <= ref ? ++j : --j) {\n          error += `\\n${bt[i]}`;\n        }\n      }\n      return this.sendAll('processerror', {\n        id: event.id,\n        error: error,\n        graph: graphName\n      }, context);\n    });\n  }\n\n  _startNetwork(graph, graphName, context, callback) {\n    var doStart, network;\n    doStart = function(net) {\n      return net.start(function(err) {\n        return callback(err);\n      });\n    };\n    network = this.networks[graphName];\n    if (network && network.network) {\n      // already initialized\n      return doStart(network.network);\n    }\n    return this.initNetwork(graph, graphName, context, (err) => {\n      if (err) {\n        return callback(err);\n      }\n      network = this.networks[graphName];\n      return doStart(network.network);\n    });\n  }\n\n  startNetwork(graph, payload, context) {\n    var network;\n    network = this.networks[payload.graph];\n    return this._startNetwork(graph, payload.graph, context, (err) => {\n      if (err) {\n        this.send('error', err, context);\n      }\n    });\n  }\n\n  stopNetwork(graph, payload, context) {\n    var net;\n    if (!this.networks[payload.graph]) {\n      this.send('error', new Error(`Network ${payload.graph} not found`), context);\n      return;\n    }\n    net = this.networks[payload.graph].network;\n    if (!net) {\n      this.send('error', new Error(`Network ${payload.graph} not found`), context);\n      return;\n    }\n    if (net.isStarted()) {\n      this.networks[payload.graph].network.stop((err) => {\n        if (err) {\n          this.send('error', err, context);\n          return;\n        }\n        this.send('stopped', {\n          time: new Date,\n          graph: payload.graph,\n          running: net.isRunning(),\n          started: net.isStarted()\n        }, context);\n      });\n      return;\n    }\n    // Was already stopped, just send the confirmation\n    return this.send('stopped', {\n      time: new Date,\n      graph: payload.graph,\n      running: net.isRunning(),\n      started: net.isStarted()\n    }, context);\n  }\n\n  debugNetwork(graph, payload, context) {\n    var net;\n    if (!this.networks[payload.graph]) {\n      this.send('error', new Error(`Network ${payload.graph} not found`), context);\n      return;\n    }\n    net = this.networks[payload.graph].network;\n    if (!net) {\n      this.send('error', new Error(`Network ${payload.graph} not found`), context);\n      return;\n    }\n    net.setDebug(payload.enable);\n    this.send('setdebug', {\n      enable: payload.enable\n    });\n  }\n\n  getStatus(graph, payload, context) {\n    var net;\n    if (!this.networks[payload.graph]) {\n      this.send('error', new Error(`Network ${payload.graph} not found`), context);\n      return;\n    }\n    net = this.networks[payload.graph].network;\n    if (!net) {\n      this.send('error', new Error(`Network ${payload.graph} not found`), context);\n      return;\n    }\n    return this.send('status', {\n      graph: payload.graph,\n      running: net.isRunning(),\n      started: net.isStarted()\n    }, context);\n  }\n\n};\n\nmodule.exports = NetworkProtocol;\n","var ComponentProtocol, debounce, noflo, utils;\n\nnoflo = require('noflo');\n\ndebounce = require('debounce');\n\nutils = require('../utils');\n\nComponentProtocol = (function() {\n  class ComponentProtocol {\n    constructor(transport) {\n      this.transport = transport;\n    }\n\n    send(topic, payload, context) {\n      return this.transport.send('component', topic, payload, context);\n    }\n\n    receive(topic, payload, context) {\n      switch (topic) {\n        case 'list':\n          return this.listComponents(payload, context);\n        case 'getsource':\n          return this.getSource(payload, context);\n        case 'source':\n          return this.setSource(payload, context);\n        default:\n          return this.send('error', new Error(`component:${topic} not supported`), context);\n      }\n    }\n\n    getLoader(baseDir, options = {}) {\n      if (!this.loaders[baseDir]) {\n        this.loaders[baseDir] = new noflo.ComponentLoader(baseDir, options);\n      }\n      return this.loaders[baseDir];\n    }\n\n    listComponents(payload, context) {\n      var baseDir, loader;\n      baseDir = this.transport.options.baseDir;\n      loader = this.getLoader(baseDir, this.transport.options);\n      return loader.listComponents((err, components) => {\n        var componentNames, processed;\n        if (err) {\n          this.send('error', err, context);\n          return;\n        }\n        componentNames = Object.keys(components);\n        processed = 0;\n        return componentNames.forEach((component) => {\n          return this.processComponent(loader, component, context, (err) => {\n            processed++;\n            if (processed < componentNames.length) {\n              return;\n            }\n            return this.send('componentsready', processed, context);\n          });\n        });\n      });\n    }\n\n    getSource(payload, context) {\n      var baseDir, loader;\n      baseDir = this.transport.options.baseDir;\n      loader = this.getLoader(baseDir, this.transport.options);\n      return loader.getSource(payload.name, (err, component) => {\n        var graph, nameParts;\n        if (err) {\n          // Try one of the registered graphs\n          graph = this.transport.graph.graphs[payload.name];\n          if (graph == null) {\n            this.send('error', err, context);\n            return;\n          }\n          nameParts = utils.parseName(payload.name);\n          return this.send('source', {\n            name: nameParts.name,\n            library: nameParts.library,\n            code: JSON.stringify(graph.toJSON()),\n            language: 'json'\n          }, context);\n        } else {\n          return this.send('source', component, context);\n        }\n      });\n    }\n\n    setSource(payload, context) {\n      var baseDir, loader;\n      baseDir = this.transport.options.baseDir;\n      loader = this.getLoader(baseDir, this.transport.options);\n      return loader.setSource(payload.library, payload.name, payload.code, payload.language, (err) => {\n        if (err) {\n          this.send('error', err, context);\n          return;\n        }\n        return this.processComponent(loader, loader.normalizeName(payload.library, payload.name), context);\n      });\n    }\n\n    processComponent(loader, component, context, callback) {\n      if (!callback) {\n        callback = function() {};\n      }\n      return loader.load(component, (err, instance) => {\n        if (!instance) {\n          if (err instanceof Error) {\n            this.send('error', err, context);\n            return callback(err);\n          }\n          instance = err;\n        }\n        // Ensure graphs are not run automatically when just querying their ports\n        if (!instance.isReady()) {\n          instance.once('ready', () => {\n            this.sendComponent(component, instance, context);\n            return callback(null);\n          });\n          return;\n        }\n        this.sendComponent(component, instance, context);\n        return callback(null);\n      }, true);\n    }\n\n    processPort(portName, port) {\n      var portDef, ref;\n      // Required port properties\n      portDef = {\n        id: portName,\n        type: port.getDataType ? port.getDataType() : 'all'\n      };\n      if (typeof port.getSchema === \"function\" ? port.getSchema() : void 0) {\n        portDef.schema = port.getSchema();\n      }\n      if (port.isRequired) {\n        portDef.required = port.isRequired();\n      }\n      if (port.isAddressable) {\n        portDef.addressable = port.isAddressable();\n      }\n      if (port.getDescription) {\n        portDef.description = port.getDescription();\n      }\n      if ((ref = port.options) != null ? ref.values : void 0) {\n        portDef.values = port.options.values;\n      }\n      if (typeof port.hasDefault === \"function\" ? port.hasDefault() : void 0) {\n        portDef.default = port.options.default;\n      }\n      return portDef;\n    }\n\n    sendComponent(component, instance, context) {\n      var icon, inPorts, outPorts, port, portName, ref, ref1;\n      inPorts = [];\n      outPorts = [];\n      ref = instance.inPorts;\n      for (portName in ref) {\n        port = ref[portName];\n        if (!port || typeof port === 'function' || !port.canAttach) {\n          continue;\n        }\n        inPorts.push(this.processPort(portName, port));\n      }\n      ref1 = instance.outPorts;\n      for (portName in ref1) {\n        port = ref1[portName];\n        if (!port || typeof port === 'function' || !port.canAttach) {\n          continue;\n        }\n        outPorts.push(this.processPort(portName, port));\n      }\n      icon = instance.getIcon ? instance.getIcon() : 'gear';\n      return this.send('component', {\n        name: component,\n        description: instance.description,\n        subgraph: instance.isSubgraph(),\n        icon: icon,\n        inPorts: inPorts,\n        outPorts: outPorts\n      }, context);\n    }\n\n    registerGraph(id, graph, context) {\n      var loader, send, sender;\n      sender = () => {\n        return this.processComponent(loader, id, context);\n      };\n      send = debounce(sender, 10);\n      loader = this.getLoader(graph.baseDir, this.transport.options);\n      loader.listComponents((err, components) => {\n        if (err) {\n          this.send('error', err, context);\n          return;\n        }\n        loader.registerComponent('', id, graph);\n        // Send initial graph info back to client\n        return send();\n      });\n      // Send graph info again every time it changes so we get the updated ports\n      graph.on('addNode', send);\n      graph.on('removeNode', send);\n      graph.on('renameNode', send);\n      graph.on('addEdge', send);\n      graph.on('removeEdge', send);\n      graph.on('addInitial', send);\n      graph.on('removeInitial', send);\n      graph.on('addInport', send);\n      graph.on('removeInport', send);\n      graph.on('renameInport', send);\n      graph.on('addOutport', send);\n      graph.on('removeOutport', send);\n      return graph.on('renameOutport', send);\n    }\n\n  };\n\n  ComponentProtocol.prototype.loaders = {};\n\n  return ComponentProtocol;\n\n}).call(this);\n\nmodule.exports = ComponentProtocol;\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","exports.parseName = function(name) {\n  var nameParts, parsed;\n  if (name.indexOf('/') === -1) {\n    return parsed = {\n      library: null,\n      name: name\n    };\n  }\n  nameParts = name.split('/');\n  return parsed = {\n    library: nameParts[0],\n    name: nameParts[1]\n  };\n};\n","var TraceBuffer, Tracer, clone, debug, e, jsonStringify, networkToTraceEvent, noflo, subscribeExportedOutports;\n\nnoflo = require('noflo');\n\ndebug = require('debug')('noflo-runtime-base:trace');\n\njsonStringify = JSON.stringify;\n\ntry {\n  jsonStringify = require('json-stringify-safe');\n} catch (error) {\n  e = error;\n  console.log(`WARN: failed to load json-stringify-safe, circular objects may cause fail.\\n${e.message}`);\n}\n\nclone = function(obj) {\n  var s;\n  s = jsonStringify(obj);\n  return JSON.parse(s);\n};\n\nTraceBuffer = class TraceBuffer {\n  constructor() {\n    this.events = []; // PERF: use a linked-list variety instead\n  }\n\n  add(event) {\n    // FIXME: respect a (configurable) limit on size https://github.com/noflo/noflo-runtime-base/issues/34\n    return this.events.push(event);\n  }\n\n  getAll(consumeFunc, doneFunc) {\n    var i, len, ref;\n    ref = this.events;\n    for (i = 0, len = ref.length; i < len; i++) {\n      e = ref[i];\n      consumeFunc(e);\n    }\n    return doneFunc(null);\n  }\n\n};\n\nsubscribeExportedOutports = function(network, networkId, eventNames, subscribeFunc) {\n  var component, event, graphSockets, i, internal, len, pub, ref, sendFunc, socket;\n  graphSockets = {};\n  ref = network.graph.outports;\n  // Basically same as code in runtime:data protocol handling\n  for (pub in ref) {\n    internal = ref[pub];\n    socket = noflo.internalSocket.createSocket();\n    graphSockets[pub] = socket;\n    component = network.processes[internal.process].component;\n    component.outPorts[internal.port].attach(socket);\n    sendFunc = function(event) {\n      return function(payload) {\n        var data;\n        data = {\n          id: `EXPORT: ${networkId} ${pub.toUpperCase()\n          // just for debugging\n} ->`,\n          payload: payload,\n          socket: {\n            to: {\n              process: {\n                id: networkId\n              },\n              port: pub\n            }\n          }\n        };\n        return subscribeFunc(event, data);\n      };\n    };\n    for (i = 0, len = eventNames.length; i < len; i++) {\n      event = eventNames[i];\n      socket.on(event, sendFunc(event));\n    }\n  }\n  return graphSockets;\n};\n\n// Convert to flowtrace/FBP-protocol format http://noflojs.org/documentation/protocol/\nnetworkToTraceEvent = function(networkId, type, data) {\n  var event, p, ref, ref1, ref2, ref3, serializeGroup, socket;\n  debug('event', networkId, type, `'${data.id}'`);\n  socket = data.socket;\n  // XXX: wasteful to have the network thing in each event?\n  event = {\n    protocol: 'network',\n    command: type,\n    payload: {\n      time: new Date().toISOString(),\n      graph: networkId,\n      error: null, // used to indicate tracing errors\n      src: {\n        node: (ref = socket.from) != null ? ref.process.id : void 0,\n        port: (ref1 = socket.from) != null ? ref1.port : void 0\n      },\n      tgt: {\n        node: (ref2 = socket.to) != null ? ref2.process.id : void 0,\n        port: (ref3 = socket.to) != null ? ref3.port : void 0\n      },\n      id: void 0, // deprecated\n      subgraph: void 0 // TODO: implement\n    }\n  };\n  serializeGroup = function(p) {\n    try {\n      return p.group = data.group.toString();\n    } catch (error) {\n      e = error;\n      debug('group serialization error', e);\n      return p.error = e.message;\n    }\n  };\n  p = event.payload;\n  switch (type) {\n    case 'connect':\n      null;\n      break;\n    case 'disconnect':\n      null;\n      break;\n    case 'begingroup':\n      serializeGroup(event.payload);\n      break;\n    case 'endgroup':\n      serializeGroup(event.payload);\n      break;\n    case 'data':\n      try {\n        p.data = clone(data.data);\n      } catch (error) {\n        e = error;\n        debug('data serialization error', e);\n        p.error = e.message;\n      }\n      break;\n    default:\n      throw new Error(`trace: Unknown event type ${type}`);\n  }\n  debug('event done', networkId, type, `'${data.id}'`);\n  return event;\n};\n\n// Can be attached() to a NoFlo network, and keeps a circular buffer of events\n// which can be persisted on request\nTracer = class Tracer {\n  constructor(options) {\n    this.options = options;\n    this.buffer = new TraceBuffer;\n    this.header = {\n      graphs: {}\n    };\n  }\n\n  attach(network) {\n    var eventNames, netId, sockets;\n    // FIXME: graphs loaded from .fbp don't have name. Should default to basename of file, and be configurable\n    netId = network.graph.name || network.graph.properties.name || 'default';\n    debug('attach', netId);\n    eventNames = ['connect', 'begingroup', 'data', 'endgroup', 'disconnect'];\n    // internal network events\n    eventNames.forEach((event) => {\n      return network.on(event, (data) => {\n        var payload;\n        payload = networkToTraceEvent(netId, event, data);\n        return this.buffer.add(payload);\n      });\n    });\n    // exported outport\n    sockets = subscribeExportedOutports(network, netId, eventNames, (event, data) => {\n      var payload;\n      payload = networkToTraceEvent(netId, event, data);\n      return this.buffer.add(payload);\n    });\n    return this.header.graphs[netId] = network.graph.toJSON();\n  }\n\n  detach(network) {}\n\n  // Serialize current content of buffer\n  // TODO: implement\n  dumpString(callback) {\n    var consume, events;\n    events = [];\n    consume = function(e) {\n      return events.push(e);\n    };\n    return this.buffer.getAll(consume, (err) => {\n      var trace;\n      trace = {\n        header: this.header,\n        events: events\n      };\n      return callback(err, JSON.stringify(trace, null, 2));\n    });\n  }\n\n  // node.js only\n  dumpFile(filepath, callback) {\n    var fs, openFile, temp;\n    fs = require('fs');\n    temp = require('temp');\n    openFile = function(cb) {\n      return fs.open(filepath, 'w', function(err, fd) {\n        return cb(err, {\n          path: filepath,\n          fd: fd\n        });\n      });\n    };\n    if (!filepath) {\n      openFile = function(cb) {\n        return temp.open({\n          suffix: '.json'\n        }, cb);\n      };\n    }\n    return openFile((err, info) => {\n      var events, header, write, writeEvent;\n      if (err) {\n        return callback(err);\n      }\n      // HACKY json streaming serialization\n      events = 0;\n      write = function(data, cb) {\n        return fs.write(info.fd, data, {\n          encoding: 'utf-8'\n        }, cb);\n      };\n      writeEvent = function(e) {\n        var s;\n        s = events ? ',' : '';\n        events += 1;\n        s += JSON.stringify(e, null, 2);\n        return write(s, function(err) {});\n      };\n      // FIXME: handle, wait\n      debug('streaming to file', info.path);\n      header = JSON.stringify(this.header, null, 2);\n      return write(`{\\n \"header\": ${header}\\n, \"events\":\\n[`, (err) => {\n        return this.buffer.getAll(writeEvent, function(err) {\n          if (err) {\n            return callback(err);\n          }\n          debug(`streamed ${events} events`);\n          return write(']\\n }', function(err) {\n            debug(\"completed stream\", info.path);\n            return callback(err, info.path);\n          });\n        });\n      });\n    });\n  }\n\n};\n\nmodule.exports.Tracer = Tracer;\n","exports = module.exports = stringify\nexports.getSerialize = serializer\n\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)\n}\n\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [], keys = []\n\n  if (cycleReplacer == null) cycleReplacer = function(key, value) {\n    if (stack[0] === value) return \"[Circular ~]\"\n    return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join(\".\") + \"]\"\n  }\n\n  return function(key, value) {\n    if (stack.length > 0) {\n      var thisPos = stack.indexOf(this)\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)\n      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)\n    }\n    else stack.push(value)\n\n    return replacer == null ? value : replacer.call(this, key, value)\n  }\n}\n","var fs   = require('fs'),\n    path = require('path'),\n    cnst = require('constants');\n\nvar rimraf     = require('rimraf'),\n    osTmpdir   = require('os-tmpdir'),\n    rimrafSync = rimraf.sync;\n\n/* HELPERS */\n\nvar RDWR_EXCL = cnst.O_CREAT | cnst.O_TRUNC | cnst.O_RDWR | cnst.O_EXCL;\n\nvar generateName = function(rawAffixes, defaultPrefix) {\n  var affixes = parseAffixes(rawAffixes, defaultPrefix);\n  var now = new Date();\n  var name = [affixes.prefix,\n              now.getYear(), now.getMonth(), now.getDate(),\n              '-',\n              process.pid,\n              '-',\n              (Math.random() * 0x100000000 + 1).toString(36),\n              affixes.suffix].join('');\n  return path.join(affixes.dir || exports.dir, name);\n};\n\nvar parseAffixes = function(rawAffixes, defaultPrefix) {\n  var affixes = {prefix: null, suffix: null};\n  if(rawAffixes) {\n    switch (typeof(rawAffixes)) {\n    case 'string':\n      affixes.prefix = rawAffixes;\n      break;\n    case 'object':\n      affixes = rawAffixes;\n      break;\n    default:\n      throw new Error(\"Unknown affix declaration: \" + affixes);\n    }\n  } else {\n    affixes.prefix = defaultPrefix;\n  }\n  return affixes;\n};\n\n/* -------------------------------------------------------------------------\n * Don't forget to call track() if you want file tracking and exit handlers!\n * -------------------------------------------------------------------------\n * When any temp file or directory is created, it is added to filesToDelete\n * or dirsToDelete. The first time any temp file is created, a listener is\n * added to remove all temp files and directories at exit.\n */\nvar tracking = false;\nvar track = function(value) {\n  tracking = (value !== false);\n  return module.exports; // chainable\n};\nvar exitListenerAttached = false;\nvar filesToDelete = [];\nvar dirsToDelete = [];\n\nfunction deleteFileOnExit(filePath) {\n  if (!tracking) return false;\n  attachExitListener();\n  filesToDelete.push(filePath);\n}\n\nfunction deleteDirOnExit(dirPath) {\n  if (!tracking) return false;\n  attachExitListener();\n  dirsToDelete.push(dirPath);\n}\n\nfunction attachExitListener() {\n  if (!tracking) return false;\n  if (!exitListenerAttached) {\n    process.addListener('exit', cleanupSync);\n    exitListenerAttached = true;\n  }\n}\n\nfunction cleanupFilesSync() {\n  if (!tracking) {\n    return false;\n  }\n  var count = 0;\n  var toDelete;\n  while ((toDelete = filesToDelete.shift()) !== undefined) {\n    rimrafSync(toDelete);\n    count++;\n  }\n  return count;\n}\n\nfunction cleanupFiles(callback) {\n  if (!tracking) {\n    if (callback) {\n      callback(new Error(\"not tracking\"));\n    }\n    return;\n  }\n  var count = 0;\n  var left = filesToDelete.length;\n  if (!left) {\n    if (callback) {\n      callback(null, count);\n    }\n    return;\n  }\n  var toDelete;\n  var rimrafCallback = function(err) {\n    if (!left) {\n      // Prevent processing if aborted\n      return;\n    }\n    if (err) {\n      // This shouldn't happen; pass error to callback and abort\n      // processing\n      if (callback) {\n        callback(err);\n      }\n      left = 0;\n      return;\n    } else {\n      count++;\n    }\n    left--;\n    if (!left && callback) {\n      callback(null, count);\n    }\n  };\n  while ((toDelete = filesToDelete.shift()) !== undefined) {\n    rimraf(toDelete, rimrafCallback);\n  }\n}\n\nfunction cleanupDirsSync() {\n  if (!tracking) {\n    return false;\n  }\n  var count = 0;\n  var toDelete;\n  while ((toDelete = dirsToDelete.shift()) !== undefined) {\n    rimrafSync(toDelete);\n    count++;\n  }\n  return count;\n}\n\nfunction cleanupDirs(callback) {\n  if (!tracking) {\n    if (callback) {\n      callback(new Error(\"not tracking\"));\n    }\n    return;\n  }\n  var count = 0;\n  var left = dirsToDelete.length;\n  if (!left) {\n    if (callback) {\n      callback(null, count);\n    }\n    return;\n  }\n  var toDelete;\n  var rimrafCallback = function (err) {\n    if (!left) {\n      // Prevent processing if aborted\n      return;\n    }\n    if (err) {\n      // rimraf handles most \"normal\" errors; pass the error to the\n      // callback and abort processing\n      if (callback) {\n        callback(err, count);\n      }\n      left = 0;\n      return;\n    } else {\n      count;\n    }\n    left--;\n    if (!left && callback) {\n      callback(null, count);\n    }\n  };\n  while ((toDelete = dirsToDelete.shift()) !== undefined) {\n    rimraf(toDelete, rimrafCallback);\n  }\n}\n\nfunction cleanupSync() {\n  if (!tracking) {\n    return false;\n  }\n  var fileCount = cleanupFilesSync();\n  var dirCount  = cleanupDirsSync();\n  return {files: fileCount, dirs: dirCount};\n}\n\nfunction cleanup(callback) {\n  if (!tracking) {\n    if (callback) {\n      callback(new Error(\"not tracking\"));\n    }\n    return;\n  }\n  cleanupFiles(function(fileErr, fileCount) {\n    if (fileErr) {\n      if (callback) {\n        callback(fileErr, {files: fileCount})\n      }\n    } else {\n      cleanupDirs(function(dirErr, dirCount) {\n        if (callback) {\n          callback(dirErr, {files: fileCount, dirs: dirCount});\n        }\n      });\n    }\n  });\n}\n\n/* DIRECTORIES */\n\nfunction mkdir(affixes, callback) {\n  var dirPath = generateName(affixes, 'd-');\n  fs.mkdir(dirPath, 0700, function(err) {\n    if (!err) {\n      deleteDirOnExit(dirPath);\n    }\n    if (callback) {\n      callback(err, dirPath);\n    }\n  });\n}\n\nfunction mkdirSync(affixes) {\n  var dirPath = generateName(affixes, 'd-');\n  fs.mkdirSync(dirPath, 0700);\n  deleteDirOnExit(dirPath);\n  return dirPath;\n}\n\n/* FILES */\n\nfunction open(affixes, callback) {\n  var filePath = generateName(affixes, 'f-');\n  fs.open(filePath, RDWR_EXCL, 0600, function(err, fd) {\n    if (!err) {\n      deleteFileOnExit(filePath);\n    }\n    if (callback) {\n      callback(err, {path: filePath, fd: fd});\n    }\n  });\n}\n\nfunction openSync(affixes) {\n  var filePath = generateName(affixes, 'f-');\n  var fd = fs.openSync(filePath, RDWR_EXCL, 0600);\n  deleteFileOnExit(filePath);\n  return {path: filePath, fd: fd};\n}\n\nfunction createWriteStream(affixes) {\n  var filePath = generateName(affixes, 's-');\n  var stream = fs.createWriteStream(filePath, {flags: RDWR_EXCL, mode: 0600});\n  deleteFileOnExit(filePath);\n  return stream;\n}\n\n/* EXPORTS */\n// Settings\nexports.dir               = path.resolve(osTmpdir());\nexports.track             = track;\n// Functions\nexports.mkdir             = mkdir;\nexports.mkdirSync         = mkdirSync;\nexports.open              = open;\nexports.openSync          = openSync;\nexports.path              = generateName;\nexports.cleanup           = cleanup;\nexports.cleanupSync       = cleanupSync;\nexports.createWriteStream = createWriteStream;\n","module.exports = rimraf\nrimraf.sync = rimrafSync\n\nvar assert = require(\"assert\")\nvar path = require(\"path\")\nvar fs = require(\"fs\")\n\n// for EMFILE handling\nvar timeout = 0\nexports.EMFILE_MAX = 1000\nexports.BUSYTRIES_MAX = 3\n\nvar isWindows = (process.platform === \"win32\")\n\nfunction defaults (options) {\n  var methods = [\n    'unlink',\n    'chmod',\n    'stat',\n    'rmdir',\n    'readdir'\n  ]\n  methods.forEach(function(m) {\n    options[m] = options[m] || fs[m]\n    m = m + 'Sync'\n    options[m] = options[m] || fs[m]\n  })\n}\n\nfunction rimraf (p, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = {}\n  }\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n\n  defaults(options)\n\n  if (!cb) throw new Error(\"No callback passed to rimraf()\")\n\n  var busyTries = 0\n  rimraf_(p, options, function CB (er) {\n    if (er) {\n      if (isWindows && (er.code === \"EBUSY\" || er.code === \"ENOTEMPTY\") &&\n          busyTries < exports.BUSYTRIES_MAX) {\n        busyTries ++\n        var time = busyTries * 100\n        // try again, with the same exact callback as this one.\n        return setTimeout(function () {\n          rimraf_(p, options, CB)\n        }, time)\n      }\n\n      // this one won't happen if graceful-fs is used.\n      if (er.code === \"EMFILE\" && timeout < exports.EMFILE_MAX) {\n        return setTimeout(function () {\n          rimraf_(p, options, CB)\n        }, timeout ++)\n      }\n\n      // already gone\n      if (er.code === \"ENOENT\") er = null\n    }\n\n    timeout = 0\n    cb(er)\n  })\n}\n\n// Two possible strategies.\n// 1. Assume it's a file.  unlink it, then do the dir stuff on EPERM or EISDIR\n// 2. Assume it's a directory.  readdir, then do the file stuff on ENOTDIR\n//\n// Both result in an extra syscall when you guess wrong.  However, there\n// are likely far more normal files in the world than directories.  This\n// is based on the assumption that a the average number of files per\n// directory is >= 1.\n//\n// If anyone ever complains about this, then I guess the strategy could\n// be made configurable somehow.  But until then, YAGNI.\nfunction rimraf_ (p, options, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n\n  options.unlink(p, function (er) {\n    if (er) {\n      if (er.code === \"ENOENT\")\n        return cb(null)\n      if (er.code === \"EPERM\")\n        return (isWindows)\n          ? fixWinEPERM(p, options, er, cb)\n          : rmdir(p, options, er, cb)\n      if (er.code === \"EISDIR\")\n        return rmdir(p, options, er, cb)\n    }\n    return cb(er)\n  })\n}\n\nfunction fixWinEPERM (p, options, er, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n  if (er)\n    assert(er instanceof Error)\n\n  options.chmod(p, 666, function (er2) {\n    if (er2)\n      cb(er2.code === \"ENOENT\" ? null : er)\n    else\n      options.stat(p, function(er3, stats) {\n        if (er3)\n          cb(er3.code === \"ENOENT\" ? null : er)\n        else if (stats.isDirectory())\n          rmdir(p, options, er, cb)\n        else\n          options.unlink(p, cb)\n      })\n  })\n}\n\nfunction fixWinEPERMSync (p, options, er) {\n  assert(p)\n  assert(options)\n  if (er)\n    assert(er instanceof Error)\n\n  try {\n    options.chmodSync(p, 666)\n  } catch (er2) {\n    if (er2.code === \"ENOENT\")\n      return\n    else\n      throw er\n  }\n\n  try {\n    var stats = options.statSync(p)\n  } catch (er3) {\n    if (er3.code === \"ENOENT\")\n      return\n    else\n      throw er\n  }\n\n  if (stats.isDirectory())\n    rmdirSync(p, options, er)\n  else\n    options.unlinkSync(p)\n}\n\nfunction rmdir (p, options, originalEr, cb) {\n  assert(p)\n  assert(options)\n  if (originalEr)\n    assert(originalEr instanceof Error)\n  assert(typeof cb === 'function')\n\n  // try to rmdir first, and only readdir on ENOTEMPTY or EEXIST (SunOS)\n  // if we guessed wrong, and it's not a directory, then\n  // raise the original error.\n  options.rmdir(p, function (er) {\n    if (er && (er.code === \"ENOTEMPTY\" || er.code === \"EEXIST\" || er.code === \"EPERM\"))\n      rmkids(p, options, cb)\n    else if (er && er.code === \"ENOTDIR\")\n      cb(originalEr)\n    else\n      cb(er)\n  })\n}\n\nfunction rmkids(p, options, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n\n  options.readdir(p, function (er, files) {\n    if (er)\n      return cb(er)\n    var n = files.length\n    if (n === 0)\n      return options.rmdir(p, cb)\n    var errState\n    files.forEach(function (f) {\n      rimraf(path.join(p, f), options, function (er) {\n        if (errState)\n          return\n        if (er)\n          return cb(errState = er)\n        if (--n === 0)\n          options.rmdir(p, cb)\n      })\n    })\n  })\n}\n\n// this looks simpler, and is strictly *faster*, but will\n// tie up the JavaScript thread and fail on excessively\n// deep directory trees.\nfunction rimrafSync (p, options) {\n  options = options || {}\n  defaults(options)\n\n  assert(p)\n  assert(options)\n\n  try {\n    options.unlinkSync(p)\n  } catch (er) {\n    if (er.code === \"ENOENT\")\n      return\n    if (er.code === \"EPERM\")\n      return isWindows ? fixWinEPERMSync(p, options, er) : rmdirSync(p, options, er)\n    if (er.code !== \"EISDIR\")\n      throw er\n    rmdirSync(p, options, er)\n  }\n}\n\nfunction rmdirSync (p, options, originalEr) {\n  assert(p)\n  assert(options)\n  if (originalEr)\n    assert(originalEr instanceof Error)\n\n  try {\n    options.rmdirSync(p)\n  } catch (er) {\n    if (er.code === \"ENOENT\")\n      return\n    if (er.code === \"ENOTDIR\")\n      throw originalEr\n    if (er.code === \"ENOTEMPTY\" || er.code === \"EEXIST\" || er.code === \"EPERM\")\n      rmkidsSync(p, options)\n  }\n}\n\nfunction rmkidsSync (p, options) {\n  assert(p)\n  assert(options)\n  options.readdirSync(p).forEach(function (f) {\n    rimrafSync(path.join(p, f), options)\n  })\n  options.rmdirSync(p, options)\n}\n","'use strict';\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n","'use strict';\nvar isWindows = process.platform === 'win32';\nvar trailingSlashRe = isWindows ? /[^:]\\\\$/ : /.\\/$/;\n\n// https://github.com/nodejs/node/blob/3e7a14381497a3b73dda68d05b5130563cdab420/lib/os.js#L25-L43\nmodule.exports = function () {\n\tvar path;\n\n\tif (isWindows) {\n\t\tpath = process.env.TEMP ||\n\t\t\tprocess.env.TMP ||\n\t\t\t(process.env.SystemRoot || process.env.windir) + '\\\\temp';\n\t} else {\n\t\tpath = process.env.TMPDIR ||\n\t\t\tprocess.env.TMP ||\n\t\t\tprocess.env.TEMP ||\n\t\t\t'/tmp';\n\t}\n\n\tif (trailingSlashRe.test(path)) {\n\t\tpath = path.slice(0, -1);\n\t}\n\n\treturn path;\n};\n","var Base, DirectClient, DirectRuntime, EventEmitter, isBrowser;\n\nisBrowser = function() {\n  return !(typeof process !== 'undefined' && process.execPath && process.execPath.indexOf('node') !== -1);\n};\n\nBase = require('./Base');\n\nEventEmitter = require('events').EventEmitter;\n\nDirectRuntime = class DirectRuntime extends Base {\n  constructor(options) {\n    super(options);\n    this.clients = [];\n  }\n\n  _connect(client) {\n    this.clients.push(client);\n    return client.on('send', (msg) => {\n      // Capture context\n      return this._receive(msg, {\n        client: client\n      });\n    });\n  }\n\n  _disconnect(client) {\n    if (this.clients.indexOf(client) === -1) {\n      return;\n    }\n    this.clients.splice(this.clients.indexOf(client), 1);\n    return client.removeAllListeners('send'); // XXX: a bit heavy\n  }\n\n  _receive(msg, context) {\n    // Forward to Base\n    return this.receive(msg.protocol, msg.command, msg.payload, context);\n  }\n\n  send(protocol, topic, payload, context) {\n    var m;\n    if (!context.client) {\n      return;\n    }\n    m = {\n      protocol: protocol,\n      command: topic,\n      payload: payload\n    };\n    return context.client._receive(m);\n  }\n\n  sendAll(protocol, topic, payload) {\n    var client, i, len, m, ref, results;\n    m = {\n      protocol: protocol,\n      command: topic,\n      payload: payload\n    };\n    ref = this.clients;\n    results = [];\n    for (i = 0, len = ref.length; i < len; i++) {\n      client = ref[i];\n      results.push(client._receive(m));\n    }\n    return results;\n  }\n\n};\n\n\n// Mostly used for testing\nDirectClient = class DirectClient extends EventEmitter {\n  constructor(runtime, name) {\n    super();\n    this.name = name;\n    this.runtime = runtime;\n    if (!this.name) {\n      this.name = 'Unnamed client';\n    }\n  }\n\n  connect() {\n    return this.runtime._connect(this);\n  }\n\n  disconnect() {\n    return this.runtime._disconnect(this);\n  }\n\n  send(protocol, topic, payload) {\n    var m;\n    m = {\n      protocol: protocol,\n      command: topic,\n      payload: payload\n    };\n    return this.emit('send', m);\n  }\n\n  _receive(message) {\n    return setTimeout(() => {\n      return this.emit('message', message);\n    }, 1);\n  }\n\n};\n\nexports.Client = DirectClient;\n\nexports.Runtime = DirectRuntime;\n","const PostMessage = require('./postmessage');\nconst utils = require('./utils');\n\nclass IframeRuntime extends PostMessage {\n  constructor(options) {\n    super(options);\n    this.setClient(window.parent);\n  }\n}\n\nmodule.exports = function (options) {\n  const normalizedOptions = utils.normalizeOptions(options);\n  const runtime = new IframeRuntime(normalizedOptions);\n  utils.subscribe(window, (msg, metadata) => {\n    if (msg.protocol === 'iframe' && msg.command === 'setcontent') {\n      document.body.innerHTML = msg.payload;\n      return;\n    }\n    runtime.receive(msg.protocol, msg.command, msg.payload, {\n      href: metadata.origin,\n    });\n  });\n  return runtime;\n};\n","const PostMessage = require('./postmessage');\nconst utils = require('./utils');\n\nclass OpenerRuntime extends PostMessage {\n  constructor(options, button) {\n    super(options);\n    if (button) {\n      button.addEventListener('click', (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        this.openClient(button.getAttribute('href'));\n      });\n    }\n  }\n\n  openClient(url) {\n    const client = window.open(url, '_blank');\n    if (!client) {\n      throw new Error(`Unable to open client window at '${url}'`);\n    }\n    this.context = {\n      href: '*',\n    };\n    const handleMessage = function (message) {\n      let { data } = message;\n      if (typeof message.data === 'string') {\n        data = JSON.parse(message.data);\n      }\n\n      if (!data.protocol || !data.command) {\n        return;\n      }\n      this.receive(data.protocol, data.command, data.payload, this.context);\n    }.bind(this);\n    const closeCheck = setInterval(() => {\n      if (!client || client.closed) {\n        // Client window was closed\n        this.setClient(null);\n        window.removeEventListener('message', handleMessage);\n        clearInterval(closeCheck);\n      }\n    }, 1000);\n\n    // Register client window and subscribe to messages\n    this.setClient(client);\n    window.addEventListener('message', handleMessage);\n  }\n}\n\nmodule.exports = function (options, button) {\n  const normalizedOptions = utils.normalizeOptions(options);\n  const runtime = new OpenerRuntime(normalizedOptions, button);\n  return runtime;\n};\n","const noflo = require('noflo');\nconst postMessageRuntime = require('noflo-runtime-postmessage');\n\nconst exported = {\n  noflo,\n  'noflo-runtime-postmessage': postMessageRuntime,\n};\n\nfunction requireModule(moduleName) {\n  if (exported[moduleName]) {\n    return exported[moduleName];\n  }\n  throw new Error(`Module ${moduleName} not available`);\n}\n\nif (window) {\n  window.require = requireModule;\n}\n"],"sourceRoot":""}